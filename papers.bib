% Encoding: UTF-8

@InProceedings{Ujhazi-etal_2010,
  author       = {{\'U}jh{\'a}zi, B{\'e}la and Ferenc, Rudolf and Poshyvanyk, Denys and Gyim{\'o}thy, Tibor},
  title        = {New conceptual coupling and cohesion metrics for object-oriented systems},
  booktitle    = {10th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM)},
  year         = {2010},
  pages        = {33--42},
  organization = {IEEE},
  doi          = {10.1109/SCAM.2010.14},
  file         = {:Ujhazi-etal_2010.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5601833},
}

@Article{Aalst-etal_2004,
  Title                    = {Workflow mining: discovering process models from event logs},
  Author                   = {van der Aalst, W. and Weijters, T. and Maruster, L.},
  Journal                  = {IEEE Transactions on Knowledge and Data Engineering},
  Year                     = {2004},
  Number                   = {9},
  Pages                    = {1128--1142},
  Volume                   = {16},
  Abstract                 = {Contemporary workflow management systems are driven by explicit process models, i.e., a completely specified workflow design is required in order to enact a given workflow process. Creating a workflow design is a complicated time-consuming process and, typically, there are discrepancies between the actual workflow processes and the processes as perceived by the management. Therefore, we have developed techniques for discovering workflow models. The starting point for such techniques is a so-called "workflow log" containing information about the workflow process as it is actually being executed. We present a new algorithm to extract a process model from such a log and represent it in terms of a Petri net. However, we also demonstrate that it is not possible to discover arbitrary workflow processes. We explore a class of workflow processes that can be discovered. We show that the {\OE}$\pm$-algorithm can successfully mine any workflow represented by a so-called SWF-net.},
  Booktitle                = {Knowledge and Data Engineering, IEEE Transactions on},
  DOI                      = {10.1109/TKDE.2004.47},
  File                     = {:Aalst-etal_2004.pdf:PDF},
  ISSN                     = {1041-4347},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:41:00},
  Publisher                = {IEEE Computer Society},
  Timestamp                = {2014.11.27}
}

@InProceedings{Abadi-etal_2008,
  author    = {Abadi, A. and Nisenson, M. and Simionovici, Y.},
  title     = {A Traceability Technique for Specifications},
  booktitle = {16th IEEE International Conference on Program Comprehension (ICPC)},
  year      = {2008},
  pages     = {103--112},
  doi       = {10.1109/ICPC.2008.30},
  file      = {:Abadi-etal_2008.pdf:PDF},
  issn      = {1092-8138},
  keywords  = {formal specification;information retrieval;software maintenance;system documentation;dimensionality reduction methods;documentation;information retrieval techniques;information theoretic approaches;probabilistic approaches;software life cycle;specifications;standard vector space model;traceability technique;Code standards;Documentation;Functional analysis;Information analysis;Information retrieval;Large scale integration;Manuals;Performance analysis;Programming;Software systems;Information Retrieval;Link;Software;Specifications;Traceability},
}

@InProceedings{Abebe-etal_2009,
  Title                    = {Analyzing the Evolution of the Source Code Vocabulary},
  Author                   = {Abebe, Surafel Lemma and Haiduc, Sonia and Marcus, Andrian and Tonella, Paolo and Antoniol, Giuliano},
  Booktitle                = {Proceedings of the 2009 European Conference on Software Maintenance and Reengineering},
  Year                     = {2009},
  Pages                    = {189--198},
  Publisher                = {IEEE Computer Society},
  Series                   = {CSMR '09},
  Acmid                    = {1545438},
  DOI                      = {10.1109/CSMR.2009.61},
  File                     = {:Abebe-etal_2009.pdf:PDF},
  ISBN                     = {978-0-7695-3589-0},
  Numpages                 = {10},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=4812752}
}

@InProceedings{Ackerman-Halverson_1998,
  author    = {Ackerman, Mark S. and Halverson, Christine},
  title     = {Considering an organization's memory},
  booktitle = {Proceedings of the 1998 ACM conference on Computer supported cooperative work},
  year      = {1998},
  series    = {CSCW '98},
  pages     = {39--48},
  publisher = {ACM},
  abstract  = {An abstract is not available.},
  doi       = {10.1145/289444.289461},
  file      = {:Ackerman-Halverson_1998.pdf:PDF},
  isbn      = {1-58113-009-0},
  owner     = {cscorley},
  posted-at = {2012-07-26 15:16:54},
  timestamp = {2014.11.27},
}

@InCollection{Agrawal-etal_1998,
  author    = {Agrawal, Rakesh and Gunopulos, Dimitrios and Leymann, Frank},
  title     = {Mining process models from workflow logs},
  booktitle = {Advances in Database Technology},
  publisher = {Springer Berlin / Heidelberg},
  year      = {1998},
  editor    = {Schek, Hans-J\"{o}rg and Alonso, Gustavo and Saltor, Felix and Ramos, Isidro},
  volume    = {1377},
  series    = {Lecture Notes in Computer Science},
  chapter   = {31},
  pages     = {467--483},
  isbn      = {978-3-540-64264-0},
  abstract  = {Modern enterprises increasingly use the workflow paradigm to prescribe how business processes should be performed. Processes are typically modeled as annotated activity graphs. We present an approach for a system that constructs process models from logs of past, unstructured executions of the given process. The graph so produced conforms to the dependencies and past executions present in the log. By providing models that capture the previous executions of the process, this technique allows easier introduction of a workflow system and evaluation and evolution of existing process models. We also present results from applying the algorithm to synthetic data sets as well as process logs obtained from an IBM Flowmark installation.},
  doi       = {10.1007/BFb0101003},
  file      = {:Agrawal-etal_1998.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Ali-etal_2012,
  author    = {Ali, Nasir and Sabane, Aminata and Gueheneuc, Yann-Gael and Antoniol, Giuliano},
  title     = {Improving Bug Location Using Binary Class Relationships},
  booktitle = {IEEE 12th International Working Conference on Source Code Analysis and Manipulation},
  year      = {2012},
  pages     = {174--183},
  publisher = {Institute of Electrical \& Electronics Engineers (IEEE)},
  doi       = {10.1109/scam.2012.26},
  file      = {:Ali-etal_2012.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2015.03.25},
  url       = {http://dx.doi.org/10.1109/SCAM.2012.26},
}

@InProceedings{Alipour-etal_2013,
  Title                    = {A contextual approach towards more accurate duplicate bug report detection},
  Author                   = {Alipour, Anahita and Hindle, Abram and Stroulia, Eleni},
  Booktitle                = {Proc.\ 10th Working Conf.\ on Mining Software Repositories},
  Year                     = {2013},
  Pages                    = {183--192},
  File                     = {:Alipour-etal_2013.pdf:PDF},
  URL                      = {http://dl.acm.org.libdata.lib.ua.edu/citation.cfm?id=2487123}
}

@InProceedings{Alonso-etal_2008,
  author    = {Alonso, Omar and Devanbu, Premkumar T. and Gertz, Michael},
  title     = {Expertise identification and visualization from CVS},
  booktitle = {Proceedings of the 2008 international working conference on Mining software repositories},
  year      = {2008},
  series    = {MSR '08},
  pages     = {125--128},
  publisher = {ACM},
  abstract  = {As software evolves over time, the identification of expertise becomes an important problem. Component ownership and team awareness of such ownership are signals of solid project. Ownership and ownership awareness are also issues in open-source software (OSS) projects. Indeed, the membership in OSS projects is dynamic with team members arriving and leaving. In large open source projects, specialists who know the system very well are considered experts. How can one identify the experts in a project by mining a particular repository like the source code? Have they gotten help from other people? We provide an approach using classification of the source code tree as a path to derive the expertise of the committers. Because committers may get help from other people, we also retrieve their contributors. We also provide a visualization that helps to further explore the repository via committers and categories. We present a prototype implementation that describes our research using the Apache HTTP Web server project as a case study.},
  doi       = {10.1145/1370750.1370780},
  file      = {:Alonso-etal_2008.pdf:PDF},
  isbn      = {978-1-60558-024-1},
  owner     = {cscorley},
  posted-at = {2012-07-17 22:17:43},
  timestamp = {2014.11.27},
}

@InProceedings{AlSumait-etal_2008,
  Title                    = {On-line {LDA}: Adaptive Topic Models for Mining Text Streams with Applications to Topic Detection and Tracking},
  Author                   = {AlSumait, Loulwah and Barbar\'{a}, Daniel and Domeniconi, Carlotta},
  Booktitle                = {Proceedings of the 2008 Eighth IEEE International Conference on Data Mining},
  Year                     = {2008},
  Pages                    = {3--12},
  Publisher                = {IEEE Computer Society},
  Series                   = {ICDM '08},
  Acmid                    = {1511296},
  DOI                      = {10.1109/ICDM.2008.140},
  File                     = {:AlSumait-etal_2008.pdf:PDF},
  ISBN                     = {978-0-7695-3502-9},
  Numpages                 = {10},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://cs.gmu.edu/~carlotta/publications/AlsumaitL_onlineLDA.pdf}
}

@Article{Andrieu-etal_2003,
  author    = {Christophe Andrieu and Nando De Freitas and Arnaud Doucet and Michael Jordan},
  title     = {An introduction to {MCMC} for machine learning},
  journal   = {Machine learning},
  year      = {2003},
  volume    = {50},
  number    = {1-2},
  pages     = {5--43},
  doi       = {10.1023/A:1020281327116},
  file      = {:Andrieu-etal_2003.pdf:PDF},
  owner     = {cscorley},
  publisher = {Springer},
  timestamp = {2014.12.08},
}

@InProceedings{Andrzejewski-etal_2007,
  author    = {Andrzejewski, David and Mulhern, Anne and Liblit, Ben and Zhu, Xiaojin},
  title     = {Statistical Debugging Using Latent Topic Models},
  booktitle = {Proceedings of the 18\textsuperscript{th} European Conference on Machine Learning},
  year      = {2007},
  series    = {ECML '07},
  pages     = {6--17},
  publisher = {Springer-Verlag},
  acmid     = {1421672},
  doi       = {10.1007/978-3-540-74958-5_5},
  file      = {:Andrzejewski-etal_2007.pdf:PDF},
  isbn      = {978-3-540-74957-8},
  numpages  = {12},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Antoniol-Gueheneuc_2005,
  author       = {Antoniol, Giuliano and Gu{\'e}h{\'e}neuc, Y.-G.},
  title        = {Feature identification: a novel approach and a case study},
  booktitle    = {21st IEEE International Conference on Software Maintenance},
  year         = {2005},
  pages        = {357--366},
  organization = {IEEE},
  doi          = {10.1109/ICSM.2005.48},
  file         = {:Antoniol-Gueheneuc_2005.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1510131},
}

@Article{Antoniol-Gueheneuc_2006,
  author    = {Antoniol, Giuliano and Gu{\'e}h{\'e}neuc, Y.-G.},
  title     = {Feature identification: An epidemiological metaphor},
  journal   = {IEEE Transactions on Software Engineering},
  year      = {2006},
  volume    = {32},
  number    = {9},
  pages     = {627--641},
  doi       = {10.1109/TSE.2006.88},
  file      = {:Antoniol-Gueheneuc_2006.pdf:PDF},
  owner     = {cscorley},
  publisher = {IEEE},
  timestamp = {2014.12.08},
  url       = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1707664},
}

@InProceedings{Anvik_2006,
  Title                    = {Automating bug report assignment},
  Author                   = {Anvik, John},
  Booktitle                = {Proceedings of the 28\textsuperscript{th} international conference on Software engineering},
  Year                     = {2006},
  Pages                    = {937--940},
  Publisher                = {ACM},
  Series                   = {ICSE '06},
  Abstract                 = {Open-source development projects typically support an open bug repository to which both developers and users can report bugs. A report that appears in this repository must be triaged to determine if the report is one which requires attention and if it is, which developer will be assigned the responsibility of resolving the report. Large open-source developments are burdened by the rate at which new bug reports appear in the bug repository. The thesis of this work is that the task of triage can be eased by using a semi-automated approach to assign bug reports to developers. The approach consists of constructing a recommender for bug assignments; examined are both a range of algorithms that can be used and the various kinds of information provided to the algorithms. The proposed work seeks to determine through human experimentation a sufficient level of precision for the recommendations, and to analytically determine the trade-offs of the various algorithmic and information choices.},
  DOI                      = {10.1145/1134285.1134457},
  File                     = {:Anvik_2006.pdf:PDF},
  ISBN                     = {1-59593-375-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 22:21:43},
  Timestamp                = {2014.11.27}
}

@InProceedings{Anvik-etal_2006,
  Title                    = {Who should fix this bug?},
  Author                   = {Anvik, John and Hiew, Lyndon and Murphy, Gail C.},
  Booktitle                = {Proceedings of the 28\textsuperscript{th} international conference on Software engineering},
  Year                     = {2006},
  Pages                    = {361--370},
  Publisher                = {ACM},
  Series                   = {ICSE '06},
  Abstract                 = {Open source development projects typically support an open bug repository to which both developers and users can report bugs. The reports that appear in this repository must be triaged to determine if the report is one which requires attention and if it is, which developer will be assigned the responsibility of resolving the report. Large open source developments are burdened by the rate at which new bug reports appear in the bug repository. In this paper, we present a semi-automated approach intended to ease one part of this process, the assignment of reports to a developer. Our approach applies a machine learning algorithm to the open bug repository to learn the kinds of reports each developer resolves. When a new report arrives, the classifier produced by the machine learning technique suggests a small number of developers suitable to resolve the report. With this approach, we have reached precision levels of 57\% and 64\% on the Eclipse and Firefox development projects respectively. We have also applied our approach to the gcc open source development with less positive results. We describe the conditions under which the approach is applicable and also report on the lessons we learned about applying machine learning to repositories used in open source development.},
  DOI                      = {10.1145/1134285.1134336},
  File                     = {:Anvik-etal_2006.pdf:PDF},
  ISBN                     = {1-59593-375-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-03 22:34:32},
  Timestamp                = {2014.11.27}
}

@InProceedings{Anvik-Murphy_2007,
  author    = {Anvik, John and Murphy, Gail C.},
  title     = {Determining Implementation Expertise from Bug Reports},
  booktitle = {Fourth International Workshop on Mining Software Repositories},
  year      = {2007},
  pages     = {2},
  publisher = {IEEE},
  abstract  = {As developers work on a software product they accumulate expertise, including expertise about the code base of the software product. We call this type of expertise 'implementation expertise'. Knowing the set of developers who have implementation expertise for a software product has many important uses. This paper presents an empirical evaluation of two approaches to determining implementation expertise from the data in source and bug repositories. The expertise sets created by the approaches are compared to those provided by experts and evaluated using the measures of precision and recall. We found that both approaches are good at finding all of the appropriate developers, although they vary in how many false positives are returned.},
  doi       = {10.1109/MSR.2007.7},
  file      = {:Anvik-Murphy_2007.pdf:PDF},
  isbn      = {0-7695-2950-X},
  owner     = {cscorley},
  posted-at = {2012-06-18 02:57:18},
  timestamp = {2014.11.27},
}

@InProceedings{Asuncion-etal_2010,
  author       = {Asuncion, Hazeline U. and Asuncion, Arthur U. and Taylor, Richard N.},
  title        = {Software traceability with topic modeling},
  booktitle    = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering-Volume 1},
  year         = {2010},
  pages        = {95--104},
  organization = {ACM},
  doi          = {10.1145/1806799.1806817},
  file         = {:Asuncion-etal_2010.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=1806817},
}

@InProceedings{Baldi-etal_2008,
  author       = {Baldi, Pierre F. and Lopes, Cristina V. and Linstead, Erik J. and Bajracharya, Sushil K.},
  title        = {A theory of aspects as latent topics},
  booktitle    = {ACM Sigplan Notices},
  year         = {2008},
  volume       = {43},
  number       = {10},
  pages        = {543--562},
  organization = {ACM},
  doi          = {10.1145/1449955.1449807},
  file         = {:Baldi-etal_2008.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=1449807},
}

@Article{Basili-etal_1994,
  author    = {Basili, V. and Caldiera, G. and Rombach, H. D.},
  title     = {The Goal Question Metric Approach},
  journal   = {Encyclopedia of software engineering},
  year      = {1994},
  volume    = {2},
  number    = {1994},
  pages     = {528--532},
  file      = {:Basili-etal_1994.pdf:PDF},
  keywords  = {guidelines},
  owner     = {cscorley},
  timestamp = {2014.11.27},
  url       = {ftp://ftp.cs.umd.edu/pub/sel/papers/gqm.pdf},
}

@InProceedings{Bassett-Kraft_2013,
  author       = {Bassett, Blake and Kraft, Nicholas A.},
  title        = {Structural information based term weighting in text retrieval for feature location},
  booktitle    = {IEEE 21st International Conference on Program Comprehension},
  year         = {2013},
  pages        = {133--141},
  organization = {IEEE},
  doi          = {10.1109/ICPC.2013.6613841},
  file         = {:Bassett-Kraft_2013.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6613841},
}

@MastersThesis{Bassett_2013,
  Title                    = {Structural Information-based Term-weighting in Text Retrieval for Feature Location},
  Author                   = {Richard Blake Bassett},
  School                   = {University of Alabama},
  Year                     = {2013},
  File                     = {:Bassett_2013.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2015.04.02},
  URL                      = {http://acumen.lib.ua.edu/content/u0015/0000001/0001237/u0015_0000001_0001237.pdf}
}

@Book{Beck_2001,
  Title                    = {Extreme programming explained: embrace change},
  Author                   = {Beck, Kent},
  Publisher                = {Addison-Wesley},
  Year                     = {2001},
  Edition                  = {US ed},
  Abstract                 = {{Kent Beck's <I>eXtreme Programming eXplained</I> provides an intriguing high-level overview of the author's Extreme Programming (XP) software development methodology. Written for IS managers, project leaders, or programmers, this guide provides a glimpse at the principles behind XP and its potential advantages for small- to mid-size software development teams.<p> The book intends to describe what XP is, its guiding principles, and how it works. Simply written, the book avoids case studies and concrete details in demonstrating the efficacy of XP. Instead, it demonstrates how XP relies on simplicity, unit testing, programming in pairs, communal ownership of code, and customer input on software to motivate code improvement during the development process. As the author notes, these principles are not new, but when they're combined their synergy fosters a new and arguably better way to build and maintain software. Throughout the book, the author presents and explains these principles, such as "rapid feedback" and "play to win," which form the basis of XP.<p> Generally speaking, XP changes the way programmers work. The book is good at delineating new roles for programmers and managers who Beck calls "coaches." The most striking characteristic of XP is that programmers work in pairs, and that testing is an intrinsic part of the coding process. In a later section, the author even shows where XP works and where it doesn't and offers suggestions for migrating teams and organizations over to the XP process. <p> In the afterword, the author recounts the experiences that led him to develop and refine XP, an insightful section that should inspire any organization to adopt XP. This book serves as a useful introduction to the philosophy and practice of XP for the manager or programmer who wants a potentially better way to build software. <I>--Richard Dragan</I><p> <B>Topics covered</B>: Extreme Programming (XP) software methodology, principles, XP team roles, facilities design, testing, refactoring, the XP software lifecycle, and adopting XP.} {Software development projects can be fun, productive, and even daring. Yet they can consistently deliver value to a business and remain under control. <P>Extreme Programming (XP) was conceived and developed to address the specific needs of software development conducted by small teams in the face of vague and changing requirements. This new lightweight methodology challenges many conventional tenets, including the long-held assumption that the cost of changing a piece of software necessarily rises dramatically over the course of time. XP recognizes that projects have to work to achieve this reduction in cost and exploit the savings once they have been earned. <P>Fundamentals of XP include: <P>* Distinguishing between the decisions to be made by business interests and those to be made by project stakeholders. * Writing unit tests before programming and keeping all of the tests running at all times. * Integrating and testing the whole system-several times a day. * Producing all software in pairs, two programmers at one screen. * Starting projects with a simple design that constantly evolves to add needed flexibility and remove unneeded complexity. * Putting a minimal system into production quickly and growing it in whatever directions prove most valuable. <P>Why is XP so controversial? Some sacred cows don't make the cut in XP: <P>* Don't force team members to specialize and become analysts, architects, programmers, testers, and integrators-every XP programmer participates in all of these critical activities every day. * Don't conduct complete up-front analysis and design-an XP project starts with a quick analysis of the entire system, and XP programmers continue to make analysis and design decisions throughout development. * Develop infrastructure and frameworks as you develop your application, not up-front-delivering business value is the heartbeat that drives XP projects. * Don't write and maintain implementation documentation-communication in XP projects occurs face-to-face, or through efficient tests and carefully written code. <P>You may love XP or you may hate it, but Extreme Programming Explained will force you to take a fresh look at how you develop software.}},
  Day                      = {05},
  HowPublished             = {Paperback},
  ISBN                     = {0201616416},
  Owner                    = {cscorley},
  Posted-at                = {2012-08-14 09:54:47},
  Timestamp                = {2014.11.27}
}

@InProceedings{Begel-etal_2010,
  author       = {Begel, Andrew and Khoo, Yit Phang and Zimmermann, Thomas},
  title        = {Codebook: discovering and exploiting relationships in software repositories},
  booktitle    = {ACM/IEEE 32nd International Conference on Software Engineering},
  year         = {2010},
  volume       = {1},
  pages        = {125--134},
  organization = {IEEE},
  doi          = {http://dx.doi.org/10.1145/1806799.1806821},
  file         = {:Begel-etal_2010.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.03.25},
}

@InProceedings{Bernardi-etal_2011,
  Title                    = {What Topics Do Firefox and Chrome Contributors Discuss?},
  Author                   = {Bernardi, Mario Luca and Sementa, Carmine and Zagarese, Quirino and Distante, Damiano and Di Penta, Massimiliano},
  Booktitle                = {Proceedings of the 8\textsuperscript{th} Working Conference on Mining Software Repositories},
  Year                     = {2011},
  Pages                    = {234--237},
  Publisher                = {ACM},
  Series                   = {MSR '11},
  Acmid                    = {1985480},
  DOI                      = {10.1145/1985441.1985480},
  File                     = {:Bernardi-etal_2011.pdf:PDF},
  ISBN                     = {978-1-4503-0574-7},
  Numpages                 = {4},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@Book{Berry-Browne_2005,
  title     = {Understanding search engines: mathematical modeling and text retrieval},
  publisher = {Siam},
  year      = {2005},
  author    = {Berry, Michael W. and Browne, Murray},
  volume    = {17},
  owner     = {cscorley},
  timestamp = {2014.12.21},
}

@InProceedings{Bettenburg-etal_2008,
  Title                    = {What makes a good bug report?},
  Author                   = {Bettenburg, Nicolas and Just, Sascha and Schr\"{o}ter, Adrian and Weiss, Cathrin and Premraj, Rahul and Zimmermann, Thomas},
  Booktitle                = {Proceedings of the 16\textsuperscript{th} ACM SIGSOFT International Symposium on Foundations of software engineering},
  Year                     = {2008},
  Pages                    = {308--318},
  Publisher                = {ACM},
  Series                   = {SIGSOFT '08/FSE-16},
  Abstract                 = {In software development, bug reports provide crucial information to developers. However, these reports widely differ in their quality. We conducted a survey among developers and users of APACHE, ECLIPSE, and MOZILLA to find out what makes a good bug report. The analysis of the 466 responses revealed an information mismatch between what developers need and what users supply. Most developers consider steps to reproduce, stack traces, and test cases as helpful, which are at the same time most difficult to provide for users. Such insight is helpful to design new bug tracking tools that guide users at collecting and providing more helpful information. Our CUEZILLA prototype is such a tool and measures the quality of new bug reports; it also recommends which elements should be added to improve the quality. We trained CUEZILLA on a sample of 289 bug reports, rated by developers as part of the survey. In our experiments, CUEZILLA was able to predict the quality of 31--48\% of bug reports accurately.},
  DOI                      = {10.1145/1453101.1453146},
  File                     = {:Bettenburg-etal_2008.pdf:PDF},
  ISBN                     = {978-1-59593-995-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:42:09},
  Timestamp                = {2014.11.27}
}

@InProceedings{Bettenburg-etal_2008a,
  Title                    = {Extracting structural information from bug reports},
  Author                   = {Bettenburg, Nicolas and Premraj, Rahul and Zimmermann, Thomas and Kim, Sunghun},
  Booktitle                = {Proceedings of the 2008 international working conference on Mining software repositories},
  Year                     = {2008},
  Pages                    = {27--30},
  Publisher                = {ACM},
  Series                   = {MSR '08},
  Abstract                 = {In software engineering experiments, the description of bug reports is typically treated as natural language text, although it often contains stack traces, source code, and patches. Neglecting such structural elements is a loss of valuable information; structure usually leads to a better performance of machine learning approaches. In this paper, we present a tool called infoZilla that detects structural elements from bug reports with near perfect accuracy and allows us to extract them. We anticipate that infoZilla can be used to leverage data from bug reports at a different granularity level that can facilitate interesting research in the future.},
  DOI                      = {10.1145/1370750.1370757},
  File                     = {:Bettenburg-etal_2008a.pdf:PDF},
  ISBN                     = {978-1-60558-024-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 22:20:13},
  Timestamp                = {2014.11.27}
}

@InProceedings{Bettenburg-etal_2008b,
  Title                    = {Duplicate bug reports considered harmful... really?},
  Author                   = {Bettenburg, Nicolas and Premraj, Rahul and Zimmermann, Thomas and Kim, Sunghun},
  Booktitle                = {2008 IEEE International Conference on Software Maintenance},
  Year                     = {2008},
  Pages                    = {337--345},
  Publisher                = {IEEE},
  Abstract                 = {In a survey we found that most developers have experienced duplicated bug reports, however, only few considered them as a serious problem. This contradicts popular wisdom that considers bug duplicates as a serious problem for open source projects. In the survey, developers also pointed out that the additional information provided by duplicates helps to resolve bugs quicker. In this paper, we therefore propose to merge bug duplicates, rather than treating them separately. We quantify the amount of information that is added for developers and show that automatic triaging can be improved as well. In addition, we discuss the different reasons why users submit duplicate bug reports in the first place.},
  DOI                      = {10.1109/ICSM.2008.4658082},
  File                     = {:Bettenburg-etal_2008b.pdf:PDF},
  ISBN                     = {978-1-4244-2613-3},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:32:54},
  Timestamp                = {2014.11.27}
}

@Article{Bhattacharya-etal_2012,
  author    = {Bhattacharya, Pamela and Neamtiu, Iulian and Shelton, Christian R.},
  title     = {Automated, highly-accurate, bug assignment using machine learning and tossing graphs},
  journal   = {Journal of Systems and Software},
  year      = {2012},
  volume    = {85},
  number    = {10},
  pages     = {2275--2292},
  issn      = {0164-1212},
  doi       = {10.1016/j.jss.2012.04.053},
  file      = {:Bhattacharya-etal_2012.pdf:PDF},
  owner     = {cscorley},
  publisher = {Elsevier BV},
  timestamp = {2014.12.26},
  url       = {http://dx.doi.org/10.1016/j.jss.2012.04.053},
}

@PhdThesis{Biggers_2012,
  author    = {Biggers, Lauren R.},
  title     = {Investigating the effect of corpus construction on latent Dirichlet allocation based feature location},
  school    = {University of Alabama},
  year      = {2012},
  file      = {:Biggers_2012.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.12.23},
}

@Article{Biggers-etal_2014,
  author    = {Biggers, Lauren R. and Bocovich, Cecylia and Capshaw, Riley and Eddy, Brian P. and Etzkorn, Letha H. and Kraft, Nicholas A.},
  title     = {Configuring latent Dirichlet allocation based feature location},
  journal   = {Empirical Software Engineering},
  year      = {2014},
  volume    = {19},
  number    = {3},
  pages     = {465--500},
  doi       = {10.1007/s10664-012-9224-x},
  file      = {:Biggers-etal_2014.pdf:PDF},
  owner     = {cscorley},
  publisher = {Springer},
  timestamp = {2014.12.08},
}

@InProceedings{Biggers-etal_2011,
  author       = {Biggers, Lauren R. and Eddy, Brian P. and Kraft, Nicholas A. and Etzkorn, Letha H.},
  title        = {Toward a metrics suite for source code lexicons},
  booktitle    = {27th IEEE International Conference on Software Maintenance},
  year         = {2011},
  pages        = {492--495},
  organization = {IEEE},
  doi          = {10.1109/ICSM.2011.6080816},
  file         = {:Biggers-etal_2011.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6080816},
}

@InProceedings{Biggerstaff-etal_1993,
  author       = {Biggerstaff, Ted J. and Mitbander, Bharat G. and Webster, Dallas},
  title        = {The concept assignment problem in program understanding},
  booktitle    = {Proceedings of the 15\textsuperscript{th} international conference on Software Engineering},
  year         = {1993},
  pages        = {482--498},
  organization = {IEEE Computer Society Press},
  doi          = {10.1109/ICSE.1993.346017},
  file         = {:Biggerstaff-etal_1993.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
}

@InProceedings{Binkley-etal_2014,
  Title                    = {Understanding {LDA} in Source Code Analysis},
  Author                   = {Binkley, David and Heinz, Daniel and Lawrie, Dawn and Overfelt, Justin},
  Booktitle                = {Proc.\ IEEE Int'l Conf.\ on Program Comprehension},
  Year                     = {2014},
  Pages                    = {26--36},
  DOI                      = {10.1145/2597008.2597150},
  File                     = {:Binkley-etal_2014.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@InCollection{Binkley-Lawrie_2010,
  Title                    = {Information retrieval applications in software development},
  Author                   = {Binkley, David and Lawrie, Dawn},
  Booktitle                = {Encyclopedia of Software Engineering},
  Publisher                = {Taylor \& Francis LLC, London},
  Year                     = {2010},
  Pages                    = {231--242},
  File                     = {:Binkley-Lawrie_2010.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://www.cs.loyola.edu/~lawrie/papers/lawrieIRinSD.pdf}
}

@InProceedings{Bird-etal_2006,
  Title                    = {Mining email social networks},
  Author                   = {Bird, Christian and Gourley, Alex and Devanbu, Prem and Gertz, Michael and Swaminathan, Anand},
  Booktitle                = {Proceedings of the 2006 international workshop on Mining software repositories},
  Year                     = {2006},
  Pages                    = {137--143},
  Publisher                = {ACM},
  Series                   = {MSR '06},
  Abstract                 = {Communication \& Co-ordination activities are central to large software projects, but are difficult to observe and study in traditional (closed-source, commercial) settings because of the prevalence of informal, direct communication modes. OSS projects, on the other hand, use the internet as the communication medium,and typically conduct discussions in an open, public manner. As a result, the email archives of OSS projects provide a useful trace of the communication and co-ordination activities of the participants. However, there are various challenges that must be addressed before this data can be effectively mined. Once this is done, we can construct social networks of email correspondents, and begin to address some interesting questions. These include questions relating to participation in the email; the social status of different types of OSS participants; the relationship of email activity and commit activity (in the CVS repositories) and the relationship of social status with commit activity. In this paper, we begin with a discussion of our infrastructure (including a novel use of Scientific Workflow software) and then discuss our approach to mining the email archives; and finally we present some preliminary results from our data analysis.},
  DOI                      = {10.1145/1137983.1138016},
  File                     = {:Bird-etal_2006.pdf:PDF},
  ISBN                     = {1-59593-397-2},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 03:06:15},
  Timestamp                = {2014.11.27}
}

@TechReport{Bird-etal_2010,
  Title                    = {An Analysis of the Effect of Code Ownership on Software Quality across Windows, Eclipse, and Firefox},
  Author                   = {Christian Bird and Nachiappan Nagappan and Harald Gall and Premkumar Devanbu and Brendan Murphy},
  Institution              = {Microsoft Research},
  Year                     = {2010},
  Number                   = {MSR-TR-2010-140},
  Abstract                 = {<p>Ownership is a key aspect of large-scale software development. We examine the
 relationship between different ownership measures and software faults/failures in
 three large software projects drawn from different process domains: Windows
 Vista, the Eclipse Java IDE, and the Firefox Web Browser. We find that in all
 cases, measures of ownership such as the number of low-expertise developers, and
 the proportion of ownership for the top owner have a relationship with both
 pre-release faults and post-release failures. However, we find that the strength
 of the effects is related to the development process used. Vista shows the
 strongest relationship with ownership level, followed by Eclipse, and then
 Firefox, suggesting that the more that a project uses an open source style
 process, the more that team sizes rather than ownership levels affect to
 failures. We also find reasons that low-expertise developers make changes to
 components and show that the removal of low-expertise contributions dramatically
 decreases the performance of contribution based defect prediction. Finally we
 provide recommendations for source code change policies and utilization of
 resources such as code inspections based on our results.</p>},
  File                     = {:Bird-etal_2010.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://research.microsoft.com/apps/pubs/default.aspx?id=140711}
}

@InProceedings{Bird-etal_2009,
  Title                    = {Putting it all together: Using socio-technical networks to predict failures},
  Author                   = {Bird, Christian and Nagappan, Nachiappan and Gall, Harald and Murphy, Brendan and Devanbu, Premkumar},
  Booktitle                = {Software Reliability Engineering, 2009. ISSRE'09. 20th International Symposium on},
  Year                     = {2009},
  Organization             = {IEEE},
  Pages                    = {109--119},
  DOI                      = {10.1109/ISSRE.2009.17},
  File                     = {:Bird-etal_2009.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5362091}
}

@InProceedings{Bird-etal_2011,
  Title                    = {Don't touch my code!: examining the effects of ownership on software quality},
  Author                   = {Bird, Christian and Nagappan, Nachiappan and Murphy, Brendan and Gall, Harald and Devanbu, Premkumar},
  Booktitle                = {Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering},
  Year                     = {2011},
  Organization             = {ACM},
  Pages                    = {4--14},
  DOI                      = {10.1145/2025113.2025119},
  File                     = {:Bird-etal_2011.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=2025119}
}

@InProceedings{Bird-etal_2009a,
  author       = {Bird, Christian and Rigby, Peter C. and Barr, Earl T. and Hamilton, David J. and German, Daniel M. and Devanbu, Prem},
  title        = {The promises and perils of mining git},
  booktitle    = {6th IEEE International Working Conference on Mining Software Repositories},
  year         = {2009},
  pages        = {1--10},
  organization = {IEEE},
  doi          = {10.1109/MSR.2009.5069475},
  file         = {:Bird-etal_2009a.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5069475},
}

@InProceedings{Bissyande-etal_2013,
  author    = {Bissyande, T. F. and Thung, F. and Wang, Shaowei and Lo, D. and Jiang, Lingxiao and Reveillere, L.},
  title     = {Empirical Evaluation of Bug Linking},
  booktitle = {17th European Conference on Software Maintenance and Reengineering},
  year      = {2013},
  pages     = {89--98},
  abstract  = {To collect software bugs found by users, development teams often set up bug trackers using systems such as Bugzilla. Developers would then fix some of the bugs and commit corresponding code changes into version control systems such as svn or git. Unfortunately, the links between bug reports and code changes are missing for many software projects as the bug tracking and version control systems are often maintained separately. Yet, linking bug reports to fix commits is important as it could shed light into the nature of bug fixing processes and expose patterns in software management. Bug linking solutions, such as ReLink, have been proposed. The demonstration of their effectiveness however faces a number of issues, including a reliability issue with their ground truth datasets as well as the extent of their measurements. We propose in this study a benchmark for evaluating bug linking solutions. This benchmark includes a dataset of about 12,000 bug links from 10 programs. These true links between bug reports and their fixes have been provided during bug fixing processes. We designed a number of research questions, to assess both quantitatively and qualitatively the effectiveness of a bug linking tool. Finally, we apply this benchmark on ReLink to report the strengths and limitations of this bug linking tool.},
  doi       = {10.1109/CSMR.2013.19},
  file      = {:Bissyande-etal_2013.pdf:PDF},
  issn      = {1534-5351},
  keywords  = {program debugging;software engineering;Bugzilla system;ReLink solution;bug linking empirical evaluation;bug linking tool;bug tracking system;code change;ground truth dataset;software bug collection;software management;software project;version control system;Benchmark testing;Computer bugs;Control systems;Information retrieval;Joining processes;Software;Training data;Bug Linking;ReLink;benchmark;empirical evaluation;missing links},
}

@Article{Blei_2012,
  Title                    = {Probabilistic Topic Models},
  Author                   = {David Blei},
  Journal                  = {Communications of the ACM},
  Year                     = {2012},
  Number                   = {4},
  Pages                    = {77--84},
  Volume                   = {55},
  DOI                      = {10.1145/2133806.2133826},
  File                     = {:Blei_2012.pdf:PDF}
}

@InProceedings{Blei-Lafferty_2006,
  Title                    = {Dynamic Topic Models},
  Author                   = {Blei, David M. and Lafferty, John D.},
  Booktitle                = {Proceedings of the 23\textsuperscript{rd} International Conference on Machine Learning},
  Year                     = {2006},
  Pages                    = {113--120},
  Publisher                = {ACM},
  Series                   = {ICML '06},
  Acmid                    = {1143859},
  DOI                      = {10.1145/1143844.1143859},
  File                     = {:Blei-Lafferty_2006.pdf:PDF},
  ISBN                     = {1-59593-383-2},
  Numpages                 = {8},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://www.cs.cmu.edu/~lafferty/pub/dtm.pdf}
}

@Article{Blei-etal_2003,
  author    = {Blei, David M. and Ng, Andrew Y. and Jordan, Michael I.},
  title     = {Latent dirichlet allocation},
  journal   = {Journal of machine Learning research},
  year      = {2003},
  volume    = {3},
  pages     = {993--1022},
  file      = {:Blei-etal_2003.pdf:PDF},
  owner     = {cscorley},
  publisher = {JMLR. org},
  timestamp = {2014.12.08},
  url       = {http://dl.acm.org/citation.cfm?id=944937},
}

@InProceedings{Bortis-VanderHoek_2013,
  author       = {Bortis, Gerald and Van der Hoek, Andr{\'e}},
  title        = {Porchlight: A tag-based approach to bug triaging},
  booktitle    = {35th International Conference on Software Engineering},
  year         = {2013},
  pages        = {342--351},
  organization = {IEEE},
  doi          = {http://dx.doi.org/10.1109/ICSE.2013.6606580},
  file         = {:Bortis-VanderHoek_2013.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.03.25},
}

@InProceedings{Bosu-etal_2013,
  author       = {Bosu, Amiangshu and Corley, Christopher S. and Heaton, Dustin and Chatterji, Debarshi and Carver, Jeffrey C. and Kraft, Nicholas A.},
  title        = {Building reputation in stackoverflow: an empirical investigation},
  booktitle    = {10\textsuperscript{th} Working Conference on Mining Software Repositories},
  year         = {2013},
  pages        = {89--92},
  organization = {IEEE Press},
  doi          = {10.1109/MSR.2013.6624013},
  file         = {:Bosu-etal_2013.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.11.27},
  url          = {http://dl.acm.org/citation.cfm?id=2487107},
}

@InBook{Boyd-Graber-etal_2014,
  Title                    = {Care and Feeding of Topic Models: Problems, Diagnostics, and Improvements},
  Author                   = {Jordan Boyd-Graber and David Mimno and David Newman},
  Editor                   = {Edoardo M. Airoldi and David Blei and Elena A. Erosheva and Stephen E. Fienberg},
  Publisher                = {CRC Press},
  Year                     = {2014},
  Series                   = {CRC Handbooks of Modern Statistical Methods},
  Booktitle                = {Handbook of Mixed Membership Models and Their Applications},
  File                     = {:Boyd-Graber-etal_2014.pdf:PDF},
  URL                      = {http://www.cs.colorado.edu/~jbg/docs/2014_book_chapter_care_and_feeding.pdf}
}

@Article{Brand_2006,
  Title                    = {Fast low-rank modifications of the thin singular value decomposition},
  Author                   = {Brand, Matthew},
  Journal                  = {Linear algebra and its applications},
  Year                     = {2006},
  Number                   = {1},
  Pages                    = {20--30},
  Volume                   = {415},
  DOI                      = {10.1016/j.laa.2005.07.021},
  File                     = {:Brand_2006.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {Elsevier},
  Timestamp                = {2014.12.21}
}

@InProceedings{Broder_1997,
  Title                    = {On resemblance and containment of documents},
  Author                   = {A. Broder},
  Booktitle                = {Proc.\ of {SEQUENCES}},
  Year                     = {1997},
  DOI                      = {10.1109/SEQUEN.1997.666900},
  File                     = {:Broder_1997.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@InProceedings{Canfora-Cerulo_2005,
  Title                    = {How software repositories can help in resolving a new change request},
  Author                   = {Canfora, Gerardo and Cerulo, Luigi},
  Booktitle                = {In Workshop on Empirical Studies in Reverse Engineering},
  Year                     = {2005},
  Abstract                 = {In open source development, software evolution tasks are usually managed with a bug tracker system, such as Bugzilla [1], and a versioning system, such as CVS [2]. This provides for a huge amount of historical data regarding bug resolutions and new enhancement feature implementations. We discuss how software repositories can help developers in managing a new change request, either a bug or an enhancement feature. The hypothesis is that data stored in software repositories are a good descriptor on how past change requests have been resolved. Textual descriptions of fixed change requests stored in software repositories, both Bugzilla and CVS, are used to index developers and source files as documents in an information retrieval system. For a new change request, such indexes can be useful to identify the most appropriate developers to resolve it, or to predict the set of impacted source files. 1.},
  File                     = {:Canfora-Cerulo_2005.pdf:PDF},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 22:23:56},
  Timestamp                = {2014.11.27},
  URL                      = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.121.3646}
}

@InProceedings{Canfora-Cerulo_2005a,
  author    = {Canfora, G. and Cerulo, L.},
  title     = {Impact Analysis by Mining Software and Change Request Repositories},
  booktitle = {11th IEEE International Symposium on Software Metrics},
  year      = {2005},
  pages     = {29},
  publisher = {IEEE},
  abstract  = {Impact analysis is the identification of the work products affected by a proposed change request, either a bug fix or a new feature request. In many open-source projects, such as KDE, Gnome, Mozilla, Openoffice, change requests, and related data, are stored in a bug tracking system such as Bugzilla. These data, together with the data stored in a versioning system, such as CVS, are a valuable source of information on which useful analyses can be performed. In this paper we propose a method to derive the set of source files impacted by a proposed change request. The method exploits information retrieval algorithms to link the change request description and the set of historical source file revisions impacted by similar past change requests. The method is evaluated by applying it on four open-source projects},
  doi       = {10.1109/METRICS.2005.28},
  file      = {:Canfora-Cerulo_2005a.pdf:PDF},
  isbn      = {0-7695-2371-4},
  owner     = {cscorley},
  posted-at = {2012-07-24 19:55:08},
  timestamp = {2014.11.27},
}

@InProceedings{Canfora-Cerulo_2006,
  Title                    = {Fine Grained Indexing of Software Repositories to Support Impact Analysis},
  Author                   = {Canfora, Gerardo and Cerulo, Luigi},
  Booktitle                = {Proceedings of the 2006 International Workshop on Mining Software Repositories},
  Year                     = {2006},
  Pages                    = {105--111},
  Publisher                = {ACM},
  Series                   = {MSR '06},
  Acmid                    = {1138009},
  DOI                      = {10.1145/1137983.1138009},
  File                     = {:Canfora-Cerulo_2006.pdf:PDF},
  ISBN                     = {1-59593-397-2},
  Numpages                 = {7},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@InProceedings{Canfora-Cerulo_2006a,
  Title                    = {Supporting change request assignment in open source development},
  Author                   = {Canfora, Gerardo and Cerulo, Luigi},
  Booktitle                = {Proceedings of the 2006 ACM symposium on Applied computing},
  Year                     = {2006},
  Pages                    = {1767--1772},
  Publisher                = {ACM},
  Series                   = {SAC '06},
  Abstract                 = {Software repositories, such as CVS and Bugzilla, provide a huge amount of data regarding, respectively, source code and change request history. In this paper we propose a study on how change requests have been assigned to developers involved in an open source project and a method to suggest the set of best candidate developers to resolve a new change request. The method is based on the hypothesis that, given a new change request, developers that have resolved similar change requests in the past are the best candidates to resolve the new one. The suggestion can be useful for project managers in order to choose the best candidate to resolve a particular change request and/or to construct a competence database of developers working on software projects. We use the textual description of change requests stored in software repositories to index developers as documents in an information retrieval system. An Information Retrieval method is then applied to retrieve the candidate developers using the textual description of a new change request as a query.Case and evaluation study of the analysis and the methods introduced in this paper has been conducted on two large open source projects, Mozilla and KDE.},
  DOI                      = {10.1145/1141277.1141693},
  File                     = {:Canfora-Cerulo_2006a.pdf:PDF},
  ISBN                     = {1-59593-108-2},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:34:09},
  Timestamp                = {2014.11.27}
}

@InProceedings{Canfora-etal_2007,
  author    = {Canfora, G. and Cerulo, L. and Di Penta, M.},
  title     = {Identifying Changed Source Code Lines from Version Repositories},
  booktitle = {4\textsuperscript{th} Int'l Wksp.\ on Mining Software Repositories},
  year      = {2007},
  doi       = {10.1109/MSR.2007.14},
  file      = {:Canfora-etal_2007.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Canfora-etal_2009,
  Title                    = {Ldiff: An enhanced line differencing tool},
  Author                   = {Canfora, Gerardo and Cerulo, Luigi and Di Penta, Massimiliano},
  Booktitle                = {Proceedings of the 31st International Conference on Software Engineering},
  Year                     = {2009},
  Organization             = {IEEE Computer Society},
  Pages                    = {595--598},
  DOI                      = {10.1109/ICSE.2009.5070564},
  File                     = {:Canfora-etal_2009.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1555082}
}

@InProceedings{Canini-etal_2009,
  Title                    = {Online inference of topics with latent Dirichlet allocation},
  Author                   = {Kevin R. Canini and Lei Shi and Helen Wills Neuroscience and Thomas L. Griffiths},
  Booktitle                = {In Proceedings of the International Conference on Artificial Intelligence and Statistics},
  Year                     = {2009},
  File                     = {:Canini-etal_2009.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://cocosci.berkeley.edu/tom/papers/topicpf.pdf}
}

@InProceedings{Cataldo-etal_2006,
  Title                    = {Identification of coordination requirements: implications for the Design of collaboration and awareness tools},
  Author                   = {Cataldo, Marcelo and Wagstrom, Patrick A. and Herbsleb, James D. and Carley, Kathleen M.},
  Booktitle                = {Proceedings of the 2006 20\textsuperscript{th} anniversary conference on Computer supported cooperative work},
  Year                     = {2006},
  Pages                    = {353--362},
  Publisher                = {ACM},
  Series                   = {CSCW '06},
  DOI                      = {10.1145/1180875.1180929},
  File                     = {:Cataldo-etal_2006.pdf:PDF},
  ISBN                     = {1-59593-249-6},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 02:54:03},
  Timestamp                = {2014.11.27}
}

@Article{Chang-Blei_2010,
  author    = {Chang, Jonathan and Blei, David M.},
  title     = {Hierarchical relational models for document networks},
  journal   = {The Annals of Applied Statistics},
  year      = {2010},
  volume    = {4},
  number    = {1},
  pages     = {124--150},
  file      = {:Chang-Blei_2010.pdf:PDF},
  owner     = {cscorley},
  publisher = {Institute of Mathematical Statistics},
  timestamp = {2014.12.08},
  url       = {http://projecteuclid.org/euclid.aoas/1273584450},
}

@InProceedings{Chang-etal_2009,
  author    = {Chang, Jonathan and Gerrish, Sean and Wang, Chong and Boyd-graber, Jordan L. and Blei, David M.},
  title     = {Reading tea leaves: How humans interpret topic models},
  booktitle = {Advances in neural information processing systems},
  year      = {2009},
  pages     = {288--296},
  file      = {:Chang-etal_2009.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
  url       = {http://machinelearning.wustl.edu/mlpapers/paper_files/NIPS2009_0125.pdf},
}

@Article{Chidamber-Kemerer_1994,
  author    = {Chidamber, Shyam R. and Kemerer, Chris F.},
  title     = {A metrics suite for object oriented design},
  journal   = {IEEE Transactions on Software Engineering},
  year      = {1994},
  volume    = {20},
  number    = {6},
  pages     = {476--493},
  doi       = {10.1109/32.295895},
  file      = {:Chidamber-Kemerer_1994.pdf:PDF},
  owner     = {cscorley},
  publisher = {IEEE},
  timestamp = {2014.12.08},
  url       = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=295895},
}

@InProceedings{Chuang-etal_2012,
  author       = {Chuang, Jason and Manning, Christopher D. and Heer, Jeffrey},
  title        = {Termite: Visualization techniques for assessing textual topic models},
  booktitle    = {International Working Conference on Advanced Visual Interfaces},
  year         = {2012},
  pages        = {74--77},
  organization = {ACM},
  doi          = {10.1145/2254556.2254572},
  file         = {:Chuang-etal_2012.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=2254572},
}

@InProceedings{Collard-etal_2003,
  Title                    = {An {XML}-based lightweight C++ fact extractor},
  Author                   = {Collard, M. L. and Kagdi, H. H. and Maletic, J. I.},
  Booktitle                = {Program Comprehension, 2003. 11\textsuperscript{th} IEEE International Workshop on},
  Year                     = {2003},
  Pages                    = {134--143},
  Publisher                = {IEEE},
  Abstract                 = {A lightweight fact extractor is presented that utilizes XML tools, such as XPath and XSLT to extract static information from C++ source code programs. The source code is first converted into an XML representation, srcML, to facilitate the use of a wide variety of XML tools. The method is deemed lightweight because only a partial parsing of the source is done. Additionally, the technique is quite robust and can be applied to incomplete and noncompilable source code. The trade off to this approach is that queries on some low level details cannot be directly addressed. This approach is applied to a fact extractor benchmark as comparison with other, heavier weight, fact extractors. Fact extractors are widely used to support understanding tasks associated with maintenance, reverse engineering and various other software engineering tasks.},
  DOI                      = {10.1109/WPC.2003.1199197},
  File                     = {:Collard-etal_2003.pdf:PDF},
  Institution              = {Dept. of Comput. Sci., Kent State Univ., OH, USA},
  ISBN                     = {0-7695-1883-4},
  ISSN                     = {1092-8138},
  Owner                    = {cscorley},
  Posted-at                = {2012-08-21 01:55:34},
  Timestamp                = {2014.11.27}
}

@Article{Corbi_1989,
  author    = {Corbi, Thomas A.},
  title     = {Program understanding: Challenge for the 1990{s}},
  journal   = {IBM Systems Journal},
  year      = {1989},
  volume    = {28},
  number    = {2},
  pages     = {294--306},
  doi       = {10.1147/sj.282.0294},
  file      = {:Corbi_1989.pdf:PDF},
  owner     = {cscorley},
  publisher = {IBM},
  timestamp = {2014.12.08},
  url       = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5387570},
}

@InProceedings{Corley-etal_2012,
  author    = {Corley, C. S. and Kammer, E. A. and Kraft, N. A.},
  title     = {Modeling the ownership of source code topics},
  booktitle = {IEEE 20\textsuperscript{th} International Conference on Program Comprehension},
  year      = {2012},
  pages     = {173--182},
  doi       = {10.1109/ICPC.2012.6240485},
  file      = {:Corley-etal_2012.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
  url       = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6240485},
}

@InProceedings{Corley-etal_2015a,
  Title                    = {Exploring the Use of Deep Learning for Feature Location},
  Author                   = {Christopher S. Corley and Kostadin Damevski and Nicholas A. Kraft},
  Booktitle                = {IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  Year                     = {2015},
  File                     = {:Corley-etal_2015a.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2015.07.25},
  URL                      = {http://christop.club/publications/pdfs/Corley-etal_2015a.pdf}
}

@InProceedings{Corley-etal_2015,
  Title                    = {Modeling Changeset Topics for Feature Location},
  Author                   = {Christopher S. Corley and Kelly L. Kashuda and Nicholas A. Kraft},
  Booktitle                = {IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  Year                     = {2015},
  File                     = {:Corley-etal_2015.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2015.06.19},
  URL                      = {http://christop.club/publications/pdfs/Corley-etal_2015.pdf}
}

@InProceedings{Corley-etal_2014,
  author    = {Corley, Christopher S. and Kashuda, Kelly L. and May, Daniel S. and Kraft, Nicholas A.},
  title     = {Modeling Changeset Topics},
  booktitle = {Proc.\ 4\textsuperscript{th} Wksp.\ on Mining Unstructured Data},
  year      = {2014},
  doi       = {10.1109/MUD.2014.9},
  file      = {:Corley-etal_2014.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
  url       = {http://cscorley.students.cs.ua.edu/publications/pdfs/Corley-etal_14.pdf},
}

@InProceedings{Corley-etal_2011,
  author       = {Corley, Christopher S. and Kraft, Nicholas A. and Etzkorn, Letha H. and Lukins, Stacy K.},
  title        = {Recovering traceability links between source code and fixed bugs via patch analysis},
  booktitle    = {Proceedings of the 6\textsuperscript{th} International Workshop on Traceability in Emerging Forms of Software Engineering},
  year         = {2011},
  pages        = {31--37},
  organization = {ACM},
  doi          = {10.1145/1987856.1987863},
  file         = {:Corley-etal_2011.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.11.27},
  url          = {http://dl.acm.org/citation.cfm?id=1987863},
}

@InProceedings{Corley-etal_2015b,
  author    = {Corley, Christopher S. and Lois, Federico and Quezada, Sebasti{\'{a}}n F.},
  title     = {Web Usage Patterns of Developers},
  booktitle = {IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  year      = {2015},
  file      = {:Corley-etal_2015b.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2015.08.01},
  url       = {http://christop.club/publications/pdfs/Corley-etal_2015b.pdf},
}

@Article{Cortes-Vapnik_1995,
  author    = {Cortes, Corinna and Vapnik, Vladimir},
  title     = {Support-vector networks},
  journal   = {Machine Learning},
  year      = {1995},
  volume    = {20},
  number    = {3},
  pages     = {273--297},
  issn      = {0885-6125},
  doi       = {10.1007/BF00994018},
  keywords  = {pattern recognition; efficient learning algorithms; neural networks; radial basis function classifiers; polynomial classifiers},
  publisher = {Kluwer Academic Publishers},
  url       = {http://dx.doi.org/10.1007/BF00994018},
}

@Book{Croft-etal_2010,
  Title                    = {Search engines : information retrieval in practice},
  Author                   = {Bruce Croft and Donald Metzler and Trevor Strohman},
  Publisher                = {Addison-Wesley},
  Year                     = {2010},
  File                     = {:Croft-etal_2010.pdf:PDF},
  ISBN                     = {0136072240},
  URL                      = {http://www.search-engines-book.com/}
}

@Book{Csikszentmihalyi_1991,
  Title                    = {Flow: The psychology of optimal experience},
  Author                   = {Csikszentmihalyi, Mihaly},
  Publisher                = {HarperPerennial New York},
  Year                     = {1991},
  Volume                   = {41},
  Owner                    = {cscorley},
  Timestamp                = {2015.06.24}
}

@InProceedings{Cubranic-Murphy_2004,
  Title                    = {Automatic bug triage using text categorization},
  Author                   = {Cubranic, Davor and Murphy, Gail},
  Booktitle                = {In SEKE 2004: Proceedings of the Sixteenth International Conference on Software Engineering \& Knowledge Engineering},
  Year                     = {2004},
  Pages                    = {92--97},
  Abstract                 = {Bug triage, deciding what to do with an incoming bug report, is taking up increasing amount of developer resources in large open-source projects. In this paper, we propose to apply machine learning techniques to assist in bug triage by using text categorization to predict the developer that should work on the bug based on the bug\^{a}s description. We demonstrate our approach on a collection of 15,859 bug reports from a large open-source project. Our evaluation shows that our prototype, using supervised Bayesian learning, can correctly predict 30 \% of the report assignments to developers. 1},
  DOI                      = {10.1.1.91.6144},
  File                     = {:Cubranic-Murphy_2004.pdf:PDF},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:35:49},
  Timestamp                = {2014.11.27},
  URL                      = {http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.91.6144}
}

@Article{Cubranic-etal_2005,
  author    = {Cubranic, Davor and Murphy, Gail C. and Singer, Janice and Booth, Kellogg S.},
  title     = {Hipikat: A project memory for software development},
  journal   = {Software Engineering, IEEE Transactions on},
  year      = {2005},
  volume    = {31},
  number    = {6},
  pages     = {446--465},
  doi       = {10.1109/TSE.2005.71},
  file      = {:Cubranic-etal_2005.pdf:PDF},
  owner     = {cscorley},
  publisher = {IEEE},
  timestamp = {2014.12.08},
  url       = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1463229},
}

@InProceedings{DAmbros-etal_2007,
  Title                    = {"A Bug's Life" Visualizing a Bug Database},
  Author                   = {D'Ambros, Marco and Lanza, Michele and Pinzger, Martin},
  Booktitle                = {2007 4\textsuperscript{th} IEEE International Workshop on Visualizing Software for Understanding and Analysis},
  Year                     = {2007},
  Pages                    = {113--120},
  Publisher                = {IEEE},
  Abstract                 = {Visualization has long been accepted as a viable means to comprehend large amounts of information. Especially in the context of software evolution a well-designed visualization is crucial to be able to cope with the sheer data that needs to be analyzed. Many approaches have been investigated to visualize evolving systems, but most of them focus on structural data and are useful to answer questions about the structural evolution of a system. In this paper we consider an often neglected type of information, namely the one provided by bug tracking systems, which store data about the problems that various people, from developers to end users, detected and reported. We first briefly introduce the context by reporting on the particularities of the present data, and then propose two visualizations to render bugs as first-level entities.},
  DOI                      = {10.1109/VISSOF.2007.4290709},
  File                     = {:DAmbros-etal_2007.pdf:PDF},
  ISBN                     = {1-4244-0599-8},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:45:55},
  Timestamp                = {2014.11.27}
}

@InProceedings{Dallmeier-Zimmermann_2007,
  Title                    = {Extraction of Bug Localization Benchmarks from History},
  Author                   = {Dallmeier, Valentin and Zimmermann, Thomas},
  Booktitle                = {Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering},
  Year                     = {2007},
  Pages                    = {433--436},
  Publisher                = {ACM},
  Series                   = {ASE '07},
  Acmid                    = {1321702},
  DOI                      = {10.1145/1321631.1321702},
  File                     = {:Dallmeier-Zimmermann_2007.pdf:PDF},
  ISBN                     = {978-1-59593-882-4},
  Numpages                 = {4},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@InProceedings{Dang-etal_2012,
  Title                    = {ReBucket: A method for clustering duplicate crash reports based on call stack similarity},
  Author                   = {Dang, Yingnong and Wu, Rongxin and Zhang, Hongyu and Zhang, Dongmei and Nobel, Peter},
  Booktitle                = {2012 34\textsuperscript{th} International Conference on Software Engineering (ICSE)},
  Year                     = {2012},
  Pages                    = {1084--1093},
  Publisher                = {IEEE},
  Abstract                 = {Software often crashes. Once a crash happens, a crash report could be sent to software developers for investigation upon user permission. To facilitate efficient handling of crashes, crash reports received by Microsoft's Windows Error Reporting (WER) system are organized into a set of {\quotesinglbase}{\"{A}}{\`{u}} buckets{\quotesinglbase}{\"{A}}{\`{u}}. Each bucket contains duplicate crash reports that are deemed as manifestations of the same bug. The bucket information is important for prioritizing efforts to resolve crashing bugs. To improve the accuracy of bucketing, we propose ReBucket, a method for clustering crash reports based on call stack matching. ReBucket measures the similarities of call stacks in crash reports and then assigns the reports to appropriate buckets based on the similarity values. We evaluate ReBucket using crash data collected from five widely-used Microsoft products. The results show that ReBucket achieves better overall performance than the existing methods. On average, the F-measure obtained by ReBucket is about 0.88.},
  DOI                      = {10.1109/ICSE.2012.6227111},
  File                     = {:Dang-etal_2012.pdf:PDF},
  ISBN                     = {978-1-4673-1067-3},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-19 22:04:38},
  Timestamp                = {2014.11.27}
}

@InProceedings{DeLucia-etal_2012,
  Title                    = {Using IR methods for labeling source code artifacts: Is it worthwhile?},
  Author                   = {De Lucia, A. and Di Penta, M. and Oliveto, R. and Panichella, A. and Panichella, S.},
  Booktitle                = {Program Comprehension (ICPC), 2012 IEEE 20th International Conference on},
  Year                     = {2012},
  Pages                    = {193-202},
  DOI                      = {10.1109/ICPC.2012.6240488},
  File                     = {:6240488.pdf:PDF},
  ISSN                     = {1092-8138},
  Keywords                 = {Java;information retrieval;program compilers;source coding;IR;IR methods;JHotDraw;Java software systems;automatic labeling;clustering based approaches;eXVantage;human based labeling;information retrieval;labeling source code artifacts;latent dirichlet allocation;latent semantic indexing;software artifacts;software engineering;source code elements;vector space models;Context;Humans;Java;Labeling;Large scale integration;Matrix decomposition;Software;Empirical Studies;Information Retrieval;Latent Dirichlet Allocation;Topic Extraction}
}

@Article{Deerwester-etal_1990,
  author    = {Deerwester, Scott C. and Dumais, Susan T. and Landauer, Thomas K. and Furnas, George W. and Harshman, Richard A.},
  title     = {Indexing by latent semantic analysis},
  journal   = {Journal of the American Society of Information Science},
  year      = {1990},
  volume    = {41},
  number    = {6},
  pages     = {391--407},
  file      = {:Deerwester-etal_1990.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.12.08},
  url       = {http://www.cob.unt.edu/itds/faculty/evangelopoulos/dsci5910/LSA_Deerwester1990.pdf},
}

@Article{DelRosso_2009,
  Title                    = {Comprehend and analyze knowledge networks to improve software evolution},
  Author                   = {Del Rosso, Christian},
  Journal                  = {J. Softw. Maint. Evol.: Res. Pract.},
  Year                     = {2009},
  Number                   = {3},
  Pages                    = {189--215},
  Volume                   = {21},
  Abstract                 = {When a set of people are connected by a set of meaningful social relationships we talk of a social network. A social network represents a social structure and the underlying structural patterns can be used to analyze and comprehend how people relate to each other and their emergent behavior as a group. Developing software is fundamentally a human activity. Developers cooperate and exchange knowledge and information, creating in fact, a particular type of social network that we call knowledge network. In this paper we investigate knowledge networks in software development teams by applying social network analysis and we use the Apache web server as a case study. By analyzing the structural communication and coordination patterns in Apache we have been able to identify the Apache knowledge network, highlight potential communication bottlenecks, and find brokers and important coordination points in the software development team. Furthermore, our work enables a software architect to analyze and maintain the organization and the software architecture aligned during software evolution. An important lesson that we have is that the analysis of knowledge networks constitutes an additional tool to be added to the traditional software architecture assessment methods. Copyright {\copyright} 2009 John Wiley \& Sons, Ltd.},
  DOI                      = {10.1002/smr.408},
  File                     = {:DelRosso_2009.pdf:PDF},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 03:08:33},
  Publisher                = {John Wiley \& Sons, Ltd.},
  Timestamp                = {2014.11.27}
}

@InProceedings{DiLucca-etal_2002,
  Title                    = {An approach to classify software maintenance requests},
  Author                   = {Di Lucca, G. A. and Di Penta, M. and Gradara, S.},
  Booktitle                = {International Conference on Software Maintenance, 2002. Proceedings.},
  Year                     = {2002},
  Pages                    = {93--102},
  Publisher                = {IEEE Comput. Soc},
  Abstract                 = {When a software system critical for an organization exhibits a problem during its operation, it is relevant to fix it in a short period of time, to avoid serious economical losses. The problem is therefore noticed by the organization in charge of the maintenance, and it should be correctly and quickly dispatched to the right maintenance team. We propose to automatically classify incoming maintenance requests (also said tickets), routing them to specialized maintenance teams. The final goal is to develop a router working around the clock, that, without human intervention, dispatches incoming tickets with the lowest misclassification error, measured with respect to a given routing policy. 6000 maintenance tickets from a large, multi-site, software system, spanning about two years of system in-field operation, were used to compare and assess the accuracy of different classification approaches (i.e., Vector Space model, Bayesian model, support vectors, classification trees and k-nearest neighbor classification). The application and the tickets were divided into eight areas and pre-classified by human experts. Preliminary results were encouraging, up to 84\% of the incoming tickets were correctly classified.},
  DOI                      = {10.1109/ICSM.2002.1167756},
  File                     = {:DiLucca-etal_2002.pdf:PDF},
  ISBN                     = {0-7695-1819-2},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 22:25:32},
  Timestamp                = {2014.11.27}
}

@InProceedings{DiPenta-German_2009,
  author       = {Di Penta, Massimiliano and German, Daniel M.},
  title        = {Who are source code contributors and how do they change?},
  booktitle    = {Reverse Engineering, 2009. WCRE'09. 16th Working Conference on},
  year         = {2009},
  pages        = {11--20},
  organization = {IEEE},
  doi          = {10.1109/WCRE.2009.41},
  file         = {:DiPenta-German_2009.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5328628},
}

@InCollection{Dig-etal_2006,
  author    = {Dig, Danny and Comertoglu, Can and Marinov, Darko and Johnson, Ralph},
  title     = {Automated Detection of Refactorings in Evolving Components},
  booktitle = {Object-Oriented Programming},
  publisher = {Springer Berlin / Heidelberg},
  year      = {2006},
  editor    = {Thomas, Dave},
  volume    = {4067},
  series    = {Lecture Notes in Computer Science},
  pages     = {404--428},
  isbn      = {978-3-540-35726-1},
  doi       = {10.1007/11785477_24},
  file      = {:Dig-etal_2006.pdf:PDF},
  keyword   = {Computer Science},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Dit-etal_2011,
  author    = {Dit, Bogdan and Guerrouj, Latifa and Poshyvanyk, Denys and Antoniol, Giuliano},
  title     = {Can Better Identifier Splitting Techniques Help Feature Location?},
  booktitle = {2011 IEEE 19th International Conference on Program Comprehension},
  year      = {2011},
  publisher = {IEEE},
  doi       = {10.1109/icpc.2011.47},
  file      = {:Dit-etal_2011.pdf:PDF},
  isbn      = {978-1-61284-308-7},
  owner     = {cscorley},
  timestamp = {2014.12.24},
  url       = {http://dx.doi.org/10.1109/ICPC.2011.47},
}

@InProceedings{Dit-etal_2013,
  Title                    = {A dataset from change history to support evaluation of software maintenance tasks},
  Author                   = {Dit, Bogdan and Holtzhauer, Andrew and Poshyvanyk, Denys and Kagdi, Huzefa},
  Booktitle                = {Mining Software Repositories (MSR), 2013 10th IEEE Working Conference on},
  Year                     = {2013},
  Organization             = {IEEE},
  Pages                    = {131--134},
  DOI                      = {10.1109/MSR.2013.6624019},
  File                     = {:Dit-etal_2013.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6624019}
}

@Article{Dit-etal_2013a,
  Title                    = {Feature location in source code: a taxonomy and survey},
  Author                   = {Dit, Bogdan and Revelle, Meghan and Gethers, Malcom and Poshyvanyk, Denys},
  Journal                  = {Journal of Software: Evolution and Process},
  Year                     = {2013},
  Number                   = {1},
  Pages                    = {53--95},
  Volume                   = {25},
  DOI                      = {10.1002/smr.567/full},
  File                     = {:Dit-etal_2011a.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {Wiley Online Library},
  Timestamp                = {2014.12.08}
}

@Article{Dit-etal_2012,
  author    = {Dit, Bogdan and Revelle, Meghan and Poshyvanyk, Denys},
  title     = {Integrating information retrieval, execution and link analysis algorithms to improve feature location in software},
  journal   = {Empir Software Eng},
  year      = {2012},
  volume    = {18},
  number    = {2},
  pages     = {277--309},
  issn      = {1573-7616},
  doi       = {10.1007/s10664-011-9194-4},
  file      = {:Dit-etal_2012.pdf:PDF},
  owner     = {cscorley},
  publisher = {Springer Science + Business Media},
  timestamp = {2015.03.25},
  url       = {http://dx.doi.org/10.1007/s10664-011-9194-4},
}

@InProceedings{Eaddy-etal_2008,
  author       = {Eaddy, Marc and Aho, Alfred V. and Antoniol, Giuliano and Gu{\'e}h{\'e}neuc, Y.-G.},
  title        = {Cerberus: Tracing requirements to source code using information retrieval, dynamic analysis, and program analysis},
  booktitle    = {Program Comprehension, 2008. ICPC 2008. The 16th IEEE International Conference on},
  year         = {2008},
  pages        = {53--62},
  organization = {IEEE},
  doi          = {10.1109/ICPC.2008.39},
  file         = {:Eaddy-etal_2008.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4556117},
}

@InProceedings{Eisenbarth-etal_2001,
  Title                    = {Aiding program comprehension by static and dynamic feature analysis},
  Author                   = {Eisenbarth, Thomas and Koschke, Rainer and Simon, Daniel},
  Booktitle                = {Software Maintenance, 2001. Proceedings. IEEE International Conference on},
  Year                     = {2001},
  Organization             = {IEEE},
  Pages                    = {602--611},
  DOI                      = {10.1109/ICSM.2001.972777},
  File                     = {:Eisenbarth-etal_2001.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=972777}
}

@Article{Eisenbarth-etal_2003,
  Title                    = {Locating features in source code},
  Author                   = {Eisenbarth, Thomas and Koschke, Rainer and Simon, Daniel},
  Journal                  = {Software Engineering, IEEE Transactions on},
  Year                     = {2003},
  Number                   = {3},
  Pages                    = {210--224},
  Volume                   = {29},
  DOI                      = {10.1109/TSE.2003.1183929},
  File                     = {:Eisenbarth-etal_2003.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {IEEE},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1183929}
}

@InProceedings{Eisenberg-DeVolder_2005,
  author    = {Eisenberg, A. D. and De Volder, K.},
  title     = {Dynamic feature traces: finding features in unfamiliar code},
  booktitle = {21st IEEE International Conference on Software Maintenance},
  year      = {2005},
  publisher = {IEEE},
  doi       = {10.1109/icsm.2005.42},
  file      = {:Eisenberg-DeVolder_2005.pdf:PDF},
  isbn      = {0-7695-2368-4},
  owner     = {cscorley},
  timestamp = {2014.12.26},
  url       = {http://dx.doi.org/10.1109/ICSM.2005.42},
}

@InProceedings{Ernst_2004,
  author    = {Ernst, Michael D.},
  title     = {Static and dynamic analysis: synergy and duality},
  booktitle = {Proceedings of the ACM-SIGPLAN-SIGSOFT Workshop on Program Analysis for Software Tools and Engineering},
  year      = {2004},
  pages     = {35--35},
  doi       = {10.1145/996821.996823},
  file      = {:Ernst_2004.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Fischer-etal_2003,
  Title                    = {Analyzing and relating bug report data for feature tracking},
  Author                   = {Fischer, M. and Pinzger, M. and Gall, H.},
  Booktitle                = {10th Working Conference on Reverse Engineering, 2003. WCRE 2003. Proceedings.},
  Year                     = {2003},
  Pages                    = {90--99},
  Publisher                = {IEEE},
  Abstract                 = {First Page of the Article},
  DOI                      = {10.1109/WCRE.2003.1287240},
  File                     = {:Fischer-etal_2003.pdf:PDF},
  ISBN                     = {0-7695-2027-8},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-24 19:52:59},
  Timestamp                = {2014.11.27}
}

@InProceedings{Fischer-etal_2003a,
  Title                    = {Populating a Release History Database from version control and bug tracking systems},
  Author                   = {Fischer, M. and Pinzger, M. and Gall, H.},
  Booktitle                = {International Conference on Software Maintenance, 2003. ICSM 2003. Proceedings.},
  Year                     = {2003},
  Pages                    = {23--32},
  Publisher                = {IEEE Comput. Soc},
  Abstract                 = {Version control and bug tracking systems contain large amounts of historical information that can give deep insight into the evolution of a software project. Unfortunately, these systems provide only insufficient support for a detailed analysis of software evolution aspects. We address this problem and introduce an approach for populating a release history database that combines version data with bug tracking data and adds missing data not covered by version control systems such as merge points. Then simple queries can be applied to the structured data to obtain meaningful views showing the evolution of a software project. Such views enable more accurate reasoning of evolutionary aspects and facilitate the anticipation of software evolution. We demonstrate our approach on the large open source project Mozilla that offers great opportunities to compare results and validate our approach.},
  DOI                      = {10.1109/ICSM.2003.1235403},
  File                     = {:Fischer-etal_2003a.pdf:PDF},
  ISBN                     = {0-7695-1905-9},
  ISSN                     = {1063-6773},
  Journal                  = {Software Maintenance, 2003. ICSM 2003. Proceedings. International Conference on},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-24 19:51:38},
  Timestamp                = {2014.11.27}
}

@InProceedings{Fluri-etal_2007,
  author    = {Fluri, B. and Wursch, M. and Gall, H. C.},
  title     = {Do code and comments co-evolve? {O}n the relation between source code and comment changes},
  booktitle = {Proceedings of the 14\textsuperscript{th} Working Conference on Reverse Engineering},
  year      = {2007},
  pages     = {70--79},
  doi       = {10.1109/WCRE.2007.21},
  file      = {:Fluri-etal_2007.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@Article{FongBoh-etal_2007,
  author    = {Fong Boh, Wai and Slaughter, Sandra A. and Espinosa, J. Alberto},
  title     = {Learning from experience in software development: A multilevel analysis},
  journal   = {Management Science},
  year      = {2007},
  volume    = {53},
  number    = {8},
  pages     = {1315--1331},
  doi       = {10.1287/mnsc.1060.0687},
  file      = {:FongBoh-etal_2007.pdf:PDF},
  owner     = {cscorley},
  publisher = {INFORMS},
  timestamp = {2014.12.08},
}

@InCollection{Fox_1992,
  author    = {C. Fox},
  title     = {Lexical Analysis and Stoplists},
  booktitle = {Information Retrieval: Data Structures and Algorithms},
  publisher = {Prentice-Hall},
  year      = {1992},
  editor    = {Frakes, W. B. and Baeza-Yates, R.},
  pages     = {102--130},
  isbn      = {0-13-463837-9},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Fritz-etal_2007,
  author       = {Fritz, Thomas and Murphy, Gail C. and Hill, Emily},
  title        = {Does a programmer's activity indicate knowledge of code?},
  booktitle    = {Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  year         = {2007},
  pages        = {341--350},
  organization = {ACM},
  doi          = {10.1145/1287624.1287673},
  file         = {:Fritz-etal_2007.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=1287673},
}

@InProceedings{Gay-etal_2009,
  author    = {Gay, Gregory and Haiduc, Sonia and Marcus, Andrian and Menzies, Tim},
  title     = {On the use of relevance feedback in {IR}-based concept location},
  booktitle = {2009 IEEE International Conference on Software Maintenance},
  year      = {2009},
  publisher = {IEEE},
  doi       = {10.1109/icsm.2009.5306315},
  file      = {:Gay-etal_2009.pdf:PDF},
  isbn      = {978-1-4244-4897-5},
  owner     = {cscorley},
  timestamp = {2014.12.26},
  url       = {http://dx.doi.org/10.1109/ICSM.2009.5306315},
}

@Article{German_2006,
  Title                    = {An empirical study of fine-grained software modifications},
  Author                   = {German, Daniel M.},
  Journal                  = {Empirical Software Engineering},
  Year                     = {2006},
  Number                   = {3},
  Pages                    = {369--393},
  Volume                   = {11},
  Abstract                 = {Software is typically improved and modified in small increments (we refer to each of these increments as a modification record{\quotesinglbase}{\"{A}}{\^{\i}}MR). MRs are usually stored in a configuration management or version control system and can be retrieved for analysis. In this study we retrieved the MRs from several mature open software projects. We then concentrated our analysis on those MRs that fix defects and provided heuristics to automatically classify them. We used the information in the MRs to visualize what files are changed at the same time, and who are the people who tend to modify certain files. We argue that these visualizations can be used to understand the development stage of in which a project is at a given time (new features are added, or defects are being fixed), the level of modularization of a project, and how developers might interact between each other and the source code of a system.},
  Day                      = {1},
  DOI                      = {10.1007/s10664-006-9004-6},
  File                     = {:German_2006.pdf:PDF},
  ISSN                     = {1382-3256},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 03:19:14},
  Publisher                = {Springer Netherlands},
  Timestamp                = {2014.11.27}
}

@InProceedings{German_2006a,
  Title                    = {A study of the contributors of PostgreSQL},
  Author                   = {German, Daniel M.},
  Booktitle                = {Proceedings of the 2006 international workshop on Mining software repositories},
  Year                     = {2006},
  Pages                    = {163--164},
  Publisher                = {ACM},
  Series                   = {MSR '06},
  Abstract                 = {This report describes some characteristics of the development team of PostgreSQL that were uncovered by analyzing the history of its software artifacts as recorded by the project's CVS repository.},
  DOI                      = {10.1145/1137983.1138022},
  File                     = {:German_2006a.pdf:PDF},
  ISBN                     = {1-59593-397-2},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 03:01:49},
  Timestamp                = {2014.11.27}
}

@InProceedings{Gethers-etal_2011,
  author       = {Gethers, Malcom and Oliveto, Rocco and Poshyvanyk, Denys and Lucia, Andrea D.},
  title        = {On integrating orthogonal information retrieval methods to improve traceability recovery},
  booktitle    = {Software Maintenance (ICSM), 2011 27th IEEE International Conference on},
  year         = {2011},
  pages        = {133--142},
  organization = {IEEE},
  doi          = {10.1109/ICSM.2011.6080780},
  file         = {:Gethers-etal_2011.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6080780},
}

@InProceedings{Gethers-etal_2011a,
  Title                    = {CodeTopics: which topic am I coding now?},
  Author                   = {Gethers, Malcom and Savage, Trevor and Di Penta, Massimiliano and Oliveto, Rocco and Poshyvanyk, Denys and De Lucia, Andrea},
  Booktitle                = {Proceedings of the 33rd International Conference on Software Engineering},
  Year                     = {2011},
  Organization             = {ACM},
  Pages                    = {1034--1036},
  DOI                      = {10.1145/1985793.1985988},
  File                     = {:Gethers-etal_2011a.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1985988}
}

@InProceedings{Girba-etal_2005,
  Title                    = {How developers drive software evolution},
  Author                   = {Girba, Tudor and Kuhn, Adrian and Seeberger, Mauricio and Ducasse, St{\'e}phane},
  Booktitle                = {Principles of Software Evolution, Eighth International Workshop on},
  Year                     = {2005},
  Organization             = {IEEE},
  Pages                    = {113--122},
  DOI                      = {10.1109/IWPSE.2005.21},
  File                     = {:Girba-etal_2005.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1572315}
}

@InProceedings{Girolami-Kaban_2003,
  Title                    = {On an equivalence between PLSI and {LDA}},
  Author                   = {Girolami, Mark and Kab{\'a}n, Ata},
  Booktitle                = {Proceedings of the 26th annual international ACM SIGIR conference on Research and development in informaion retrieval},
  Year                     = {2003},
  Organization             = {ACM},
  Pages                    = {433--434},
  DOI                      = {10.1145/860435.860537},
  File                     = {:Girolami-Kaban_2003.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=860537}
}

@Article{Godfrey-etal_2009,
  author    = {Godfrey, Michael W. and Hassan, Ahmed E. and Herbsleb, James and Murphy, Gail C. and Robillard, Martin and Devanbu, Prem and Mockus, Audris and Perry, Dewayne E. and Notkin, David},
  title     = {Future of Mining Software Archives: A Roundtable},
  journal   = {IEEE Software},
  year      = {2009},
  volume    = {26},
  number    = {1},
  pages     = {67--70},
  issn      = {0740-7459},
  doi       = {10.1109/ms.2009.10},
  file      = {:Godfrey-etal_2009.pdf:PDF},
  owner     = {cscorley},
  publisher = {Institute of Electrical \& Electronics Engineers (IEEE)},
  timestamp = {2014.12.26},
  url       = {http://dx.doi.org/10.1109/MS.2009.10},
}

@Article{Goeminne-Mens_2013,
  Title                    = {A comparison of identity merge algorithms for software repositories},
  Author                   = {Goeminne, Mathieu and Mens, Tom},
  Journal                  = {Science of Computer Programming},
  Year                     = {2013},
  Number                   = {8},
  Pages                    = {971--986},
  Volume                   = {78},
  DOI                      = {10.1016/j.scico.2011.11.004},
  File                     = {:Goeminne-Mens_2013.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {Elsevier},
  Timestamp                = {2014.12.08},
  URL                      = {http://www.sciencedirect.com/science/article/pii/S0167642311002048}
}

@InProceedings{Gorrell-Webb_2005,
  Title                    = {Generalized Hebbian algorithm for incremental latent semantic analysis},
  Author                   = {Gorrell, Genevieve and Webb, Brandyn},
  Booktitle                = {INTERSPEECH},
  Year                     = {2005},
  Organization             = {Citeseer},
  Pages                    = {1325--1328},
  File                     = {:Gorrell-Webb_2005.pdf:PDF},
  Keywords                 = {lsi},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.21},
  URL                      = {http://sifter.org/~brandyn/papers/gorrell_webb.pdf}
}

@InProceedings{Gottipati-etal_2011,
  author    = {Gottipati, Swapna and Lo, David and Jiang, Jing},
  title     = {Finding Relevant Answers in Software Forums},
  booktitle = {Proceedings of the 2011 26th IEEE/ACM International Conference on Automated Software Engineering},
  year      = {2011},
  series    = {ASE '11},
  pages     = {323--332},
  publisher = {IEEE Computer Society},
  acmid     = {2190188},
  doi       = {10.1109/ASE.2011.6100069},
  file      = {:Gottipati-etal_2011.pdf:PDF},
  isbn      = {978-1-4577-1638-6},
  numpages  = {10},
  url       = {http://dx.doi.org/10.1109/ASE.2011.6100069},
}

@InProceedings{Gousios-etal_2008,
  Title                    = {Measuring developer contribution from software repository data},
  Author                   = {Gousios, Georgios and Kalliamvakou, Eirini and Spinellis, Diomidis},
  Booktitle                = {Proceedings of the 2008 international working conference on Mining software repositories},
  Year                     = {2008},
  Pages                    = {129--132},
  Publisher                = {ACM},
  Series                   = {MSR '08},
  Abstract                 = {Apart from source code, software infrastructures supporting agile and distributed software projects contain traces of developer activity that does not directly affect the product itself but is important for the development process. We propose a model that, by combining traditional contribution metrics with data mined from software repositories, can deliver accurate developer contribution measurements. The model creates clusters of similar projects to extract weights that are then applied to the actions a developer performed on project assets to extract a combined measurement of the developer's contribution. We are currently implementing the model in the context of a software quality monitoring system while we are also validating its components by means of questionnaires.},
  DOI                      = {10.1145/1370750.1370781},
  File                     = {:Gousios-etal_2008.pdf:PDF},
  ISBN                     = {978-1-60558-024-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 22:16:22},
  Timestamp                = {2014.11.27}
}

@Article{Graves-etal_2000,
  author    = {Graves, Todd L. and Karr, Alan F. and Marron, James S. and Siy, Harvey},
  title     = {Predicting fault incidence using software change history},
  journal   = {Software Engineering, IEEE Transactions on},
  year      = {2000},
  volume    = {26},
  number    = {7},
  pages     = {653--661},
  doi       = {10.1109/32.859533},
  file      = {:Graves-etal_2000.pdf:PDF},
  owner     = {cscorley},
  publisher = {IEEE},
  timestamp = {2014.12.08},
  url       = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=859533},
}

@InProceedings{Grechanik-etal_2010,
  author    = {Grechanik, Mark and Fu, Chen and Xie, Qing and McMillan, Collin and Poshyvanyk, Denys and Cumby, Chad},
  title     = {A search engine for finding highly relevant applications},
  booktitle = {Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering},
  year      = {2010},
  publisher = {ACM Press},
  doi       = {10.1145/1806799.1806868},
  file      = {:Grechanik-etal_2010.pdf:PDF},
  isbn      = {9781605587196},
  keywords  = {categorizing},
  owner     = {cscorley},
  timestamp = {2014.12.24},
  url       = {http://dx.doi.org/10.1145/1806799.1806868},
}

@Article{Griffiths-Steyvers_2004,
  author    = {Griffiths, T. L. and Steyvers, M.},
  title     = {Finding Scientific Topics},
  journal   = {Proc. of the Natl. Academy of Sciences},
  year      = {2004},
  volume    = {101},
  number    = {Suppl. 1},
  pages     = {5228--5235},
  doi       = {10.1073/pnas.0307752101},
  file      = {:Griffiths-Steyvers_2004.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Guo-etal_2010,
  Title                    = {Characterizing and predicting which bugs get fixed: an empirical study of Microsoft Windows},
  Author                   = {Guo, Philip J. and Zimmermann, Thomas and Nagappan, Nachiappan and Murphy, Brendan},
  Booktitle                = {Proceedings of the 32\textsuperscript{nd} ACM/IEEE International Conference on Software Engineering - Volume 1},
  Year                     = {2010},
  Pages                    = {495--504},
  Publisher                = {ACM},
  Series                   = {ICSE '10},
  Abstract                 = {We performed an empirical study to characterize factors that affect which bugs get fixed in Windows Vista and Windows 7, focusing on factors related to bug report edits and relationships between people involved in handling the bug. We found that bugs reported by people with better reputations were more likely to get fixed, as were bugs handled by people on the same team and working in geographical proximity. We reinforce these quantitative results with survey feedback from 358 Microsoft employees who were involved in Windows bugs. Survey respondents also mentioned additional qualitative influences on bug fixing, such as the importance of seniority and interpersonal skills of the bug reporter. Informed by these findings, we built a statistical model to predict the probability that a new bug will be fixed (the first known one, to the best of our knowledge). We trained it on Windows Vista bugs and got a precision of 68\% and recall of 64\% when predicting Windows 7 bug fixes. Engineers could use such a model to prioritize bugs during triage, to estimate developer workloads, and to decide which bugs should be closed or migrated to future product versions.},
  DOI                      = {10.1145/1806799.1806871},
  File                     = {:Guo-etal_2010.pdf:PDF},
  ISBN                     = {978-1-60558-719-6},
  Owner                    = {cscorley},
  Posted-at                = {2012-08-20 14:42:42},
  Timestamp                = {2014.11.27}
}

@InProceedings{Guo-etal_2011,
  Title                    = {"Not my bug!" and other reasons for software bug report reassignments},
  Author                   = {Guo, Philip J. and Zimmermann, Thomas and Nagappan, Nachiappan and Murphy, Brendan},
  Booktitle                = {Proceedings of the ACM 2011 conference on Computer supported cooperative work},
  Year                     = {2011},
  Pages                    = {395--404},
  Publisher                = {ACM},
  Series                   = {CSCW '11},
  Abstract                 = {Bug reporting/fixing is an important social part of the soft-ware development process. The bug-fixing process inher-ently has strong inter-personal dynamics at play, especially in how to find the optimal person to handle a bug report. Bug report reassignments, which are a common part of the bug-fixing process, have rarely been studied. In this paper, we present a large-scale quantitative and qualitative analysis of the bug reassignment process in the Microsoft Windows Vista operating system project. We quantify social interactions in terms of both useful and harmful reassignments. For instance, we found that reassignments are useful to determine the best person to fix a bug, contrary to the popular opinion that reassignments are always harmful. We categorized five primary reasons for reassignments: finding the root cause, determining ownership, poor bug report quality, hard to determine proper fix, and workload balancing. We then use these findings to make recommendations for the design of more socially-aware bug tracking systems that can overcome some of the inefficiencies we observed in our study.},
  DOI                      = {10.1145/1958824.1958887},
  File                     = {:Guo-etal_2011.pdf:PDF},
  ISBN                     = {978-1-4503-0556-3},
  Owner                    = {cscorley},
  Posted-at                = {2012-08-20 14:13:54},
  Timestamp                = {2014.11.27}
}

@InProceedings{Haiduc_2011,
  Title                    = {Automatically detecting the quality of the query and its implications in {IR}-based concept location},
  Author                   = {Haiduc, S.},
  Booktitle                = {Automated Software Engineering (ASE), 2011 26\textsuperscript{th} IEEE/ACM International Conference on},
  Year                     = {2011},
  Pages                    = {637--640},
  DOI                      = {10.1109/ASE.2011.6100144},
  File                     = {:Haiduc_2011.pdf:PDF},
  ISSN                     = {1938-4300},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@InProceedings{Haiduc-etal_2012,
  Title                    = {Automatic query performance assessment during the retrieval of software artifacts},
  Author                   = {Haiduc, Sonia and Bavota, Gabriele and Oliveto, Rocco and De Lucia, Andrea and Marcus, Andrian},
  Booktitle                = {Proceedings of the 27th IEEE/ACM International Conference on Automated Software Engineering},
  Year                     = {2012},
  Organization             = {ACM},
  Pages                    = {90--99},
  DOI                      = {10.1145/2351676.2351690},
  File                     = {:Haiduc-etal_2012.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2015.04.15}
}

@Article{Halko-etal_2011,
  author    = {Halko, Nathan and Martinsson, Per-Gunnar and Tropp, Joel A.},
  title     = {Finding structure with randomness: Probabilistic algorithms for constructing approximate matrix decompositions},
  journal   = {SIAM review},
  year      = {2011},
  volume    = {53},
  number    = {2},
  pages     = {217--288},
  file      = {:Halko-etal_2011.pdf:PDF},
  keywords  = {lsi},
  owner     = {cscorley},
  publisher = {SIAM},
  timestamp = {2014.12.21},
  url       = {http://arxiv.org/pdf/0909.4061.pdf},
}

@InProceedings{Hall-etal_2008,
  author       = {Hall, David and Jurafsky, Daniel and Manning, Christopher D.},
  title        = {Studying the history of ideas using topic models},
  booktitle    = {Proceedings of the conference on empirical methods in natural language processing},
  year         = {2008},
  pages        = {363--371},
  organization = {Association for Computational Linguistics},
  file         = {:Hall-etal_2008.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=1613763},
}

@InProceedings{Halverson-etal_2006,
  Title                    = {Designing task visualizations to support the coordination of work in software development},
  Author                   = {Halverson, Christine A. and Ellis, Jason B. and Danis, Catalina and Kellogg, Wendy A.},
  Booktitle                = {Proceedings of the 2006 20\textsuperscript{th} anniversary conference on Computer supported cooperative work},
  Year                     = {2006},
  Pages                    = {39--48},
  Publisher                = {ACM},
  Series                   = {CSCW '06},
  Abstract                 = {Software development tools primarily focus on supporting the technical work. Yet no matter the tools employed, the process followed, or the size of the team, important aspects of development are non-technical, and largely unsupported. For example, increasing distribution of development teams highlights the issues of coordination and cooperation. This paper focuses on one area: managing change requests. Interviews with industry and open-source programmers were used to create designs for the visual inspection of change requests. This paper presents fieldwork findings and two designs. We conclude by reflecting on the issues that task visualizations that support social inferences address in software development.},
  DOI                      = {10.1145/1180875.1180883},
  File                     = {:Halverson-etal_2006.pdf:PDF},
  ISBN                     = {1-59593-249-6},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:47:13},
  Timestamp                = {2014.11.27}
}

@PhdThesis{Hassan_2004,
  Title                    = {Mining Software Repositories to Assist Developers and Support Managers},
  Author                   = {Ahmed Hassan},
  School                   = {University of Waterloo},
  Year                     = {2004},
  File                     = {:Hassan_2004.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.26},
  URL                      = {https://uwspace.uwaterloo.ca/bitstream/handle/10012/1017/aeehassa2004.pdf?sequence=1}
}

@TechReport{Heinrich_2009,
  Title                    = {Parameter Estimation for Text Analysis},
  Author                   = {G. Heinrich},
  Institution              = {Fraunhofer IGD},
  Year                     = {2009},
  Note                     = {Version 2.9},
  File                     = {:Heinrich_2009.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://www.arbylon.net/publications/text-est2.pdf}
}

@Book{Henderson-Sellers_1996,
  title     = {Object-Oriented Metrics: Measures of Complexity},
  publisher = {Prentice Hall},
  year      = {1996},
  author    = {Henderson-Sellers, B.},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Herbsleb-etal_2001,
  Title                    = {An empirical study of global software development: distance and speed},
  Author                   = {Herbsleb, James D. and Mockus, Audris and Finholt, Thomas A. and Grinter, Rebecca E.},
  Booktitle                = {Proceedings of the 23\textsuperscript{rd} International Conference on Software Engineering},
  Year                     = {2001},
  Pages                    = {81--90},
  Publisher                = {IEEE Computer Society},
  Series                   = {ICSE '01},
  Abstract                 = {Global software development is rapidly becoming the norm for technology companies. Previous qualitative research suggests that multi-site development may increase development cycle time. We use both survey data and data from the source code change management system to model the extent of delay in a multi-site software development organization, and explore several possible mechanisms for this delay. We also measure differences in same-site and cross-site communication patterns, and analyze the relationship of these variables to delay. Our results show that compared to same-site work, cross-site work takes much longer, and requires more people for work of equal size and complexity. We also report a strong relationship between delay in cross-site work and the degree to which remote colleagues are perceived to help out when workloads are heavy. We discuss implications of our findings for collaboration technology for distributed software development.},
  DOI                      = {10.1109/ICSE.2001.919083},
  File                     = {:Herbsleb-etal_2001.pdf:PDF},
  ISBN                     = {0-7695-1050-7},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:19:40},
  Timestamp                = {2014.11.27}
}

@InProceedings{Hill-etal_2007,
  author    = {Hill, Emily and Pollock, Lori and Vijay-Shanker, K.},
  title     = {Exploring the neighborhood with dora to expedite software maintenance},
  booktitle = {Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering},
  year      = {2007},
  publisher = {ACM Press},
  doi       = {10.1145/1321631.1321637},
  file      = {:Hill-etal_2007.pdf:PDF},
  isbn      = {9781595938824},
  owner     = {cscorley},
  timestamp = {2014.12.26},
  url       = {http://dx.doi.org/10.1145/1321631.1321637},
}

@InProceedings{Hill-etal_2009,
  author       = {Hill, Emily and Pollock, Lori and Vijay-Shanker, K.},
  title        = {Automatically capturing source code context of NL-queries for software maintenance and reuse},
  booktitle    = {Proceedings of the 31st International Conference on Software Engineering},
  year         = {2009},
  pages        = {232--242},
  organization = {IEEE Computer Society},
  doi          = {http://dx.doi.org/10.1109/ICSE.2009.5070524},
  file         = {:Hill-etal_2009.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.03.23},
}

@InProceedings{Hindle-etal_2012,
  Title                    = {Relating requirements to implementation via topic analysis: Do topics extracted from requirements make sense to managers and developers?},
  Author                   = {A. Hindle and C. Bird and T. Zimmerman and N. Nagappan},
  Booktitle                = {Proc.\ 28\textsuperscript{th} IEEE Int'l Conf.\ on Software Maintenance},
  Year                     = {2012},
  Pages                    = {243--252},
  DOI                      = {10.1109/ICSM.2012.6405278},
  File                     = {:Hindle-etal_2012.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@Article{Hindle-etal_2014,
  Title                    = {Do topics make sense to managers and developers?},
  Author                   = {Hindle, Abram and Bird, Christian and Zimmermann, Thomas and Nagappan, Nachiappan},
  Journal                  = {Empirical Software Engineering},
  Year                     = {2014},
  Pages                    = {1--37},
  DOI                      = {10.1007/s10664-014-9312-1},
  File                     = {:Hindle-etal_2014.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {Springer},
  Timestamp                = {2015.03.24}
}

@InProceedings{Hindle-etal_2008,
  Title                    = {What do large commits tell us?: a taxonomical study of large commits},
  Author                   = {Hindle, Abram and German, Daniel M. and Holt, Ric},
  Booktitle                = {Proceedings of the 2008 international working conference on Mining software repositories},
  Year                     = {2008},
  Pages                    = {99--108},
  Publisher                = {ACM},
  Series                   = {MSR '08},
  Abstract                 = {Research in the mining of software repositories has frequently ignored commits that include a large number of files (we call these large commits). The main goal of this paper is to understand the rationale behind large commits, and if there is anything we can learn from them. To address this goal we performed a case study that included the manual classification of large commits of nine open source projects. The contributions include a taxonomy of large commits, which are grouped according to their intention. We contrast large commits against small commits and show that large commits are more perfective while small commits are more corrective. These large commits provide us with a window on the development practices of maintenance teams.},
  DOI                      = {10.1145/1370750.1370773},
  File                     = {:Hindle-etal_2008.pdf:PDF},
  ISBN                     = {978-1-60558-024-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 22:19:13},
  Timestamp                = {2014.11.27}
}

@InProceedings{Hindle-etal_2009,
  author       = {Hindle, Abram and Godfrey, Michael W. and Holt, Richard C.},
  title        = {What's hot and what's not: Windowed developer topic analysis},
  booktitle    = {Software Maintenance, 2009. ICSM 2009. IEEE International Conference on},
  year         = {2009},
  pages        = {339--348},
  organization = {IEEE},
  doi          = {10.1109/ICSM.2009.5306310},
  file         = {:Hindle-etal_2009.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5306310},
}

@InCollection{Hoffman-etal_2010,
  author    = {Matthew Hoffman and Francis R. Bach and David M. Blei},
  title     = {Online Learning for Latent Dirichlet Allocation},
  booktitle = {Advances in Neural Information Processing Systems 23},
  publisher = {Curran Associates, Inc.},
  year      = {2010},
  editor    = {Lafferty, J. D. and Williams, C. K. I. and Shawe-Taylor, J. and Zemel, R. S. and Culotta, A.},
  pages     = {856--864},
  file      = {:Hoffman-etal_2010.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.12.08},
  url       = {http://papers.nips.cc/paper/3902-online-learning-for-latent-dirichlet-allocation.pdf},
}

@Article{Hoffman-etal_2013,
  Title                    = {Stochastic Variational Inference},
  Author                   = {Hoffman, Matthew D. and Blei, David M. and Wang, Chong and Paisley, John},
  Journal                  = {J. Mach. Learn. Res.},
  Year                     = {2013},
  Number                   = {1},
  Pages                    = {1303--1347},
  Volume                   = {14},
  Acmid                    = {2502622},
  File                     = {:Hoffman-etal_2013.pdf:PDF},
  ISSN                     = {1532-4435},
  Issue_date               = {January 2013},
  Keywords                 = {Bayesian inference, Bayesian nonparametrics, stochastic optimization, topic models, variational inference},
  Numpages                 = {45},
  Publisher                = {JMLR.org},
  URL                      = {http://arxiv.org/pdf/1206.7051.pdf}
}

@Article{Hofman_2010,
  Title                    = {Behavioral economics in software quality engineering},
  Author                   = {Hofman, Rados{\l}aw},
  Journal                  = {Empirical Software Engineering},
  Year                     = {2010},
  Number                   = {2},
  Pages                    = {278--293},
  Volume                   = {16},
  Abstract                 = {This article describes empirical research results regarding the ``history effect'' in software quality evaluation processes. Most software quality models and evaluation processes models assume that software quality may be deterministically evaluated, especially when it is evaluated by experts. Consequently, software developers focus on the technical characteristics of the software product. A similar assumption is common in most engineering disciplines. However, in regard to other kinds of goods, direct violations of the assumption about objective evaluation were shown to be affected by the consequences of cognitive processes limitations. Ongoing discussion in the area of behavioral economics raises the question: are the experts prone to observation biases? If they are, then software quality models overlook an important aspect of software quality evaluation. This article proposes an experiment that aims to trace the influence of users' knowledge on software quality assessment. Measuring the influence of single variables for the software quality perception process is a complex task. There is no valid quality model for the precise measurement of product quality, and consequently software engineering does not have tools to freely manipulate the quality level for a product. This article proposes a simplified method to manipulate the observed quality level, thereby making it possible to conduct research. The proposed experiment has been conducted among professional software evaluators. The results show the significant negative influence (large effect size) of negative experience of users on final opinion about software quality regardless of its actual level.},
  DOI                      = {10.1007/s10664-010-9140-x},
  File                     = {:Hofman_2010.pdf:PDF},
  ISSN                     = {1573-7616},
  URL                      = {http://dx.doi.org/10.1007/s10664-010-9140-x}
}

@InProceedings{Hofmann_1999,
  Title                    = {Probabilistic latent semantic indexing},
  Author                   = {Hofmann, Thomas},
  Booktitle                = {Proceedings of the 22nd annual international ACM SIGIR conference on Research and development in information retrieval},
  Year                     = {1999},
  Organization             = {ACM},
  Pages                    = {50--57},
  DOI                      = {10.1145/312624.312649},
  File                     = {:Hofmann_1999.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.21}
}

@Article{Horwitz_1990,
  author    = {Horwitz, Susan},
  title     = {Identifying the semantic and textual differences between two versions of a program},
  journal   = {SIGPLAN Not.},
  year      = {1990},
  volume    = {25},
  number    = {6},
  pages     = {234--245},
  issn      = {0362-1340},
  doi       = {10.1145/93548.93574},
  file      = {:Horwitz_1990.pdf:PDF},
  owner     = {cscorley},
  publisher = {Association for Computing Machinery (ACM)},
  timestamp = {2014.12.08},
}

@InProceedings{Hossen-etal_2014,
  author    = {Hossen, Md Kamal and Kagdi, Huzefa and Poshyvanyk, Denys},
  title     = {Amalgamating source code authors, maintainers, and change proneness to triage change requests},
  booktitle = {Proceedings of the 22nd International Conference on Program Comprehension},
  year      = {2014},
  publisher = {ACM Press},
  doi       = {10.1145/2597008.2597147},
  file      = {:Hossen-etal_2014.pdf:PDF},
  isbn      = {9781450328791},
  owner     = {cscorley},
  timestamp = {2014.12.24},
  url       = {http://dx.doi.org/10.1145/2597008.2597147},
}

@InProceedings{Huo-etal_2014,
  author    = {Huo, Da and Ding, Tao and McMillan, C. and Gethers, M.},
  title     = {An Empirical Study of the Effects of Expert Knowledge on Bug Reports},
  booktitle = {Software Maintenance and Evolution (ICSME), 2014 IEEE International Conference on},
  year      = {2014},
  pages     = {1-10},
  abstract  = {Bug reports are crucial software artifacts for both software maintenance researchers and practitioners. A typical use of bug reports by researchers is to evaluate automated software maintenance tools: a large repository of reports is used as input for a tool, and metrics are calculated from the tool's output. But this process is quite different from practitioners, who distinguish between reports written by experts such as programmers, and reports written by non-experts such as users. Practitioners recognize that the content of a bug report depends on its author's expert knowledge. In this paper, we present an empirical study of the textual difference between bug reports written by experts and non-experts. We find that a significance difference exists, and that this difference has a significant impact on the results from a state-of-the-art feature location tool. Our recommendation is that researchers evaluate maintenance tools using different sets of bug reports for experts and non-experts.},
  doi       = {10.1109/ICSME.2014.22},
  file      = {:Huo-etal_2014.pdf:PDF},
  issn      = {1063-6773},
  keywords  = {program debugging;software maintenance;software metrics;automated software maintenance tool evaluation;bug report content;empirical analysis;expert knowledge;feature location tool;large-report repository;software artifacts;software maintenance practitioners;software maintenance researchers;software metrics;textual difference;Computer bugs;Information retrieval;Maintenance engineering;Measurement;Semantics;Software maintenance;bug reports;empirical study;expert knowledge},
}

@InProceedings{Iqbal-Bailey_2007,
  Title                    = {Understanding and Developing Models for Detecting and Differentiating Breakpoints During Interactive Tasks},
  Author                   = {Iqbal, Shamsi T. and Bailey, Brian P.},
  Booktitle                = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
  Year                     = {2007},
  Pages                    = {697--706},
  Publisher                = {ACM},
  Series                   = {CHI '07},
  Acmid                    = {1240732},
  DOI                      = {10.1145/1240624.1240732},
  File                     = {:Iqbal-Bailey_2007.pdf:PDF},
  ISBN                     = {978-1-59593-593-9},
  Keywords                 = {attention, breakpoints, interruption, statistical models},
  Numpages                 = {10},
  URL                      = {http://doi.acm.org/10.1145/1240624.1240732}
}

@Article{Jaervelin-Kekaelaeinen_2002,
  author    = {J{\"{a}}rvelin, Kalervo and Kek{\"{a}}l{\"{a}}inen, Jaana},
  title     = {Cumulated gain-based evaluation of {IR} techniques},
  journal   = {ACM Transactions on Information Systems},
  year      = {2002},
  volume    = {20},
  number    = {4},
  pages     = {422--446},
  issn      = {1046-8188},
  doi       = {10.1145/582415.582418},
  file      = {:Jaervelin-Kekaelaeinen_2002.pdf:PDF},
  owner     = {cscorley},
  publisher = {Association for Computing Machinery (ACM)},
  timestamp = {2015.03.27},
  url       = {http://dx.doi.org/10.1145/582415.582418},
}

@InProceedings{Jedlitschka-Pfahl_2005,
  Title                    = {Reporting guidelines for controlled experiments in software engineering},
  Author                   = {Jedlitschka, Andreas and Pfahl, Dietmar},
  Booktitle                = {Empirical Software Engineering, 2005. 2005 International Symposium on},
  Year                     = {2005},
  Organization             = {IEEE},
  Pages                    = {10--pp},
  DOI                      = {10.1109/ISESE.2005.1541818},
  File                     = {:Jedlitschka-Pfahl_2005.pdf:PDF},
  Keywords                 = {guidelines},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.09},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1541818}
}

@InProceedings{Jeong-etal_2009,
  Title                    = {Improving bug triage with bug tossing graphs},
  Author                   = {Jeong, Gaeul and Kim, Sunghun and Zimmermann, Thomas},
  Booktitle                = {Proceedings of the the 7\textsuperscript{th} joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  Year                     = {2009},
  Pages                    = {111--120},
  Publisher                = {ACM},
  Series                   = {ESEC/FSE '09},
  Abstract                 = {bug report is typically assigned to a single developer who is then responsible for fixing the bug. In Mozilla and Eclipse, between 37\%-44\% of bug reports are "tossed" (reassigned) to other developers, for example because the bug has been assigned by accident or another developer with additional expertise is needed. In any case, tossing increases the time-to-correction for a bug. In this paper, we introduce a graph model based on Markov chains, which captures bug tossing history. This model has several desirable qualities. First, it reveals developer networks which can be used to discover team structures and to find suitable experts for a new task. Second, it helps to better assign developers to bug reports. In our experiments with 445,000 bug reports, our model reduced tossing events, by up to 72\%. In addition, the model increased the prediction accuracy by up to 23 percentage points compared to traditional bug triaging approaches.},
  DOI                      = {10.1145/1595696.1595715},
  File                     = {:Jeong-etal_2009.pdf:PDF},
  ISBN                     = {978-1-60558-001-2},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 02:59:13},
  Timestamp                = {2014.11.27}
}

@InProceedings{Jiang-etal_2007,
  author       = {Jiang, Hsin-yi and Nguyen, Tien N. and Chang, Carl K. and Dong, Fei},
  title        = {Traceability Link Evolution Management with Incremental Latent Semantic Indexing},
  booktitle    = {Computer Software and Applications Conference, 2007. COMPSAC 2007. 31st Annual International},
  year         = {2007},
  volume       = {1},
  pages        = {309--316},
  organization = {IEEE},
  doi          = {10.1109/COMPSAC.2007.225},
  file         = {:Jiang-etal_2007.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4291019},
}

@Article{Kagdi-etal_2007,
  author    = {Kagdi, Huzefa and Collard, Michael L. and Maletic, Jonathan I.},
  title     = {A survey and taxonomy of approaches for mining software repositories in the context of software evolution},
  journal   = {J. Softw. Maint. Evol.},
  year      = {2007},
  volume    = {19},
  number    = {2},
  pages     = {77--131},
  issn      = {1532-060X},
  abstract  = {A comprehensive literature survey on approaches for mining software repositories (MSR) in the context of software evolution is presented. In particular, this survey deals with those investigations that examine multiple versions of software artifacts or other temporal information. A taxonomy is derived from the analysis of this literature and presents the work via four dimensions: the type of software repositories mined (what), the purpose (why), the adopted/invented methodology used (how), and the evaluation method (quality). The taxonomy is demonstrated to be expressive (i.e., capable of representing a wide spectrum of MSR investigations) and effective (i.e., facilitates similarities and comparisons of MSR investigations). Lastly, a number of open research issues in MSR that require further investigation are identified.},
  doi       = {10.1002/smr.344},
  file      = {:Kagdi-etal_2007.pdf:PDF},
  owner     = {cscorley},
  posted-at = {2012-07-03 22:48:38},
  publisher = {John Wiley \\& Sons, Inc.},
  timestamp = {2014.11.27},
}

@Article{Kagdi-etal_2012,
  Title                    = {Assigning change requests to software developers},
  Author                   = {Kagdi, Huzefa and Gethers, Malcom and Poshyvanyk, Denys and Hammad, Maen},
  Journal                  = {J. Softw. Evol. and Proc.},
  Year                     = {2012},
  Number                   = {1},
  Pages                    = {3--33},
  Volume                   = {24},
  Abstract                 = {The paper presents an approach to recommend a ranked list of expert developers to assist in the implementation of software change requests (e.g., bug reports and feature requests). An Information Retrieval (IR)-based concept location technique is first used to locate source code entities, e.g., files and classes, relevant to a given textual description of a change request. The previous commits from version control repositories of these entities are then mined for expert developers. The role of the IR method in selectively reducing the mining space is different from previous approaches that textually index past change requests and/or commits. The approach is evaluated on change requests from three open-source systems: ArgoUML, Eclipse, and KOffice, across a range of accuracy criteria. The results show that the overall accuracies of the correctly recommended developers are between 47 and 96\% for bug reports, and between 43 and 60\% for feature requests. Moreover, comparison results with two other recommendation alternatives show that the presented approach outperforms them with a substantial margin. Project leads or developers can use this approach in maintenance tasks immediately after the receipt of a change request in a free-form text. Copyright {\copyright} 2011 John Wiley \& Sons, Ltd.},
  DOI                      = {10.1002/smr.530},
  File                     = {:Kagdi-etal_2012.pdf:PDF},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-03 22:57:31},
  Publisher                = {John Wiley \& Sons, Ltd},
  Timestamp                = {2014.11.27}
}

@InProceedings{Kagdi-etal_2008,
  Title                    = {Who can help me with this source code change?},
  Author                   = {Kagdi, Huzefa and Hammad, Maen and Maletic, Jonathan I.},
  Booktitle                = {2008 IEEE International Conference on Software Maintenance},
  Year                     = {2008},
  Pages                    = {157--166},
  Publisher                = {IEEE},
  Day                      = {24},
  DOI                      = {10.1109/ICSM.2008.4658064},
  File                     = {:Kagdi-etal_2008.pdf:PDF},
  ISBN                     = {978-1-4244-2613-3},
  ISSN                     = {1063-6773},
  Journal                  = {Software Maintenance, 2008. ICSM 2008. IEEE International Conference on},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 02:21:13},
  Timestamp                = {2014.11.27}
}

@InProceedings{Kagdi-Poshyvanyk_2009,
  Title                    = {Who can help me with this change request?},
  Author                   = {Kagdi, Huzefa and Poshyvanyk, Denys},
  Booktitle                = {2009 IEEE 17\textsuperscript{th} International Conference on Program Comprehension},
  Year                     = {2009},
  Pages                    = {273--277},
  Publisher                = {IEEE},
  Abstract                 = {An approach to recommend a ranked list of developers to assist in performing software changes given a textual change request is presented. The approach employs a two-fold strategy. First, a technique based on information retrieval is put at work to locate the relevant units of source code, e.g., files, classes, and methods, to a given change request. These units of source code are then fed to a technique that recommends developers based on their source code change expertise, experience, and contributions, as derived from the analysis of the previous commits. The commits are obtained from a software system's version control repositories (e.g., Subversion). The approach is demonstrated on a bug report from KOffice, an open source application suite.},
  DOI                      = {10.1109/ICPC.2009.5090056},
  File                     = {:Kagdi-Poshyvanyk_2009.pdf:PDF},
  ISBN                     = {978-1-4244-3998-0},
  ISSN                     = {1063-6897},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-03 22:56:09},
  Timestamp                = {2014.11.27}
}

@PhdThesis{Kagdi_2008,
  Title                    = {Mining Software Repositories to Support Software Evolution},
  Author                   = {Kagdi, Huzefa H.},
  School                   = {Kent State},
  Year                     = {2008},
  File                     = {:Kagdi_2008.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.26},
  URL                      = {https://etd.ohiolink.edu/ap/10?0::NO:10:P10_ACCESSION_NUM:kent1216149768}
}

@Article{Kerby_2014,
  author    = {Dave S. Kerby},
  title     = {The simple difference formula: an approach to teaching nonparametric correlation},
  journal   = {Innovative Teaching},
  year      = {2014},
  volume    = {3},
  number    = {1},
  pages     = {1--9},
  doi       = {10.2466/11.IT.3.1},
  file      = {:Kerby_2014.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2015.12.02},
  url       = {http://www.amsciepub.com/doi/pdf/10.2466/11.IT.3.1},
}

@InProceedings{Kevic-etal_2013,
  author       = {Kevic, Katja and Muller, S. C. and Fritz, Thomas and Gall, Harald C.},
  title        = {Collaborative bug triaging using textual similarities and change set analysis},
  booktitle    = {Cooperative and Human Aspects of Software Engineering (CHASE), 2013 6th International Workshop on},
  year         = {2013},
  pages        = {17--24},
  organization = {IEEE},
  doi          = {10.1109/CHASE.2013.6614727},
  file         = {:Kevic-etal_2013.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.04.19},
}

@InProceedings{Klein-etal_2014,
  author    = {Klein, Nathan and Corley, Christopher S. and Kraft, Nicholas A.},
  title     = {New features for duplicate bug detection},
  booktitle = {Proceedings of the 11th Working Conference on Mining Software Repositories},
  year      = {2014},
  publisher = {ACM Press},
  doi       = {10.1145/2597073.2597090},
  file      = {:Klein-etal_2014.pdf:PDF},
  isbn      = {9781450328630},
  owner     = {cscorley},
  timestamp = {2014.12.23},
  url       = {http://dx.doi.org/10.1145/2597073.2597090},
}

@Article{Ko-etal_2006,
  author    = {Ko, Andrew J. and Myers, Brad A. and Coblenz, Michael J. and Aung, Htet H.},
  title     = {An Exploratory Study of How Developers Seek, Relate, and Collect Relevant Information during Software Maintenance Tasks},
  journal   = {IEEE Transactions on Software Engineering},
  year      = {2006},
  volume    = {32},
  number    = {12},
  pages     = {971--987},
  issn      = {0098-5589},
  abstract  = {Much of software developers' time is spent understanding unfamiliar code. To better understand how developers gain this understanding and how software development environments might be involved, a study was performed in which developers were given an unfamiliar program and asked to work on two debugging tasks and three enhancement tasks for 70 minutes. The study found that developers interleaved three activities. They began by searching for relevant code both manually and using search tools; however, they based their searches on limited and misrepresentative cues in the code, environment, and executing program, often leading to failed searches. When developers found relevant code, they followed its incoming and outgoing dependencies, often returning to it and navigating its other dependencies; while doing so, however, Eclipse's navigational tools caused significant overhead. Developers collected code and other information that they believed would be necessary to edit, duplicate, or otherwise refer to later by encoding it in the interactive state of Eclipse's package explorer, file tabs, and scroll bars. However, developers lost track of relevant code as these interfaces were used for other tasks, and developers were forced to find it again. These issues caused developers to spend, on average, 35 percent of their time performing the mechanics of navigation within and between source files. These observations suggest a new model of program understanding grounded in theories of information foraging and suggest ideas for tools that help developers seek, relate, and collect information in a more effective and explicit manner.},
  booktitle = {Software Engineering, IEEE Transactions on},
  doi       = {10.1109/TSE.2006.116},
  file      = {:Ko-etal_2006.pdf:PDF},
  owner     = {cscorley},
  posted-at = {2012-07-03 23:03:22},
  publisher = {IEEE Press},
  timestamp = {2014.11.27},
}

@Article{Kuhn-etal_2007,
  Title                    = {Semantic clustering: Identifying topics in source code},
  Author                   = {Kuhn, Adrian and Ducasse, St{\'e}phane and G{\'\i}rba, Tudor},
  Journal                  = {Information and Software Technology},
  Year                     = {2007},
  Number                   = {3},
  Pages                    = {230--243},
  Volume                   = {49},
  DOI                      = {10.1016/j.infsof.2006.10.017},
  File                     = {:Kuhn-etal_2007.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {Elsevier},
  Timestamp                = {2014.12.08},
  URL                      = {http://www.sciencedirect.com/science/article/pii/S0950584906001820}
}

@InProceedings{Lawrie-etal_2010,
  author       = {Lawrie, Dawn and Binkley, Dave and Morrell, Christopher},
  title        = {Normalizing source code vocabulary},
  booktitle    = {Reverse Engineering (WCRE), 2010 17th Working Conference on},
  year         = {2010},
  pages        = {3--12},
  organization = {IEEE},
  doi          = {10.1109/WCRE.2010.10},
  file         = {:Lawrie-etal_2010.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.07.19},
}

@Article{Le-Mikolov_2014,
  author    = {Le, Quoc V. and Mikolov, Tomas},
  title     = {Distributed representations of sentences and documents},
  journal   = {arXiv preprint arXiv:1405.4053},
  year      = {2014},
  file      = {:Le-Mikolov_2014.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2015.02.22},
  url       = {http://arxiv.org/pdf/1405.4053},
}

@Article{Levey-Lindenbaum_2000,
  author    = {Levey, A. and Lindenbaum, Michael},
  title     = {Sequential Karhunen-Loeve basis extraction and its application to images},
  journal   = {Image Processing, IEEE Transactions on},
  year      = {2000},
  volume    = {9},
  number    = {8},
  pages     = {1371--1374},
  doi       = {10.1109/83.855432},
  file      = {:Levey-Lindenbaum_2000.pdf:PDF},
  keywords  = {lsi},
  owner     = {cscorley},
  publisher = {IEEE},
  timestamp = {2014.12.21},
}

@InProceedings{Li-McCallum_2006,
  Title                    = {Pachinko allocation: DAG-structured mixture models of topic correlations},
  Author                   = {Li, Wei and McCallum, Andrew},
  Booktitle                = {Proceedings of the 23rd international conference on Machine learning},
  Year                     = {2006},
  Organization             = {ACM},
  Pages                    = {577--584},
  DOI                      = {10.1145/1143844.1143917},
  File                     = {:Li-McCallum_2006.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1143844.1143917}
}

@Article{Lin_1991,
  Title                    = {Divergence measures based on the Shannon entropy},
  Author                   = {Lin, Jianhua},
  Journal                  = {Information Theory, IEEE Transactions on},
  Year                     = {1991},
  Number                   = {1},
  Pages                    = {145--151},
  Volume                   = {37},
  DOI                      = {http://dx.doi.org/10.1109/18.61115},
  File                     = {:Lin_1991.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {IEEE},
  Timestamp                = {2015.03.24}
}

@InProceedings{Linares-Vasquez-etal_2012,
  Title                    = {Triaging incoming change requests: Bug or commit history, or code authorship?},
  Author                   = {Linares-V{\'a}squez, Mario and Hossen, Kamal and Dang, Hoang and Kagdi, Huzefa and Gethers, Malcom and Poshyvanyk, Denys},
  Booktitle                = {Software Maintenance (ICSM), 2012 28th IEEE International Conference on},
  Year                     = {2012},
  Organization             = {IEEE},
  Pages                    = {451--460},
  DOI                      = {10.1109/ICSM.2012.6405306},
  File                     = {:Linares-Vasquez-etal_2012.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6405306}
}

@Article{Linstead-etal_2008,
  Title                    = {An Application of Latent Dirichlet Allocation to Analyzing Software Evolution},
  Author                   = {Erik Linstead and Cristina Lopes and Pierre Baldi},
  Journal                  = {Machine Learning and Applications, Fourth International Conference on},
  Year                     = {2008},
  Pages                    = {813--818},
  Volume                   = {0},
  DOI                      = {10.1109/ICMLA.2008.47},
  File                     = {:Linstead-etal_2008.pdf:PDF},
  ISBN                     = {978-0-7695-3495-4},
  Owner                    = {cscorley},
  Publisher                = {IEEE Computer Society},
  Timestamp                = {2014.11.27}
}

@InProceedings{Linstead-etal_2007,
  Title                    = {Mining Concepts from Code with Probabilistic Topic Models},
  Author                   = {Linstead, Erik and Rigor, Paul and Bajracharya, Sushil and Lopes, Cristina and Baldi, Pierre},
  Booktitle                = {Proc.\ 22\textsuperscript{nd} IEEE/ACM Int'l Conf.\ on Automated Software Engineering},
  Year                     = {2007},
  Pages                    = {461--464},
  DOI                      = {10.1145/1321631.1321709},
  File                     = {:Linstead-etal_2007.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@InProceedings{Linstead-etal_2007a,
  Title                    = {Mining eclipse developer contributions via author-topic models},
  Author                   = {Linstead, Erik and Rigor, Paul and Bajracharya, Sushil and Lopes, Cristina and Baldi, Pierre},
  Booktitle                = {Mining Software Repositories, 2007. ICSE Workshops MSR'07. Fourth International Workshop on},
  Year                     = {2007},
  Organization             = {IEEE},
  Pages                    = {30--30},
  DOI                      = {10.1109/MSR.2007.20},
  File                     = {:Linstead-etal_2007a.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4228667}
}

@InProceedings{Liu-etal_2007,
  Title                    = {Feature location via information retrieval based filtering of a single scenario execution trace},
  Author                   = {Liu, Dapeng and Marcus, Andrian and Poshyvanyk, Denys and Rajlich, Vaclav},
  Booktitle                = {Proceedings of the twenty-second IEEE/ACM international conference on Automated software engineering},
  Year                     = {2007},
  Organization             = {ACM},
  Pages                    = {234--243},
  DOI                      = {10.1145/1321631.1321667},
  File                     = {:Liu-etal_2007.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1321667}
}

@InProceedings{Liu-etal_2005,
  Title                    = {Understanding the Open-Source Software Development Process: a Case Study with {CVSChecker}},
  Author                   = {Y. Liu and E. Stoulia and H. Erdogmus},
  Booktitle                = {Proc.\ of the 1\textsuperscript{st} Int'l Conf.\ on Open Source Systems},
  Year                     = {2005},
  File                     = {:Liu-etal_2005.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://oss2005.case.unibz.it/Papers/71.pdf}
}

@InProceedings{Lukins-etal_2008,
  author       = {Lukins, Stacy K. and Kraft, Nicholas A. and Etzkorn, Letha H.},
  title        = {Source code retrieval for bug localization using latent dirichlet allocation},
  booktitle    = {Reverse Engineering, 2008. WCRE'08. 15th Working Conference on},
  year         = {2008},
  pages        = {155--164},
  organization = {IEEE},
  doi          = {10.1109/WCRE.2008.33},
  file         = {:Lukins-etal_2008.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4656405},
}

@Article{Lukins-etal_2010,
  author    = {Lukins, Stacy K. and Kraft, Nicholas A. and Etzkorn, Letha H.},
  title     = {Bug localization using latent Dirichlet allocation},
  journal   = {Information and Software Technology},
  year      = {2010},
  volume    = {52},
  number    = {9},
  pages     = {972--990},
  doi       = {10.1016/j.infsof.2010.04.002},
  file      = {:Lukins-etal_2010.pdf:PDF},
  owner     = {cscorley},
  publisher = {Elsevier},
  timestamp = {2014.12.08},
  url       = {http://www.sciencedirect.com/science/article/pii/S0950584910000650},
}

@InProceedings{Ma-etal_2009,
  Title                    = {Expert recommendation with usage expertise},
  Author                   = {Ma, David and Schuler, David and Zimmermann, Thomas and Sillito, Jonathan},
  Booktitle                = {2009 IEEE International Conference on Software Maintenance},
  Year                     = {2009},
  Pages                    = {535--538},
  Publisher                = {IEEE},
  Volume                   = {0},
  Abstract                 = {Global and distributed software development increases the need to find and connect developers with relevant expertise. Existing recommendation systems typically model expertise based on file changes (implementation expertise). While these approaches have shown success, they require a substantial recorded history of development for a project. Previously, we have proposed the concept of usage expertise, i.e., expertise manifested through the act of calling (using) a method. In this paper, we assess the viability of this concept by evaluating expert recommendations for the ASPECTJ and ECLIPSE projects. We find that both usage and implementation expertise have comparable levels of accuracy, which suggests that usage expertise may be used as a substitute measure. We also find a notable overlap of method calls across both projects, which suggests that usage expertise can be leveraged to recommend experts from different projects and thus for projects with little or no history.},
  DOI                      = {10.1109/ICSM.2009.5306386},
  File                     = {:Ma-etal_2009.pdf:PDF},
  ISBN                     = {978-1-4244-4897-5},
  Journal                  = {Software Maintenance, IEEE International Conference on},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-03 22:44:32},
  Timestamp                = {2014.11.27}
}

@InProceedings{Madsen-etal_2004,
  Title                    = {Pruning the vocabulary for better context recognition},
  Author                   = {Madsen, Rasmus Elsborg and Sigurdsson, Sigurdur and Hansen, Lars Kai and Larsen, Jan},
  Booktitle                = {Pattern Recognition, 2004. ICPR 2004. Proceedings of the 17th International Conference on},
  Year                     = {2004},
  Organization             = {IEEE},
  Pages                    = {483--488},
  Volume                   = {2},
  DOI                      = {10.1109/ICPR.2004.1334270},
  File                     = {:Madsen-etal_2004.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.28},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1334270}
}

@Book{Manning-etal_2008,
  title     = {Introduction to information retrieval},
  publisher = {Cambridge university press Cambridge},
  year      = {2008},
  author    = {Manning, Christopher D. and Raghavan, Prabhakar and Sch{\"u}tze, Hinrich},
  volume    = {1},
  file      = {:Manning-etal_2008.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2015.01.11},
  url       = {http://nlp.stanford.edu/IR-book/information-retrieval-book.html},
}

@InProceedings{Marcus-Menzies_2010,
  Title                    = {Software is data too},
  Author                   = {Marcus, Andrian and Menzies, Timothy},
  Booktitle                = {Proceedings of the FSE/SDP workshop on Future of software engineering research},
  Year                     = {2010},
  Organization             = {ACM},
  Pages                    = {229--232},
  DOI                      = {10.1145/1882362.1882410},
  File                     = {:Marcus-Menzies_2010.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1882410}
}

@InProceedings{Marcus-Poshyvanyk_2005,
  Title                    = {The conceptual cohesion of classes},
  Author                   = {Marcus, A. and Poshyvanyk, D.},
  Booktitle                = {Software Maintenance, 2005. ICSM'05. Proceedings of the 21st IEEE International Conference on},
  Year                     = {2005},
  Pages                    = {133-142},
  DOI                      = {10.1109/ICSM.2005.89},
  File                     = {:Marcus-Poshyvanyk_2005.pdf:PDF},
  ISSN                     = {1063-6773},
  Keywords                 = {object-oriented programming;software libraries;software metrics;OO software system classes;conceptual cohesion;fault proneness prediction;object-oriented software cohesion measurement;open source software;software modularization;software quality assessment;Computer science;Information analysis;Measurement standards;Open source software;Particle measurements;Quality assessment;Software measurement;Software quality;Software reusability;Software systems}
}

@InProceedings{Marcus-etal_2004,
  author       = {Marcus, Andrian and Sergeyev, Andrey and Rajlich, Vaclav and Maletic, Jonathan I.},
  title        = {An information retrieval approach to concept location in source code},
  booktitle    = {Proceedings of the 11th Working Conference on Reverse Engineering},
  year         = {2004},
  pages        = {214--223},
  organization = {IEEE},
  doi          = {10.1109/WCRE.2004.10},
  file         = {:Marcus-etal_2004.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1374321},
}

@InProceedings{Martie-Hoe_2015,
  Title                    = {Sameness: An Experiment in Code Search},
  Author                   = {Martie, Lee and van der Hoe, Andr{\'e}},
  Booktitle                = {12th Working Conference on Mining Software Repositories},
  Year                     = {2015},
  File                     = {:Martie-Hoe_2015.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2015.05.25},
  URL                      = {http://conferences.computer.org/icse/2015/content/papers/5594a076.pdf}
}

@InProceedings{Maskeri-etal_2008,
  Title                    = {Mining Business Topics in Source Code Using Latent Dirichlet Allocation},
  Author                   = {Maskeri, Girish and Sarkar, Santonu and Heafield, Kenneth},
  Booktitle                = {Proceedings of the 1\textsuperscript{st} India Software Engineering Conference},
  Year                     = {2008},
  Pages                    = {113--120},
  Publisher                = {ACM},
  Series                   = {ISEC '08},
  Acmid                    = {1342234},
  DOI                      = {10.1145/1342211.1342234},
  File                     = {:Maskeri-etal_2008.pdf:PDF},
  ISBN                     = {978-1-59593-917-3},
  Numpages                 = {8},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@InProceedings{Matter-etal_2009,
  Title                    = {Assigning bug reports using a vocabulary-based expertise model of developers},
  Author                   = {Matter, Dominique and Kuhn, Adrian and Nierstrasz, Oscar},
  Booktitle                = {2009 6\textsuperscript{th} IEEE International Working Conference on Mining Software Repositories},
  Year                     = {2009},
  Pages                    = {131--140},
  Publisher                = {IEEE},
  Abstract                 = {For popular software systems, the number of daily submitted bug reports is high. Triaging these incoming reports is a time consuming task. Part of the bug triage is the assignment of a report to a developer with the appropriate expertise. In this paper, we present an approach to automatically suggest developers who have the appropriate expertise for handling a bug report. We model developer expertise using the vocabulary found in their source code contributions and compare this vocabulary to the vocabulary of bug reports. We evaluate our approach by comparing the suggested experts to the persons who eventually worked on the bug. Using eight years of Eclipse development as a case study, we achieve 33.6\% top-1 precision and 71.0\% top-10 recall.},
  DOI                      = {10.1109/MSR.2009.5069491},
  File                     = {:Matter-etal_2009.pdf:PDF},
  ISBN                     = {978-1-4244-3493-0},
  Journal                  = {Mining Software Repositories, 2009. MSR '09. 6th IEEE International Working Conference on},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 03:00:54},
  Timestamp                = {2014.11.27}
}

@InProceedings{McDonald-Ackerman_1998,
  Title                    = {Just talk to me: a field study of expertise location},
  Author                   = {McDonald, David W. and Ackerman, Mark S.},
  Booktitle                = {Proceedings of the 1998 ACM conference on Computer supported cooperative work},
  Year                     = {1998},
  Pages                    = {315--324},
  Publisher                = {ACM},
  Series                   = {CSCW '98},
  Abstract                 = {An abstract is not available.},
  DOI                      = {10.1145/289444.289506},
  File                     = {:McDonald-Ackerman_1998.pdf:PDF},
  ISBN                     = {1-58113-009-0},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:20:28},
  Timestamp                = {2014.11.27}
}

@InProceedings{McDonald-Ackerman_2000,
  author       = {McDonald, David W. and Ackerman, Mark S.},
  title        = {Expertise recommender: a flexible recommendation system and architecture},
  booktitle    = {Proceedings of the 2000 ACM conference on Computer supported cooperative work},
  year         = {2000},
  pages        = {231--240},
  organization = {ACM},
  doi          = {10.1145/358916.358994},
  file         = {:McDonald-Ackerman_2000.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=358994},
}

@InProceedings{Mikolov-etal_2013,
  author    = {Mikolov, Tomas and Sutskever, Ilya and Chen, Kai and Corrado, Greg S. and Dean, Jeff},
  title     = {Distributed representations of words and phrases and their compositionality},
  booktitle = {Advances in Neural Information Processing Systems},
  year      = {2013},
  pages     = {3111--3119},
  file      = {:Mikolov-etal_2013.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2015.02.22},
  url       = {http://papers.nips.cc/paper/5021-distributed-representations-of-words-and-phrases-and-their-compositionality.pdf},
}

@InProceedings{Mimno-etal_2007,
  Title                    = {Mixtures of hierarchical topics with pachinko allocation},
  Author                   = {Mimno, David and Li, Wei and McCallum, Andrew},
  Booktitle                = {Proceedings of the 24th international conference on Machine learning},
  Year                     = {2007},
  Organization             = {ACM},
  Pages                    = {633--640},
  DOI                      = {10.1145/1273496.1273576},
  File                     = {:Mimno-etal_2007.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1273576}
}

@InProceedings{Minto-Murphy_2007,
  Title                    = {Recommending Emergent Teams},
  Author                   = {Minto, Shawn and Murphy, Gail C.},
  Booktitle                = {Fourth International Workshop on Mining Software Repositories (MSR'07:ICSE Workshops 2007)},
  Year                     = {2007},
  Pages                    = {5},
  Publisher                = {IEEE},
  DOI                      = {10.1109/MSR.2007.27},
  File                     = {:Minto-Murphy_2007.pdf:PDF},
  ISBN                     = {0-7695-2950-X},
  Journal                  = {Mining Software Repositories, 2007. ICSE Workshops MSR '07. Fourth International Workshop on},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 02:48:11},
  Timestamp                = {2014.11.27}
}

@InProceedings{Mockus_2009,
  Title                    = {Succession: Measuring transfer of code and developer productivity},
  Author                   = {Mockus, Audris},
  Booktitle                = {Proceedings of the 31st International Conference on Software Engineering},
  Year                     = {2009},
  Organization             = {IEEE Computer Society},
  Pages                    = {67--77},
  DOI                      = {10.1109/ICSE.2009.5070509},
  File                     = {:Mockus_2009.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1555023}
}

@InProceedings{Mockus-Herbsleb_2002,
  Title                    = {Expertise browser: a quantitative approach to identifying expertise},
  Author                   = {Mockus, Audris and Herbsleb, James D.},
  Booktitle                = {Proceedings of the 24\textsuperscript{th} International Conference on Software Engineering},
  Year                     = {2002},
  Pages                    = {503--512},
  Publisher                = {ACM},
  Series                   = {ICSE '02},
  Abstract                 = {Finding relevant expertise is a critical need in collaborative software engineering, particularly in geographically distributed developments. We introduce a tool that uses data from change management systems to locate people with desired expertise. It uses a quantification of experience, and presents evidence to validate this quantification as a measure of expertise. The tool enables developers, for example, easily to distinguish someone who has worked only briefly in a particular area of the code from someone who has more extensive experience, and to locate people with broad expertise throughout large parts of the product, such as module or even subsystems. In addition, it allows a user to discover expertise profiles for individuals or organizations. Data from a deployment of the tool in a large software development organization shows that newer, remote sites tend to use the tool for expertise location more frequently. Larger, more established sites used the tool to find expertise profiles for people or organizations. We conclude by describing extensions that provide continuous awareness of ongoing work and an interactive, quantitative resume.},
  DOI                      = {10.1145/581339.581401},
  File                     = {:Mockus-Herbsleb_2002.pdf:PDF},
  ISBN                     = {1-58113-472-X},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 02:54:51},
  Timestamp                = {2014.11.27}
}

@Article{Mockus-Weiss_2000,
  author    = {Mockus, Audris and Weiss, David M.},
  title     = {Predicting risk of software changes},
  journal   = {Bell Labs Technical Journal},
  year      = {2000},
  volume    = {5},
  number    = {2},
  pages     = {169--180},
  doi       = {10.1002/bltj.2229},
  file      = {:Mockus-Weiss_2000.pdf:PDF},
  owner     = {cscorley},
  publisher = {Alcatel-Lucent},
  timestamp = {2014.12.08},
  url       = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6772130},
}

@InProceedings{Moonen_2001,
  Title                    = {Generating robust parsers using island grammars},
  Author                   = {Moonen, Leon},
  Booktitle                = {Reverse Engineering, 2001. Proceedings. Eighth Working Conference on},
  Year                     = {2001},
  Organization             = {IEEE},
  Pages                    = {13--22},
  DOI                      = {10.1109/WCRE.2001.957806},
  File                     = {:Moonen_2001.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=957806}
}

@InProceedings{Moreno-etal_2014,
  Title                    = {On the Use of Stack Traces to Improve Text Retrieval-Based Bug Localization},
  Author                   = {Moreno, Laura and Treadway, John Joseph and Marcus, Andrian and Shen, Wuwei},
  Booktitle                = {Software Maintenance and Evolution (ICSME), 2014 IEEE International Conference on},
  Year                     = {2014},
  Pages                    = {151--160},
  Abstract                 = {Many bug localization techniques rely on Text Retrieval (TR) models. The most successful approaches have been proven to be the ones combining TR techniques with static analysis, dynamic analysis, and/or software repositories information. Dynamic software analysis and software repositories mining bring a significant overhead, as they require instrumenting and executing the software, and analyzing large amounts of data, respectively. We propose a new static technique, named Lobster (Locating Bugs using Stack Traces and text Retrieval), which is meant to improve TR-based bug localization without the overhead associated with dynamic analysis and repository mining. Specifically, we use the stack traces submitted in a bug report to compute the similarity between their code elements and the source code of a software system. We combine the stack trace based similarity and the textual similarity provided by TR techniques to retrieve code elements relevant to bug reports. We empirically evaluated Lobster using 155 bug reports containing stack traces from 14 open source software systems. We used Lucene, an optimized version of VSM, as baseline of comparison. The results show that, in average, Lobster improves or maintains the effectiveness of Lucene-based bug localization in 82% of the cases.},
  DOI                      = {10.1109/ICSME.2014.37},
  File                     = {:Moreno-etal_2014.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6976081}
}

@InProceedings{Moser-etal_2008,
  Title                    = {A comparative analysis of the efficiency of change metrics and static code attributes for defect prediction},
  Author                   = {Moser, Raimund and Pedrycz, Witold and Succi, Giancarlo},
  Booktitle                = {Software Engineering, 2008. ICSE'08. ACM/IEEE 30th International Conference on},
  Year                     = {2008},
  Organization             = {IEEE},
  Pages                    = {181--190},
  DOI                      = {10.1145/1368088.1368114},
  File                     = {:Moser-etal_2008.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4814129}
}

@InProceedings{Munson-Elbaum_1998,
  author       = {Munson, John C. and Elbaum, Sebastian G.},
  title        = {Code churn: A measure for estimating the impact of code change},
  booktitle    = {Software Maintenance, 1998. Proceedings., International Conference on},
  year         = {1998},
  pages        = {24--31},
  organization = {IEEE},
  doi          = {10.1109/ICSM.1998.738486},
  file         = {:Munson-Elbaum_1998.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=738486},
}

@InProceedings{Nagappan-Ball_2005,
  Title                    = {Use of relative code churn measures to predict system defect density},
  Author                   = {Nagappan, Nachiappan and Ball, Thomas},
  Booktitle                = {Software Engineering, 2005. ICSE 2005. Proceedings. 27th International Conference on},
  Year                     = {2005},
  Organization             = {IEEE},
  Pages                    = {284--292},
  DOI                      = {10.1109/ICSE.2005.1553571},
  File                     = {:Nagappan-Ball_2005.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1553571}
}

@InProceedings{Nagappan-etal_2008,
  Title                    = {The influence of organizational structure on software quality: an empirical case study},
  Author                   = {Nagappan, Nachiappan and Murphy, Brendan and Basili, Victor},
  Booktitle                = {Proceedings of the 30th international conference on Software engineering},
  Year                     = {2008},
  Organization             = {ACM},
  Pages                    = {521--530},
  DOI                      = {10.1145/1368088.1368160},
  File                     = {:Nagappan-etal_2008.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1368160}
}

@InProceedings{Oliveto-etal_2010,
  Title                    = {On the equivalence of information retrieval methods for automated traceability link recovery},
  Author                   = {Oliveto, Rocco and Gethers, Malcom and Poshyvanyk, Denys and De Lucia, Andrea},
  Booktitle                = {Program Comprehension (ICPC), 2010 IEEE 18th International Conference on},
  Year                     = {2010},
  Organization             = {IEEE},
  Pages                    = {68--71},
  DOI                      = {10.1109/ICPC.2010.20},
  File                     = {:Oliveto-etal_2010.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5521762}
}

@InProceedings{Panichella-etal_2013a,
  Title                    = {How to Effectively Use Topic Models for Software Engineering Tasks? An Approach Based on Genetic Algorithms},
  Author                   = {Panichella, Annibale and Dit, Bogdan and Oliveto, Rocco and Di Penta, Massimiliano and Poshyvanyk, Denys and De Lucia, Andrea},
  Booktitle                = {Proceedings of the 2013 International Conference on Software Engineering},
  Year                     = {2013},
  Pages                    = {522--531},
  Publisher                = {IEEE Press},
  Series                   = {ICSE '13},
  Acmid                    = {2486857},
  DOI                      = {10.1109/ICSE.2013.6606598},
  File                     = {:Panichella-etal_2013a.pdf:PDF},
  ISBN                     = {978-1-4673-3076-3},
  Numpages                 = {10},
  URL                      = {http://dl.acm.org/citation.cfm?id=2486788.2486857}
}

@InProceedings{Panichella-etal_2013,
  author    = {Panichella, A. and McMillan, C. and Moritz, E. and Palmieri, D. and Oliveto, R. and Poshyvanyk, D. and De Lucia, A.},
  title     = {When and How Using Structural Information to Improve {IR}-Based Traceability Recovery},
  booktitle = {2013 17th European Conference on Software Maintenance and Reengineering},
  year      = {2013},
  publisher = {IEEE},
  doi       = {10.1109/csmr.2013.29},
  file      = {:Panichella-etal_2013.pdf:PDF},
  isbn      = {978-1-4673-5833-0},
  owner     = {cscorley},
  timestamp = {2014.12.24},
  url       = {http://dx.doi.org/10.1109/CSMR.2013.29},
}

@InProceedings{Panjer_2007,
  Title                    = {Predicting Eclipse Bug Lifetimes},
  Author                   = {Panjer, Lucas D.},
  Booktitle                = {Fourth International Workshop on Mining Software Repositories (MSR'07:ICSE Workshops 2007)},
  Year                     = {2007},
  Pages                    = {29},
  Publisher                = {IEEE},
  Abstract                 = {In non-trivial software development projects planning and allocation of resources is an important and difficult task. Estimation of work time to fix a bug is commonly used to support this process. This research explores the viability of using data mining tools to predict the time to fix a bug given only the basic information known at the beginning of a bug's lifetime. To address this question, a historical portion of the Eclipse Bugzilla database is used for modeling and predicting bug lifetimes. A bug history transformation process is described and several data mining models are built and tested. Interesting behaviours derived from the models are documented. The models can correctly predict up to 34.9\% of the bugs into a discretized log scaled lifetime class.},
  DOI                      = {10.1109/MSR.2007.25},
  File                     = {:Panjer_2007.pdf:PDF},
  ISBN                     = {0-7695-2950-X},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:44:07},
  Timestamp                = {2014.11.27}
}

@InProceedings{Parnin-DeLine_2010,
  Title                    = {Evaluating Cues for Resuming Interrupted Programming Tasks},
  Author                   = {Parnin, Chris and DeLine, Robert},
  Booktitle                = {Proceedings of the SIGCHI Conference on Human Factors in Computing Systems},
  Year                     = {2010},
  Pages                    = {93--102},
  Publisher                = {ACM},
  Series                   = {CHI '10},
  Acmid                    = {1753342},
  DOI                      = {10.1145/1753326.1753342},
  File                     = {:Parnin-DeLine_2010.pdf:PDF},
  ISBN                     = {978-1-60558-929-9},
  Keywords                 = {cues, interruptions, task resumption},
  Numpages                 = {10},
  URL                      = {http://doi.acm.org/10.1145/1753326.1753342}
}

@Article{Parnin-Rugaber_2011,
  author    = {Parnin, Chris and Rugaber, Spencer},
  title     = {Resumption strategies for interrupted programming tasks},
  journal   = {Software Quality Journal},
  year      = {2011},
  volume    = {19},
  number    = {1},
  pages     = {5--34},
  doi       = {10.1007/s11219-010-9104-9},
  file      = {:Parnin-Rugaber_2011.pdf:PDF},
  owner     = {cscorley},
  publisher = {Springer},
  timestamp = {2015.06.24},
  url       = {http://www.cc.gatech.edu/~vector/papers/sqj.pdf},
}

@InProceedings{Parnin-Rugaber_2012,
  Title                    = {Programmer information needs after memory failure},
  Author                   = {Parnin, C. and Rugaber, S.},
  Booktitle                = {Program Comprehension (ICPC), 2012 IEEE 20th International Conference on},
  Year                     = {2012},
  Pages                    = {123-132},
  Abstract                 = {Despite its vast capacity and associative powers, the human brain does not deal well with interruptions. Particularly in situations where information density is high, such as during a programming task, recovering from an interruption requires extensive time and effort. Although modern program development environments have begun to recognize this problem, none of these tools take into account the brain's structure and limitations. In this paper, we present a conceptual framework for understanding the strengths and weaknesses of human memory, particularly with respect to it ability to deal with work interruptions. The framework explains empirical results obtained from experiments in which programmers were interrupted while working. Based on the framework, we discuss programmer information needs that development tools must satisfy and suggest several memory aids such tools could provide. We also describe our prototype implementation of these memory aids.},
  DOI                      = {10.1109/ICPC.2012.6240479},
  File                     = {:Parnin-Rugaber_2012.pdf:PDF},
  ISSN                     = {1092-8138},
  Keywords                 = {brain;information needs;neurophysiology;programming;conceptual framework;human brain;human memory strength;human memory weakness;information density;interruptions;memory failure;program development environments;programmer information needs;Associative memory;Hippocampus;Humans;Memory management;Monitoring;Neuroscience;Programming}
}

@InProceedings{Parnin-Treude_2011,
  Title                    = {Measuring API Documentation on the Web},
  Author                   = {Parnin, Chris and Treude, Christoph},
  Booktitle                = {Proceedings of the 2Nd International Workshop on Web 2.0 for Software Engineering},
  Year                     = {2011},
  Pages                    = {25--30},
  Publisher                = {ACM},
  Series                   = {Web2SE '11},
  Acmid                    = {1984706},
  DOI                      = {10.1145/1984701.1984706},
  File                     = {:Parnin-Treude_2011.pdf:PDF},
  ISBN                     = {978-1-4503-0595-2},
  Keywords                 = {api documentation, crowd documentation, social media},
  Numpages                 = {6},
  URL                      = {http://doi.acm.org/10.1145/1984701.1984706}
}

@InProceedings{Petrenko-etal_2008,
  Title                    = {Partial domain comprehension in software evolution and maintenance},
  Author                   = {Petrenko, Maksym and Rajlich, V{\'a}clav and Vanciu, Radu},
  Booktitle                = {Program Comprehension, 2008. ICPC 2008. The 16th IEEE International Conference on},
  Year                     = {2008},
  Organization             = {IEEE},
  Pages                    = {13--22},
  DOI                      = {10.1109/ICPC.2008.14},
  File                     = {:Petrenko-etal_2008.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4556113}
}

@InProceedings{Pierret-Poshyvanyk_2009,
  author    = {Pierret, Derrin and Poshyvanyk, Denys},
  title     = {An empirical exploration of regularities in open-source software lexicons},
  booktitle = {2009 IEEE 17th International Conference on Program Comprehension},
  year      = {2009},
  publisher = {IEEE},
  doi       = {10.1109/icpc.2009.5090047},
  file      = {:Pierret-Poshyvanyk_2009.pdf:PDF},
  isbn      = {978-1-4244-3998-0},
  owner     = {cscorley},
  timestamp = {2014.12.24},
  url       = {http://dx.doi.org/10.1109/ICPC.2009.5090047},
}

@InProceedings{Pinzger-etal_2008,
  Title                    = {Can developer-module networks predict failures?},
  Author                   = {Pinzger, Martin and Nagappan, Nachiappan and Murphy, Brendan},
  Booktitle                = {Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering},
  Year                     = {2008},
  Organization             = {ACM},
  Pages                    = {2--12},
  DOI                      = {10.1145/1453101.1453105},
  File                     = {:Pinzger-etal_2008.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1453105}
}

@InProceedings{Podgurski-etal_2003,
  Title                    = {Automated support for classifying software failure reports},
  Author                   = {Podgurski, A. and Leon, D. and Francis, P. and Masri, W. and Minch, M. and Sun, Jiayang and Wang, Bin},
  Booktitle                = {25th International Conference on Software Engineering, 2003. Proceedings.},
  Year                     = {2003},
  Pages                    = {465--475},
  Publisher                = {IEEE},
  Volume                   = {0},
  Abstract                 = {This paper proposes automated support for classifying reported software failures in order to facilitate prioritizing them and diagnosing their causes. A classification strategy is presented that involves the use of supervised and unsupervised pattern classification and multivariate visualization. These techniques are applied to profiles of failed executions in order to group together failures with the same or similar causes. The resulting classification is then used to assess the frequency and severity of failures caused by particular defects and to help diagnose those defects. The results of applying the proposed classification strategy to failures of three large subject programs are reported These results indicate that the strategy can be effective.},
  DOI                      = {10.1109/ICSE.2003.1201224},
  File                     = {:Podgurski-etal_2003.pdf:PDF},
  ISBN                     = {0-7695-1877-X},
  ISSN                     = {0270-5257},
  Journal                  = {Software Engineering, International Conference on},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-22 01:56:36},
  Timestamp                = {2014.11.27}
}

@InProceedings{Port-etal_2011,
  Title                    = {Experiences with text mining large collections of unstructured systems development artifacts at jpl},
  Author                   = {Dan Port and Allen Nikora and Jairus Hihn and LiGuo Huang},
  Booktitle                = {Software Engineering, International Conference on},
  Year                     = {2011},
  Pages                    = {701--710},
  Publisher                = {IEEE Computer Society},
  DOI                      = {10.1145/1985793.1985891},
  File                     = {:Port-etal_2011.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://trs-new.jpl.nasa.gov/dspace/bitstream/2014/42005/1/11-0891.pdf}
}

@Article{Porter_1980,
  author    = {Porter, Martin F.},
  title     = {An algorithm for suffix stripping},
  journal   = {Program: electronic library and information systems},
  year      = {1980},
  volume    = {14},
  number    = {3},
  pages     = {130--137},
  file      = {:Porter_1980.pdf:PDF},
  owner     = {cscorley},
  publisher = {MCB UP Ltd},
  timestamp = {2014.12.08},
  url       = {http://www.emeraldinsight.com/journals.htm?articleid=1670983&amp;show=abstract},
}

@Article{Poshyvanyk-etal_2012,
  author    = {Poshyvanyk, Denys and Gethers, Malcom and Marcus, Andrian},
  title     = {Concept location using formal concept analysis and information retrieval},
  journal   = {ACM Transactions on Software Engineering and Methodology},
  year      = {2012},
  volume    = {21},
  number    = {4},
  pages     = {1--34},
  issn      = {1049-331X},
  doi       = {10.1145/2377656.2377660},
  file      = {:Poshyvanyk-etal_2012.pdf:PDF},
  owner     = {cscorley},
  publisher = {Association for Computing Machinery (ACM)},
  timestamp = {2014.12.24},
  url       = {http://dx.doi.org/10.1145/2377656.2377660},
}

@Article{Poshyvanyk-etal_2007,
  author    = {Poshyvanyk, Denys and Gu{\'e}h{\'e}neuc, Y.-G. and Marcus, Andrian and Antoniol, Giuliano and Rajlich, Vaclav},
  title     = {Feature location using probabilistic ranking of methods based on execution scenarios and information retrieval},
  journal   = {Software Engineering, IEEE Transactions on},
  year      = {2007},
  volume    = {33},
  number    = {6},
  pages     = {420--432},
  doi       = {10.1109/TSE.2007.1016},
  file      = {:Poshyvanyk-etal_2007.pdf:PDF},
  owner     = {cscorley},
  publisher = {IEEE},
  timestamp = {2014.12.08},
  url       = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4181710},
}

@InProceedings{Poshyvanyk-etal_2006,
  author       = {Poshyvanyk, Denys and Gueheneuc, Y.-G. and Marcus, Andrian and Antoniol, Giuliano and Rajlich, V{\'a}clav},
  title        = {Combining probabilistic ranking and latent semantic indexing for feature identification},
  booktitle    = {Program Comprehension, 2006. ICPC 2006. 14th IEEE International Conference on},
  year         = {2006},
  pages        = {137--148},
  organization = {IEEE},
  doi          = {10.1109/ICPC.2006.17},
  file         = {:Poshyvanyk-etal_2006.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1631116},
}

@InProceedings{Poshyvanyk-Marcus_2006,
  Title                    = {The conceptual coupling metrics for object-oriented systems},
  Author                   = {Poshyvanyk, Denys and Marcus, Andrian},
  Booktitle                = {Software Maintenance, 2006. ICSM'06. 22nd IEEE International Conference on},
  Year                     = {2006},
  Organization             = {IEEE},
  Pages                    = {469--478},
  DOI                      = {10.1109/ICSM.2006.67},
  File                     = {:Poshyvanyk-Marcus_2006.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4021375}
}

@InProceedings{Poshyvanyk-Marcus_2007,
  Title                    = {Combining Formal Concept Analysis with Information Retrieval for Concept Location in Source Code},
  Author                   = {Poshyvanyk, D. and Marcus, A.},
  Booktitle                = {15th IEEE International Conference on Program Comprehension (ICPC '07)},
  Year                     = {2007},
  Pages                    = {37--48},
  Publisher                = {IEEE},
  Abstract                 = {The paper addresses the problem of concept location in source code by presenting an approach which combines formal concept analysis (FCA) and latent semantic indexing (LSI). In the proposed approach, LSI is used to map the concepts expressed in queries written by the programmer to relevant parts of the source code, presented as a ranked list of search results. Given the ranked list of source code elements, our approach selects most relevant attributes from these documents and organizes the results in a concept lattice, generated via FCA. The approach is evaluated in a case study on concept location in the source code of eclipse, an industrial size integrated development environment. The results of the case study show that the proposed approach is effective in organizing different concepts and their relationships present in the subset of the search results. The proposed concept location method outperforms the simple ranking of the search results, reducing the programmers' effort.},
  DOI                      = {10.1109/ICPC.2007.13},
  File                     = {:Poshyvanyk-Marcus_2007.pdf:PDF},
  Institution              = {Dept. of Comput. Sci., Wayne State Univ., Detroit, MI},
  ISBN                     = {0-7695-2860-0},
  ISSN                     = {1063-6897},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-29 14:38:24},
  Timestamp                = {2014.11.27}
}

@InProceedings{Rahman-Devanbu_2011,
  Title                    = {Ownership, experience and defects: a fine-grained study of authorship},
  Author                   = {Rahman, Foyzur and Devanbu, Premkumar},
  Booktitle                = {Proceedings of the 33rd International Conference on Software Engineering},
  Year                     = {2011},
  Organization             = {ACM},
  Pages                    = {491--500},
  DOI                      = {10.1145/1985793.1985860},
  File                     = {:Rahman-Devanbu_2011.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1985860}
}

@Article{Rajlich-Gosavi_2004,
  Title                    = {Incremental change in object-oriented programming},
  Author                   = {Rajlich, Vaclav and Gosavi, Prashant},
  Journal                  = {Software, IEEE},
  Year                     = {2004},
  Number                   = {4},
  Pages                    = {62--69},
  Volume                   = {21},
  DOI                      = {10.1109/MS.2004.17},
  File                     = {:Rajlich-Gosavi_2004.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {IEEE},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1309648}
}

@InProceedings{Rajlich-Wilde_2002,
  Title                    = {The role of concepts in program comprehension},
  Author                   = {Rajlich, V{\'a}clav and Wilde, Norman},
  Booktitle                = {Program Comprehension, 2002. Proceedings. 10th International Workshop on},
  Year                     = {2002},
  Organization             = {IEEE},
  Pages                    = {271--278},
  DOI                      = {10.1109/WPC.2002.1021348},
  File                     = {:Rajlich-Wilde_2002.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=1021348}
}

@PhdThesis{Rao_2013,
  Title                    = {Incremental update framework for efficient retrieval from software libraries for bug localization},
  Author                   = {Rao, Shivani},
  School                   = {Purdue University},
  Year                     = {2013},
  File                     = {:Rao_2013.pdf:PDF},
  Owner                    = {cscorley},
  Pages                    = {173},
  Timestamp                = {2014.11.27},
  URL                      = {http://docs.lib.purdue.edu/dissertations/AAI3613357/}
}

@InProceedings{Rao-Kak_2011,
  Title                    = {Retrieval from Software Libraries for Bug Localization: A Comparative Study of Generic and Composite Text Models},
  Author                   = {Rao, Shivani and Kak, Avinash},
  Booktitle                = {Proceedings of the 8\textsuperscript{th} Working Conference on Mining Software Repositories},
  Year                     = {2011},
  Pages                    = {43--52},
  Publisher                = {ACM},
  Series                   = {MSR '11},
  Acmid                    = {1985451},
  DOI                      = {10.1145/1985441.1985451},
  File                     = {:Rao-Kak_2011.pdf:PDF},
  ISBN                     = {978-1-4503-0574-7},
  Numpages                 = {10},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@TechReport{Rao-Kak_2013,
  Title                    = {moreBugs: A New Dataset for Benchmarking Algorithms for Information Retrieval from Software Repositories},
  Author                   = {Rao, Shivani and Kak, Avinash},
  Institution              = {Purdue University},
  Year                     = {2013},
  File                     = {:Rao-Kak_2013.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://docs.lib.purdue.edu/ecetr/447/}
}

@InProceedings{Rao-etal_2013,
  Title                    = {An incremental update framework for efficient retrieval from software libraries for bug localization},
  Author                   = {Rao, Shivani and Medeiros, Henry and Kak, Avinash},
  Booktitle                = {Reverse Engineering (WCRE), 2013 20th Working Conference on},
  Year                     = {2013},
  Organization             = {IEEE},
  Pages                    = {62--71},
  DOI                      = {10.1109/WCRE.2013.6671281},
  File                     = {:Rao-etal_2013.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=6671281}
}

@InProceedings{Ratanotayanon-etal_2010,
  author    = {Ratanotayanon, Sukanya and Choi, Hye Jung and Sim, Susan Elliott},
  title     = {My Repository Runneth Over: An Empirical Study on Diversifying Data Sources to Improve Feature Search},
  booktitle = {2010 IEEE 18th International Conference on Program Comprehension},
  year      = {2010},
  publisher = {IEEE},
  doi       = {10.1109/icpc.2010.33},
  file      = {:Ratanotayanon-etal_2010.pdf:PDF},
  isbn      = {978-1-4244-7604-6},
  owner     = {cscorley},
  timestamp = {2014.12.26},
  url       = {http://dx.doi.org/10.1109/ICPC.2010.33},
}

@Article{Ratcliff-Metzener_1988,
  author    = {Ratcliff, J. W. and Metzener, D.},
  title     = {Pattern matching: The gestalt approach},
  journal   = {Dr. Dobb's Journal},
  year      = {1988},
  volume    = {13},
  number    = {7},
  pages     = {46},
  owner     = {cscorley},
  timestamp = {2014.11.27},
  url       = {http://drdobbs.com/database/184407970},
}

@InCollection{Rehurek_2011,
  author    = {Radim {{\v{R}}}eh{\r{u}}{{\v{r}}}ek},
  title     = {Subspace tracking for latent semantic analysis},
  booktitle = {Advances in Information Retrieval},
  publisher = {Springer},
  year      = {2011},
  pages     = {289--300},
  doi       = {10.1007/978-3-642-20161-5_29},
  file      = {:Rehurek_2011.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.12.08},
}

@InProceedings{Rehurek-Sojka_2010,
  author    = {{{\v{R}}}eh{\r{u}}{{\v{r}}}ek, Radim and Sojka, Petr},
  title     = {Software Framework for Topic Modelling with Large Corpora},
  booktitle = {Proceedings of the LREC 2010 Workshop on New Challenges for NLP Frameworks},
  year      = {2010},
  pages     = {45--50},
  publisher = {ELRA},
  day       = {22},
  file      = {:Rehurek-Sojk_2010.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
  url       = {http://www.muni.cz/research/publications/884893},
}

@InProceedings{Revelle-Coppit_2008,
  Title                    = {Improving Feature Location by Combining Dynamic Analysis and Static Inferences},
  Author                   = {Revelle, Meghan and Coppit, David},
  Booktitle                = {Virginia Space Grant Consortium Student Research Conference},
  Year                     = {2008},
  File                     = {:Revelle-Coppit_2008.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://vsgc.odu.edu/src/Conf08/Papers08/Revelle%20-%20Paper.pdf}
}

@InProceedings{Revelle-etal_2010,
  Title                    = {Using data fusion and web mining to support feature location in software},
  Author                   = {Revelle, Meghan and Dit, Bogdan and Poshyvanyk, Denys},
  Booktitle                = {Program Comprehension (ICPC), 2010 IEEE 18th International Conference on},
  Year                     = {2010},
  Organization             = {IEEE},
  Pages                    = {14--23},
  DOI                      = {10.1109/ICPC.2010.10},
  File                     = {:Revelle-etal_2010.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5521780}
}

@Book{Robillard-etal_2014,
  title     = {Recommendation Systems in Software Engineering},
  publisher = {Springer},
  year      = {2014},
  author    = {Robillard, Martin P. and Maalej, Walid and Walker, Robert J. and Zimmermann, Thomas},
  file      = {:Robillard-etal_2014.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.12.23},
}

@Article{Robillard_1999,
  author    = {Robillard, Pierre N.},
  title     = {The role of knowledge in software development},
  journal   = {Communications of the ACM},
  year      = {1999},
  volume    = {42},
  number    = {1},
  pages     = {87--92},
  doi       = {10.1145/291469.291476},
  file      = {:Robillard_1999.pdf:PDF},
  owner     = {cscorley},
  publisher = {ACM},
  timestamp = {2014.12.08},
  url       = {http://dl.acm.org/citation.cfm?id=291476},
}

@Article{Robles-Gonzalez-Barahona_2005,
  author    = {Robles, Gregorio and Gonzalez-Barahona, Jesus M.},
  title     = {Developer identification methods for integrated data from various sources},
  journal   = {ACM SIGSOFT Software Engineering Notes},
  year      = {2005},
  volume    = {30},
  number    = {4},
  pages     = {1--5},
  doi       = {10.1145/1082983.1083162},
  file      = {:Robles-Gonzalez-Barahona_2005.pdf:PDF},
  owner     = {cscorley},
  publisher = {ACM},
  timestamp = {2014.12.08},
  url       = {http://dl.acm.org/citation.cfm?id=1083162},
}

@InProceedings{Rosen-Zvi-etal_2004,
  Title                    = {The Author-topic Model for Authors and Documents},
  Author                   = {Rosen-Zvi, Michal and Griffiths, Thomas and Steyvers, Mark and Smyth, Padhraic},
  Booktitle                = {Proceedings of the 20\textsuperscript{th} Conference on Uncertainty in Artificial Intelligence},
  Year                     = {2004},
  Pages                    = {487--494},
  Publisher                = {AUAI Press},
  Series                   = {UAI '04},
  Acmid                    = {1036902},
  File                     = {:Rosen-Zvi-etal_2004.pdf:PDF},
  ISBN                     = {0-9749039-0-6},
  Numpages                 = {8},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://dl.acm.org/citation.cfm?id=1036843.1036902}
}

@InProceedings{Runeson-etal_2007,
  Title                    = {Detection of Duplicate Defect Reports Using Natural Language Processing},
  Author                   = {Runeson, Per and Alexandersson, Magnus and Nyholm, Oskar},
  Booktitle                = {29th International Conference on Software Engineering (ICSE'07)},
  Year                     = {2007},
  Pages                    = {499--510},
  Publisher                = {IEEE},
  Series                   = {ICSE '07},
  Abstract                 = {Defect reports are generated from various testing and development activities in software engineering. Sometimes two reports are submitted that describe the same problem, leading to duplicate reports. These reports are mostly written in structured natural language, and as such, it is hard to compare two reports for similarity with formal methods. In order to identify duplicates, we investigate using natural language processing (NLP) techniques to support the identification. A prototype tool is developed and evaluated in a case study analyzing defect reports at Sony Ericsson mobile communications. The evaluation shows that about 2/3 of the duplicates can possibly be found using the NLP techniques. Different variants of the techniques provide only minor result differences, indicating a robust technology. User testing shows that the overall attitude towards the technique is positive and that it has a growth potential.},
  DOI                      = {10.1109/ICSE.2007.32},
  File                     = {:Runeson-etal_2007.pdf:PDF},
  Institution              = {Software Eng. Res. Group, Lund Univ., Lund},
  ISBN                     = {0-7695-2828-7},
  ISSN                     = {0270-5257},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:27:43},
  Timestamp                = {2014.11.27}
}

@Article{Runeson-Hoest_2009,
  Title                    = {Guidelines for conducting and reporting case study research in software engineering},
  Author                   = {Runeson, Per and H{\"o}st, Martin},
  Journal                  = {Empirical software engineering},
  Year                     = {2009},
  Number                   = {2},
  Pages                    = {131--164},
  Volume                   = {14},
  DOI                      = {10.1007/s10664-008-9102-8},
  File                     = {:Runeson-Hoest_2009.pdf:PDF},
  Keywords                 = {guidelines},
  Owner                    = {cscorley},
  Publisher                = {Springer},
  Timestamp                = {2014.12.09}
}

@InProceedings{Saha-etal_2014,
  author    = {Saha, Ripon K. and Lawall, Julia and Khurshid, Sarfraz and Perry, Dewayne E.},
  title     = {On the Effectiveness of Information Retrieval Based Bug Localization for C Programs},
  booktitle = {2014 IEEE International Conference on Software Maintenance and Evolution},
  year      = {2014},
  publisher = {IEEE},
  doi       = {10.1109/icsme.2014.38},
  file      = {:Saha-etal_2014.pdf:PDF},
  isbn      = {978-1-4799-6146-7},
  owner     = {cscorley},
  timestamp = {2014.12.24},
  url       = {http://dx.doi.org/10.1109/ICSME.2014.38},
}

@InProceedings{Saha-etal_2013,
  author    = {Saha, Ripon K. and Lease, Matthew and Khurshid, Sarfraz and Perry, Dewayne E.},
  title     = {Improving bug localization using structured information retrieval},
  booktitle = {Automated Software Engineering (ASE), 2013 IEEE/ACM 28th International Conference on},
  year      = {2013},
  publisher = {Institute of Electrical \& Electronics Engineers (IEEE)},
  doi       = {10.1109/ase.2013.6693093},
  file      = {:Saha-etal_2013.pdf:PDF},
  isbn      = {978-1-4799-0215-6},
  journal   = {2013 28th IEEE/ACM International Conference on Automated Software Engineering (ASE)},
  owner     = {cscorley},
  timestamp = {2015.03.25},
  url       = {http://dx.doi.org/10.1109/ASE.2013.6693093},
}

@Book{Salton_1971,
  Title                    = {The SMART Retrieval System --- Experiments in Automatic Document Processing},
  Author                   = {Salton, G.},
  Publisher                = {Prentice-Hall},
  Year                     = {1971},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@Article{Salton-Buckley_1988,
  Title                    = {Term-weighting Approaches in Automatic Text Retrieval},
  Author                   = {Salton, Gerard and Buckley, Christopher},
  Journal                  = {Inf.\ Process.\ Manage.},
  Year                     = {1988},
  Number                   = {5},
  Pages                    = {513--523},
  Volume                   = {24},
  DOI                      = {10.1016/0306-4573(88)90021-0},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@Book{Salton-McGill_1983,
  title     = {Introduction to modern information retrieval},
  publisher = {McGraw-Hill, Inc.},
  year      = {1983},
  author    = {Salton, Gerard and McGill, Michael J.},
  owner     = {cscorley},
  timestamp = {2014.12.21},
}

@Article{Salton-etal_1975,
  Title                    = {A vector space model for automatic indexing},
  Author                   = {Salton, Gerard and Wong, Anita and Yang, Chung-Shu},
  Journal                  = {Communications of the ACM},
  Year                     = {1975},
  Number                   = {11},
  Pages                    = {613--620},
  Volume                   = {18},
  DOI                      = {10.1145/361219.361220},
  File                     = {:Salton-etal_1975.pdf:PDF},
  Owner                    = {cscorley},
  Publisher                = {ACM},
  Timestamp                = {2014.11.28},
  URL                      = {http://dl.acm.org/citation.cfm?id=361220}
}

@InProceedings{Sato-Nakagawa_2010,
  Title                    = {Topic Models with Power-law Using Pitman-Yor Process},
  Author                   = {Sato, Issei and Nakagawa, Hiroshi},
  Booktitle                = {Proceedings of the 16th ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
  Year                     = {2010},
  Pages                    = {673--682},
  Publisher                = {ACM},
  Series                   = {KDD '10},
  Acmid                    = {1835890},
  DOI                      = {10.1145/1835804.1835890},
  File                     = {:Sato-Nakagawa_2010.pdf:PDF},
  ISBN                     = {978-1-4503-0055-1},
  Keywords                 = {Pitman-Yor process, latent dirichlet allocation, nonparametric bayes, power-law, topic model},
  Numpages                 = {10},
  URL                      = {http://doi.acm.org/10.1145/1835804.1835890}
}

@InProceedings{Saul-etal_2007,
  author       = {Saul, Zachary M. and Filkov, Vladimir and Devanbu, Premkumar and Bird, Christian},
  title        = {Recommending random walks},
  booktitle    = {Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering},
  year         = {2007},
  pages        = {15--24},
  organization = {ACM},
  file         = {:Saul-etal_2007.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.03.24},
}

@InProceedings{Savage-etal_2010,
  Title                    = {Topic XP: Exploring topics in source code using latent dirichlet allocation},
  Author                   = {Savage, Trevor and Dit, Bogdan and Gethers, Malcom and Poshyvanyk, Denys},
  Booktitle                = {Software Maintenance (ICSM), 2010 IEEE International Conference on},
  Year                     = {2010},
  Organization             = {IEEE},
  Pages                    = {1--6},
  DOI                      = {10.1109/ICSM.2010.5609654},
  File                     = {:Savage-etal_2010.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5609654}
}

@InProceedings{Scanniello-Marcus_2011,
  Title                    = {Clustering support for static concept location in source code},
  Author                   = {Scanniello, Giuseppe and Marcus, Andrian},
  Booktitle                = {Program Comprehension (ICPC), 2011 IEEE 19th International Conference on},
  Year                     = {2011},
  Organization             = {IEEE},
  Pages                    = {1--10},
  DOI                      = {10.1109/ICPC.2011.13},
  File                     = {:Scanniello-Marcus_2011.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5970158}
}

@InProceedings{Schuler-Zimmermann_2008,
  Title                    = {Mining usage expertise from version archives},
  Author                   = {Schuler, David and Zimmermann, Thomas},
  Booktitle                = {Proceedings of the 2008 international working conference on Mining software repositories},
  Year                     = {2008},
  Pages                    = {121--124},
  Publisher                = {ACM},
  Series                   = {MSR '08},
  Abstract                 = {In software development, there is an increasing need to find and connect developers with relevant expertise. Existing expertise recommendation systems are mostly based on variations of the Line 10 Rule: developers who changed a file most often have the most implementation expertise. In this paper, we introduce the concept of usage expertise, which manifests itself whenever developers are using functionality, e.g., by calling API methods. We present preliminary results for the ECLIPSE project that demonstrate that our technique allows to recommend experts for files with no or little history, identify developers with similar expertise, and measure the usage of API methods.},
  DOI                      = {10.1145/1370750.1370779},
  File                     = {:Schuler-Zimmermann_2008.pdf:PDF},
  ISBN                     = {978-1-60558-024-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 03:10:11},
  Timestamp                = {2014.11.27}
}

@InProceedings{Schuetze-Silverstein_1997,
  author    = {Sch{\"{u}}tze, Hinrich and Silverstein, Craig},
  title     = {Projections for efficient document clustering},
  booktitle = {Proceedings of the 20th annual international ACM SIGIR conference on Research and development in information retrieval},
  year      = {1997},
  publisher = {ACM Press},
  doi       = {10.1145/258525.258539},
  file      = {:Schuetze-Silverstein_1997.pdf:PDF},
  isbn      = {0897918363},
  owner     = {cscorley},
  timestamp = {2014.12.24},
  url       = {http://dx.doi.org/10.1145/258525.258539},
}

@Article{Shao-etal_2012,
  Title                    = {Combining lexical and structural information for static bug localisation},
  Author                   = {Shao, Peng and Atkison, Travis and Kraft, Nicholas A. and Smith, Randy K.},
  Journal                  = {IJCAT},
  Year                     = {2012},
  Number                   = {1},
  Pages                    = {61},
  Volume                   = {44},
  DOI                      = {10.1504/ijcat.2012.048208},
  ISSN                     = {1741-5047},
  Owner                    = {cscorley},
  Publisher                = {Inderscience Publishers},
  Timestamp                = {2014.12.26},
  URL                      = {http://dx.doi.org/10.1504/IJCAT.2012.048208}
}

@InProceedings{Shao-etal_2008,
  Title                    = {Efficient ticket routing by resolution sequence mining},
  Author                   = {Shao, Qihong and Chen, Yi and Tao, Shu and Yan, Xifeng and Anerousis, Nikos},
  Booktitle                = {Proceedings of the 14\textsuperscript{th} ACM SIGKDD international conference on Knowledge discovery and data mining},
  Year                     = {2008},
  Pages                    = {605--613},
  Publisher                = {ACM},
  Series                   = {KDD '08},
  Abstract                 = {IT problem management calls for quick identification of resolvers to reported problems. The efficiency of this process highly depends on ticket routing---transferring problem ticket among various expert groups in search of the right resolver to the ticket. To achieve efficient ticket routing, wise decision needs to be made at each step of ticket transfer to determine which expert group is likely to be, or to lead to the resolver. In this paper, we address the possibility of improving ticket routing efficiency by mining ticket resolution sequences alone, without accessing ticket content. To demonstrate this possibility, a Markov model is developed to statistically capture the right decisions that have been made toward problem resolution, where the order of the Markov model is carefully chosen according to the conditional entropy obtained from ticket data. We also design a search algorithm, called Variable-order Multiple active State search(VMS), that generates ticket transfer recommendations based on our model. The proposed framework is evaluated on a large set of real-world problem tickets. The results demonstrate that VMS significantly improves human decisions: Problem resolvers can often be identified with fewer ticket transfers.},
  DOI                      = {10.1145/1401890.1401964},
  File                     = {:Shao-etal_2008.pdf:PDF},
  ISBN                     = {978-1-60558-193-4},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:37:44},
  Timestamp                = {2014.11.27}
}

@InProceedings{Shepherd-etal_2006,
  author       = {Shepherd, David and Pollock, Lori and Vijay-Shanker, K.},
  title        = {Towards supporting on-demand virtual remodularization using program graphs},
  booktitle    = {Proceedings of the 5th international conference on Aspect-oriented software development},
  year         = {2006},
  pages        = {3--14},
  organization = {ACM},
  doi          = {http://dx.doi.org/10.1145/1119655.1119660},
  file         = {:Shepherd-etal_2006.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.03.23},
}

@InProceedings{Shokripour-etal_2013,
  author    = {Shokripour, Ramin and Anvik, John and Kasirun, Zarinah M. and Zamani, Sima},
  title     = {Why so complicated? Simple term filtering and weighting for location-based bug report assignment recommendation},
  booktitle = {2013 10th Working Conference on Mining Software Repositories (MSR)},
  year      = {2013},
  publisher = {IEEE},
  doi       = {10.1109/msr.2013.6623997},
  file      = {:Shokripour-etal_2013.pdf:PDF},
  isbn      = {978-1-4799-0345-0},
  owner     = {cscorley},
  timestamp = {2014.12.26},
  url       = {http://dx.doi.org/10.1109/MSR.2013.6623997},
}

@InProceedings{Silva-etal_2005,
  Title                    = {Probabilistic workflow mining},
  Author                   = {Silva, Ricardo and Zhang, Jiji and Shanahan, James G.},
  Booktitle                = {Proceedings of the eleventh ACM SIGKDD international conference on Knowledge discovery in data mining},
  Year                     = {2005},
  Pages                    = {275--284},
  Publisher                = {ACM},
  Series                   = {KDD '05},
  Abstract                 = {In several organizations, it has become increasingly popular to document and log the steps that makeup a typical business process. In some situations, a normative workflow model of such processes is developed, and it becomes important to know if such a model is actually being followed by analyzing the available activity logs. In other scenarios, no model is available and, with the purpose of evaluating cases or creating new production policies, one is interested in learning a workflow representation of such activities. In either case, machine learning tools that can mine workflow models are of great interest and still relatively unexplored. We present here a probabilistic workflow model and a corresponding learning algorithm that runs in polynomial time. We illustrate the algorithm on example data derived from a real world workflow.},
  DOI                      = {10.1145/1081870.1081903},
  File                     = {:Silva-etal_2005.pdf:PDF},
  ISBN                     = {1-59593-135-X},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:39:42},
  Timestamp                = {2014.11.27}
}

@InProceedings{Sisman-Kak_2013,
  author    = {Sisman, B. and Kak, A. C.},
  title     = {Assisting code search with automatic Query Reformulation for bug localization},
  booktitle = {Mining Software Repositories (MSR), 2013 10\textsuperscript{th} IEEE Working Conference on},
  year      = {2013},
  pages     = {309--318},
  doi       = {10.1109/MSR.2013.6624044},
  file      = {:Sisman-Kak_2013.pdf:PDF},
  issn      = {2160-1852},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Siy-etal_2008,
  Title                    = {Summarizing developer work history using time series segmentation: challenge report},
  Author                   = {Siy, Harvey and Chundi, Parvathi and Subramaniam, Mahadevan},
  Booktitle                = {Proceedings of the 2008 international working conference on Mining software repositories},
  Year                     = {2008},
  Pages                    = {137--140},
  Publisher                = {ACM},
  Series                   = {MSR '08},
  Abstract                 = {Temporal segmentation partitions time series data with the intent of producing more homogeneous segments. It is a technique used to preprocess data so that subsequent time series analysis on individual segments can detect trends that may not be evident when performing time series analysis on the entire dataset. This technique allows data miners to partition a large dataset without making any assumption of periodicity or any other a priori knowledge of the dataset's features. We investigate the insights that can be gained from the application of time series segmentation to software version repositories. Software version repositories from large projects contain on the order of hundreds of thousands of timestamped entries or more. It is a continuing challenge to aggregate such data so that noise is reduced and important characteristics are brought out. In this paper, we present a way to summarize developer work history in terms of the files they have modified over time by segmenting the CVS change data of individual Eclipse developers. We show that the files they modify tends to change significantly over time though most of them tend to work within the same directories.},
  DOI                      = {10.1145/1370750.1370784},
  File                     = {:Siy-etal_2008.pdf:PDF},
  ISBN                     = {978-1-60558-024-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 22:14:56},
  Timestamp                = {2014.11.27}
}

@InProceedings{Somasundaram-Murphy_2012,
  Title                    = {Automatic categorization of bug reports using latent Dirichlet allocation},
  Author                   = {Somasundaram, Kalyanasundaram and Murphy, Gail C.},
  Booktitle                = {Proceedings of the 5\textsuperscript{th} India Software Engineering Conference},
  Year                     = {2012},
  Pages                    = {125--130},
  Publisher                = {ACM},
  Series                   = {ISEC '12},
  Abstract                 = {Software developers, particularly in open-source projects, rely on bug repositories to organize their work. On a bug report, the component field is used to indicate to which team of developers a bug should be routed. Researchers have shown that incorrect categorization of newly received bug reports to components can cause potential delays in the resolution of bug reports. Approaches have been developed that consider the use of machine learning approaches, specifically Support Vector Machines (svm), to automatically categorize bug reports into the appropriate component to help streamline the process of solving a bug. One drawback of an SVM-based approach is that the results of categorization can be uneven across various components in the system if some components receive less reports than others. In this paper, we consider broadening the consistency of the recommendations produced by an automatic approach by investigating three approaches to automating bug report categorization: an approach similar to previous ones based on an SVM classifier and Term Frequency Inverse Document Frequency(svm-tf-idf), an approach using Latent Dirichlet Allocation (LDA) with SVM (svm-lda) and an approach using LDA and Kullback Leibler divergence (lda-kl). We found that lda-kl produced recalls similar to those found previously but with better consistency across all components for which bugs must be categorized.},
  DOI                      = {10.1145/2134254.2134276},
  File                     = {:Somasundaram-Murphy_2012.pdf:PDF},
  ISBN                     = {978-1-4503-1142-7},
  Owner                    = {cscorley},
  Posted-at                = {2012-08-19 13:24:12},
  Timestamp                = {2014.11.27}
}

@InCollection{Song-etal_2005,
  Title                    = {ExpertiseNet: Relational and Evolutionary Expert Modeling User Modeling 2005},
  Author                   = {Song, Xiaodan and Tseng, Belle L. and Lin, Ching-Yung and Sun, Ming-Ting},
  Booktitle                = {User Modeling 2005},
  Publisher                = {Springer},
  Year                     = {2005},
  Chapter                  = {14},
  Editor                   = {Ardissono, Liliana and Brna, Paul and Mitrovic, Antonija},
  Pages                    = {150},
  Series                   = {Lecture Notes in Computer Science},
  Volume                   = {3538},
  Abstract                 = {We develop a novel user-centric modeling technology, which can dynamically describe and update a person's expertise profile. In an enterprise environment, the technology can enhance employees' collaboration and productivity by assisting in finding experts, training employees, etc. Instead of using the traditional search methods, such as the keyword match, we propose to use relational and evolutionary graph models, which we call ExpertiseNet, to describe and find experts. These ExpertiseNets are used for mining, retrieval, and visualization. We conduct experiments by building ExpertiseNets for researchers from a research paper collection. The experiments demonstrate that expertise mining and matching are more efficiently achieved based on the proposed relational and evolutionary graph models.},
  DOI                      = {10.1007/11527886_14},
  File                     = {:Song-etal_2005.pdf:PDF},
  ISBN                     = {978-3-540-27885-6},
  Journal                  = {Lecture Notes in Computer Science},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 02:58:01},
  Timestamp                = {2014.11.27}
}

@InProceedings{Steyvers-etal_2004,
  Title                    = {Probabilistic author-topic models for information discovery},
  Author                   = {Steyvers, Mark and Smyth, Padhraic and Rosen-Zvi, Michal and Griffiths, Thomas},
  Booktitle                = {Proceedings of the tenth ACM SIGKDD international conference on Knowledge discovery and data mining},
  Year                     = {2004},
  Organization             = {ACM},
  Pages                    = {306--315},
  DOI                      = {10.1145/1014052.1014087},
  File                     = {:Steyvers-etal_2004.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://dl.acm.org/citation.cfm?id=1014087}
}

@InProceedings{Storey-etal_2010,
  Title                    = {The Impact of Social Media on Software Engineering Practices and Tools},
  Author                   = {Storey, Margaret-Anne and Treude, Christoph and van Deursen, Arie and Cheng, Li-Te},
  Booktitle                = {Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research},
  Year                     = {2010},
  Pages                    = {359--364},
  Publisher                = {ACM},
  Series                   = {FoSER '10},
  Acmid                    = {1882435},
  DOI                      = {10.1145/1882362.1882435},
  File                     = {:Storey-etal_2010.pdf:PDF},
  ISBN                     = {978-1-4503-0427-6},
  Keywords                 = {social media, software engineering tools, web 2.0},
  Numpages                 = {6},
  URL                      = {http://doi.acm.org/10.1145/1882362.1882435}
}

@InProceedings{Tamrawi-etal_2011,
  author       = {Tamrawi, Ahmed and Nguyen, Tung Thanh and Al-Kofahi, Jafar M. and Nguyen, Tien N.},
  title        = {Fuzzy set and cache-based approach for bug triaging},
  booktitle    = {Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering},
  year         = {2011},
  pages        = {365--375},
  organization = {ACM},
  doi          = {http://dx.doi.org/10.1145/2025113.2025163},
  file         = {:Tamrawi-etal_2011.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.03.25},
}

@Article{Teh-etal_2006,
  author    = {Teh, Yee Whye and Jordan, Michael I. and Beal, Matthew J. and Blei, David M.},
  title     = {Hierarchical dirichlet processes},
  journal   = {Journal of the american statistical association},
  year      = {2006},
  volume    = {101},
  number    = {476},
  pages     = {1566--1581},
  doi       = {10.1198/016214506000000302},
  file      = {:Teh-etal_2006.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2015.04.02},
}

@PhdThesis{Thomas_2012,
  author    = {Thomas, Stephen W.},
  title     = {Mining Unstructured Software Repositories Using IR Models},
  school    = {Queen's University},
  year      = {2012},
  file      = {:Thomas_2012.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.12.21},
  url       = {http://cs.queensu.ca/~sthomas/data/Thomas_PhdThesis.pdf},
}

@InProceedings{Thomas-etal_2011,
  Title                    = {Modeling the Evolution of Topics in Source Code Histories},
  Author                   = {Thomas, Stephen W. and Adams, Bram and Hassan, Ahmed E. and Blostein, Dorothea},
  Booktitle                = {Proc.\ 8\textsuperscript{th} Working Conf.\ on Mining Software Repositories},
  Year                     = {2011},
  Pages                    = {173--182},
  DOI                      = {10.1145/1985441.1985467},
  File                     = {:Thomas-etal_2011.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@InProceedings{Tian-etal_2009,
  author    = {Tian, Kai and Revelle, M. and Poshyvanyk, D.},
  title     = {Using Latent Dirichlet Allocation for automatic categorization of software},
  booktitle = {Mining Software Repositories, 2009. MSR '09. 6\textsuperscript{th} IEEE International Working Conference on},
  year      = {2009},
  pages     = {163--166},
  doi       = {10.1109/MSR.2009.5069496},
  file      = {:Tian-etal_2009.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Tsunoda-etal_2006,
  Title                    = {Analyzing OSS developers' working time using mailing lists archives},
  Author                   = {Tsunoda, Masateru and Monden, Akito and Kakimoto, Takeshi and Kamei, Yasutaka and Matsumoto, Ken I.},
  Booktitle                = {Proceedings of the 2006 international workshop on Mining software repositories},
  Year                     = {2006},
  Pages                    = {181--182},
  Publisher                = {ACM},
  Series                   = {MSR '06},
  Abstract                 = {An abstract is not available.},
  DOI                      = {10.1145/1137983.1138031},
  File                     = {:Tsunoda-etal_2006.pdf:PDF},
  ISBN                     = {1-59593-397-2},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-24 19:50:38},
  Timestamp                = {2014.11.27}
}

@InProceedings{Vasa-etal_2007,
  author       = {Vasa, Rajesh and Schneider, J.-G. and Nierstrasz, Oscar},
  title        = {The inevitable stability of software change},
  booktitle    = {Software Maintenance, 2007. ICSM 2007. IEEE International Conference on},
  year         = {2007},
  pages        = {4--13},
  organization = {IEEE},
  file         = {:Vasa-etal_2007.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2015.02.28},
}

@InProceedings{Vasilescu-etal_2013,
  Title                    = {StackOverflow and GitHub: Associations between Software Development and Crowdsourced Knowledge},
  Author                   = {Vasilescu, B. and Filkov, V. and Serebrenik, A.},
  Booktitle                = {Social Computing (SocialCom), 2013 International Conference on},
  Year                     = {2013},
  Pages                    = {188-195},
  DOI                      = {10.1109/SocialCom.2013.35},
  File                     = {:Vasilescu-etal_2013.pdf:PDF},
  Keywords                 = {knowledge based systems;software maintenance;GitHub;StackOverflow;crowdsourced knowledge;online programming question-and-answer community;social coding repository;software development;Communities;Electronic mail;Indexes;Merging;Productivity;Rhythm;Software;crowdsourced knowledge;social media;software development}
}

@InProceedings{Vasilescu-etal_2014,
  Title                    = {How Social Q\&A Sites Are Changing Knowledge Sharing in Open Source Software Communities},
  Author                   = {Vasilescu, Bogdan and Serebrenik, Alexander and Devanbu, Prem and Filkov, Vladimir},
  Booktitle                = {Proceedings of the 17th ACM Conference on Computer Supported Cooperative Work \& Social Computing},
  Year                     = {2014},
  Pages                    = {342--354},
  Publisher                = {ACM},
  Series                   = {CSCW '14},
  Acmid                    = {2531659},
  DOI                      = {10.1145/2531602.2531659},
  File                     = {:Vasilescu-etal_2014.pdf:PDF},
  ISBN                     = {978-1-4503-2540-0},
  Keywords                 = {crowdsourced knowledge, gamification., mailing lists, open source, social q\&\#38;a},
  Numpages                 = {13},
  URL                      = {http://doi.acm.org/10.1145/2531602.2531659}
}

@InProceedings{Voinea-etal_2005,
  author       = {Voinea, Lucian and Telea, Alex and Van Wijk, Jarke J.},
  title        = {CVSscan: visualization of code evolution},
  booktitle    = {Proceedings of the 2005 ACM symposium on Software visualization},
  year         = {2005},
  pages        = {47--56},
  organization = {ACM},
  doi          = {10.1145/1056018.1056025},
  file         = {:Voinea-etal_2005.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=1056025},
}

@InProceedings{Voorhees_1999,
  author    = {Voorhees, Ellen M.},
  title     = {The TREC-8 Question Answering Track Report.},
  booktitle = {TREC},
  year      = {1999},
  volume    = {99},
  pages     = {77--82},
  file      = {:Voorhees_1999.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2014.12.08},
}

@Article{Wang-etal_2012,
  Title                    = {Continuous Time Dynamic Topic Models},
  Author                   = {Chong Wang and David M. Blei and David Heckerman},
  Journal                  = {arXiv preprint arXiv:1206.3298},
  Year                     = {2012},
  Number                   = {1},
  Pages                    = {8},
  Volume                   = {1},
  Bibsource                = {DBLP, http://dblp.uni-trier.de},
  File                     = {:Wang-etal_2012.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {https://www.cs.princeton.edu/~blei/papers/WangBleiHeckerman2008.pdf}
}

@InProceedings{Wang-etal_2011,
  author    = {Wang, Chong and Paisley, John W. and Blei, David M.},
  title     = {Online variational inference for the hierarchical Dirichlet process},
  booktitle = {International conference on artificial intelligence and statistics},
  year      = {2011},
  pages     = {752--760},
  file      = {:Wang-etal_2011.pdf:PDF},
  owner     = {cscorley},
  timestamp = {2015.04.02},
  url       = {http://machinelearning.wustl.edu/mlpapers/paper_files/AISTATS2011_WangPB11.pdf},
}

@InProceedings{Wang-etal_2013,
  author    = {Wang, Shaohua and Khomh, Foutse and Zou, Ying},
  title     = {Improving bug localization using correlations in crash reports},
  booktitle = {Mining Software Repositories (MSR), 2013 10th IEEE Working Conference on},
  year      = {2013},
  publisher = {Institute of Electrical \& Electronics Engineers (IEEE)},
  doi       = {10.1109/msr.2013.6624036},
  file      = {:Wang-etal_2013.pdf:PDF},
  isbn      = {978-1-4799-0345-0},
  journal   = {2013 10th Working Conference on Mining Software Repositories (MSR)},
  owner     = {cscorley},
  timestamp = {2015.03.25},
  url       = {http://dx.doi.org/10.1109/MSR.2013.6624036},
}

@InProceedings{Wang-McCallum_2006,
  Title                    = {Topics over Time: A non-{Markov} Continuous-time Model of Topical Trends},
  Author                   = {Wang, Xuerui and McCallum, Andrew},
  Booktitle                = {Proceedings of the 12\textsuperscript{th} ACM SIGKDD International Conference on Knowledge Discovery and Data Mining},
  Year                     = {2006},
  Pages                    = {424--433},
  Publisher                = {ACM},
  Series                   = {KDD '06},
  Acmid                    = {1150450},
  DOI                      = {10.1145/1150402.1150450},
  File                     = {:Wang-McCallum_2006.pdf:PDF},
  ISBN                     = {1-59593-339-5},
  Numpages                 = {10},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {https://people.cs.umass.edu/~mccallum/papers/tot-kdd06.pdf}
}

@InProceedings{Wang-etal_2008,
  Title                    = {An approach to detecting duplicate bug reports using natural language and execution information},
  Author                   = {Wang, Xiaoyin and Zhang, Lu and Xie, Tao and Anvik, John and Sun, Jiasu},
  Booktitle                = {Proceedings of the 30\textsuperscript{th} international conference on Software engineering},
  Year                     = {2008},
  Pages                    = {461--470},
  Publisher                = {ACM},
  Series                   = {ICSE '08},
  Abstract                 = {An open source project typically maintains an open bug repository so that bug reports from all over the world can be gathered. When a new bug report is submitted to the repository, a person, called a triager, examines whether it is a duplicate of an existing bug report. If it is, the triager marks it as DUPLICATE and the bug report is removed from consideration for further work. In the literature, there are approaches exploiting only natural language information to detect duplicate bug reports. In this paper we present a new approach that further involves execution information. In our approach, when a new bug report arrives, its natural language information and execution information are compared with those of the existing bug reports. Then, a small number of existing bug reports are suggested to the triager as the most similar bug reports to the new bug report. Finally, the triager examines the suggested bug reports to determine whether the new bug report duplicates an existing bug report. We calibrated our approach on a subset of the Eclipse bug repository and evaluated our approach on a subset of the Firefox bug repository. The experimental results show that our approach can detect 67\%-93\% of duplicate bug reports in the Firefox bug repository, compared to 43\%-72\% using natural language information alone.},
  DOI                      = {10.1145/1368088.1368151},
  File                     = {:Wang-etal_2008.pdf:PDF},
  ISBN                     = {978-1-60558-079-1},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:29:19},
  Timestamp                = {2014.11.27}
}

@InProceedings{Wei-etal_2010,
  author       = {Wei, Furu and Liu, Shixia and Song, Yangqiu and Pan, Shimei and Zhou, Michelle X. and Qian, Weihong and Shi, Lei and Tan, Li and Zhang, Qiang},
  title        = {Tiara: a visual exploratory text analytic system},
  booktitle    = {Proceedings of the 16th ACM SIGKDD international conference on Knowledge discovery and data mining},
  year         = {2010},
  pages        = {153--162},
  organization = {ACM},
  doi          = {10.1145/1835804.1835827},
  file         = {:Wei-etal_2010.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=1835827},
}

@InProceedings{Wei-Croft_2006,
  author       = {Wei, Xing and Croft, W. Bruce},
  title        = {{LDA}-based document models for ad-hoc retrieval},
  booktitle    = {Proceedings of the 29th annual international ACM SIGIR conference on Research and development in information retrieval},
  year         = {2006},
  pages        = {178--185},
  organization = {ACM},
  doi          = {10.1145/1148170.1148204},
  file         = {:Wei-Croft_2006.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=1148204},
}

@InProceedings{Weiss-etal_2007,
  Title                    = {How Long Will It Take to Fix This Bug?},
  Author                   = {Weiss, Cathrin and Premraj, Rahul and Zimmermann, Thomas and Zeller, Andreas},
  Booktitle                = {Proceedings of the Fourth International Workshop on Mining Software Repositories},
  Year                     = {2007},
  Pages                    = {1},
  Publisher                = {IEEE Computer Society},
  Series                   = {MSR '07},
  Abstract                 = {Predicting the time and effort for a software problem has long been a difficult task. We present an approach that automatically predicts the fixing effort, i.e., the person-hours spent on fixing an issue. Our technique leverages existing issue tracking systems: given a new issue report, we use the Lucene framework to search for similar, earlier reports and use their average time as a prediction. Our approach thus allows for early effort estimation, helping in assigning issues and scheduling stable releases. We evaluated our approach using effort data from the JBoss project. Given a sufficient number of issues reports, our automatic predictions are close to the actual effort; for issues that are bugs, we are off by only one hour, beating na\^{A}$\neg${\textregistered}\'{y}ve predictions by a factor of four.},
  DOI                      = {10.1109/MSR.2007.13},
  File                     = {:Weiss-etal_2007.pdf:PDF},
  ISBN                     = {0-7695-2950-X},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-17 21:44:56},
  Timestamp                = {2014.11.27}
}

@InProceedings{Weissgerber-etal_2007,
  Title                    = {Visual Data Mining in Software Archives to Detect How Developers Work Together},
  Author                   = {Weissgerber, Peter and Pohl, Mathias and Burch, Michael},
  Booktitle                = {Fourth International Workshop on Mining Software Repositories (MSR'07:ICSE Workshops 2007)},
  Year                     = {2007},
  Pages                    = {9},
  Publisher                = {IEEE},
  Abstract                 = {Analyzing the check-in information of open source software projects which use a version control system such as CVS or SUBVERSION can yield interesting and important insights into the programming behavior of developers. As in every major project tasks are assigned to many developers, the development must be coordinated between these programmers. This paper describes three visualization techniques that help to examine how programmers work together, e.g. if they work as a team or if they develop their part of the software separate from each other. Furthermore, phases of stagnation in the lifetime of a project can be uncovered and thus, possible problems are revealed. To demonstrate the usefulness of these visualization techniques we performed case studies on two open source projects. In these studies interesting patterns of developers' behavior, e.g. the specialization on a certain module can be observed. Moreover, modules that have been changed by many developers can be identified as well as such ones that have been altered by only one programmer.},
  DOI                      = {10.1109/MSR.2007.34},
  File                     = {:Weissgerber-etal_2007.pdf:PDF},
  ISBN                     = {0-7695-2950-X},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 03:14:53},
  Timestamp                = {2014.11.27}
}

@InProceedings{Williams-Spacco_2008,
  author       = {Williams, Chadd C. and Spacco, Jaime W.},
  title        = {Branching and merging in the repository},
  booktitle    = {Proceedings of the 2008 international working conference on Mining software repositories},
  year         = {2008},
  pages        = {19--22},
  organization = {ACM},
  doi          = {10.1145/1370750.1370754},
  file         = {:Williams-Spacco_2008.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://dl.acm.org/citation.cfm?id=1370754},
}

@InProceedings{Wilson_2010,
  author       = {Wilson, Leon A.},
  title        = {Using ontology fragments in concept location},
  booktitle    = {Software Maintenance (ICSM), 2010 IEEE International Conference on},
  year         = {2010},
  pages        = {1--2},
  organization = {IEEE},
  doi          = {10.1109/ICSM.2010.5609555},
  file         = {:Wilson_2010.pdf:PDF},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5609555},
}

@InCollection{Wohlin-etal_2003,
  author    = {Wohlin, Claes and H{\"{o}}st, Martin and Henningsson, Kennet},
  title     = {Empirical Research Methods in Software Engineering},
  booktitle = {Empirical Methods and Studies in Software Engineering},
  publisher = {Springer Berlin Heidelberg},
  year      = {2003},
  editor    = {Conradi, Reidar and Wang, AlfInge},
  volume    = {2765},
  series    = {Lecture Notes in Computer Science},
  pages     = {7-23},
  isbn      = {978-3-540-40672-3},
  doi       = {10.1007/978-3-540-45143-3_2},
  file      = {:Wohlin-etal_2003.pdf:PDF},
  url       = {http://dx.doi.org/10.1007/978-3-540-45143-3_2},
}

@InProceedings{Wong-etal_2014,
  Title                    = {Boosting Bug-Report-Oriented Fault Localization with Segmentation and Stack-Trace Analysis},
  Author                   = {Wong, Chu-Pan and Xiong, Yingfei and Zhang, Hongyu and Hao, Dan and Zhang, Lu and Mei, Hong},
  Booktitle                = {Software Maintenance and Evolution (ICSME), 2014 IEEE International Conference on},
  Year                     = {2014},
  Pages                    = {181--190},
  Abstract                 = {To deal with post-release bugs, many software projects set up public bug repositories for users all over the world to report bugs that they have encountered. Recently, researchers have proposed various information retrieval based approaches to localizing faults based on bug reports. In these approaches, source files are processed as single units, where noise in large files may affect the accuracy of fault localization. Furthermore, bug reports often contain stack-trace information, but existing approaches often treat this information as plain text. In this paper, we propose to use segmentation and stack-trace analysis to improve the performance of bug localization. Specifically, given a bug report, we divide each source code file into a series of segments and use the segment most similar to the bug report to represent the file. We also analyze the bug report to identify possible faulty files in a stack trace and favor these files in our retrieval. According to our empirical results, our approach is able to significantly improve Bug Locator, a representative fault localization approach, on all the three software projects (i.e., Eclipse, AspectJ, and SWT) used in our empirical evaluation. Furthermore, segmentation and stack-trace analysis are complementary to each other for boosting the performance of bug-report-oriented fault localization.},
  DOI                      = {10.1109/ICSME.2014.40},
  File                     = {:Wong-etal_2014.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=6976084}
}

@InProceedings{Xie-etal_2012,
  Title                    = {DRETOM: Developer Recommendation Based on Topic Models for Bug Resolution},
  Author                   = {Xie, Xihao and Zhang, Wen and Yang, Ye and Wang, Qing},
  Booktitle                = {Proceedings of the 8th International Conference on Predictive Models in Software Engineering},
  Year                     = {2012},
  Pages                    = {19--28},
  Publisher                = {ACM},
  Series                   = {PROMISE '12},
  Acmid                    = {2365329},
  DOI                      = {10.1145/2365324.2365329},
  File                     = {:Xie-etal_2014.pdf:PDF},
  ISBN                     = {978-1-4503-1241-7},
  Keywords                 = {developer recommendation, latent dirichlet allocation, open bug repository, topic models},
  Numpages                 = {10},
  URL                      = {http://doi.acm.org/10.1145/2365324.2365329}
}

@Article{Ying-Robillard_2013,
  author    = {Ying, Annie T. T. and Robillard, Martin P.},
  title     = {Code fragment summarization},
  journal   = {Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering - ESEC/FSE 2013},
  year      = {2013},
  pages     = {655-658},
  doi       = {10.1145/2491411.2494587},
  file      = {:Ying-Robillard_2013.pdf:PDF},
  isbn      = {9781450322379},
  owner     = {cscorley},
  publisher = {Association for Computing Machinery (ACM)},
  timestamp = {2015.03.28},
  url       = {http://dx.doi.org/10.1145/2491411.2494587},
}

@InProceedings{Yu-Ramaswamy_2007,
  Title                    = {Mining CVS Repositories to Understand Open-Source Project Developer Roles},
  Author                   = {Yu, Liguo and Ramaswamy, Srini},
  Booktitle                = {Fourth International Workshop on Mining Software Repositories (MSR'07:ICSE Workshops 2007)},
  Year                     = {2007},
  Pages                    = {8},
  Publisher                = {IEEE},
  Abstract                 = {This paper presents a model to represent the interactions of distributed open-source software developers and utilizes data mining techniques to derive developer roles. The model is then applied on case studies of two open-source projects, ORAC-DR and Mediawiki with encouraging results.},
  DOI                      = {10.1109/MSR.2007.19},
  File                     = {:Yu-Ramaswamy_2007.pdf:PDF},
  ISBN                     = {0-7695-2950-X},
  Owner                    = {cscorley},
  Posted-at                = {2012-06-18 03:14:04},
  Timestamp                = {2014.11.27}
}

@InProceedings{Zanjani-etal_2015,
  Title                    = {Using Developer-Interaction Trails to Triage Change Requests},
  Author                   = {Zanjani, Motahareh Bahrami and Kagdi, Huzefa and Bird, Christian},
  Booktitle                = {Mining Software Repositories},
  Year                     = {2015},
  File                     = {:Zanjani-etal_2015.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2015.06.18},
  URL                      = {http://cabird.com/pubs/zanjani2015developer.pdf}
}

@Article{Zha-Simon_1999,
  author    = {Zha, Hongyuan and Simon, Horst D.},
  title     = {On updating problems in latent semantic indexing},
  journal   = {SIAM Journal on Scientific Computing},
  year      = {1999},
  volume    = {21},
  number    = {2},
  pages     = {782--791},
  file      = {:Zha-Simon_1999.pdf:PDF},
  keywords  = {lsi},
  owner     = {cscorley},
  publisher = {SIAM},
  timestamp = {2014.12.21},
  url       = {http://marco.uminho.pt/disciplinas/UCAN/BD/Artigos%20Recomendados/lsi_update.pdf},
}

@InProceedings{Zhai-Boyd-Graber_2013,
  Title                    = {Online Topic Models with Infinite Vocabulary},
  Author                   = {Ke Zhai and Jordan Boyd-Graber},
  Booktitle                = {Proc.\ Int'l Conf.\ on Machine Learning},
  Year                     = {2013},
  Number                   = {1},
  Pages                    = {561--569},
  Series                   = {JMLR: Workshop and Conference Proceedings},
  Volume                   = {28},
  File                     = {:Zhai-Boyd-Graber_2013.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27},
  URL                      = {http://image.pirl.umd.edu/sites/default/files/2013_icml_infvoc.pdf}
}

@InProceedings{Zhao-etal_2004,
  Title                    = {SNIAFL: towards a static non-interactive approach to feature location},
  Author                   = {Wei Zhao and Lu Zhang and Yin Liu and Jiasu Sun and Fuqing Yang},
  Booktitle                = {Software Engineering, 2004. ICSE 2004. Proceedings. 26th International Conference on},
  Year                     = {2004},
  Pages                    = {293--303},
  Abstract                 = {To facilitate software maintenance and evolution, a helpful step is to locate features concerned in a particular maintenance task. In the literature, both dynamic and interactive approaches have been proposed for feature location. In this paper, we present a static and non-interactive method for achieving this objective. The main idea of our approach is to use the information retrieval (IR) technology to reveal the basic connections between features and computational units in source code. Due to the characteristics of the retrieved connections, we use a static representation of the source code named BRCG to further recover both the relevant and the specific computational units for each feature. Furthermore, we recover the relationships among the relevant units for each feature. A premise of our approach is that programmers should use meaningful names as identifiers. We perform an experimental study based on a GNU system to evaluate our approach. In the experimental study, we present the detailed quantitative experimental data and give the qualitative analytical results.},
  DOI                      = {10.1109/ICSE.2004.1317452},
  File                     = {:Zhao-etal_2004.pdf:PDF},
  Owner                    = {cscorley},
  Timestamp                = {2014.12.08},
  URL                      = {http://ieeexplore.ieee.org/stamp/stamp.jsp?arnumber=1317452}
}

@Article{Zhao-etal_2006,
  Title                    = {SNIAFL: Towards a static noninteractive approach to feature location},
  Author                   = {Zhao, Wei and Zhang, Lu and Liu, Yin and Sun, Jiasu and Yang, Fuqing},
  Journal                  = {ACM Transactions on Software Engineering and Methodology},
  Year                     = {2006},
  Number                   = {2},
  Pages                    = {195-226},
  Volume                   = {15},
  DOI                      = {10.1145/1131421.1131424},
  File                     = {:Zhao-etal_2006.pdf:PDF},
  ISSN                     = {1049-331X},
  Owner                    = {cscorley},
  Publisher                = {Association for Computing Machinery (ACM)},
  Timestamp                = {2014.12.26},
  URL                      = {http://dx.doi.org/10.1145/1131421.1131424}
}

@InProceedings{Zhou-etal_2012,
  author    = {Zhou, Jian and Zhang, Hongyu and Lo, D.},
  title     = {Where should the bugs be fixed? More accurate information retrieval-based bug localization based on bug reports},
  booktitle = {Software Engineering (ICSE), 2012 34\textsuperscript{th} International Conference on},
  year      = {2012},
  pages     = {14--24},
  doi       = {10.1109/ICSE.2012.6227210},
  file      = {:Zhou-etal_2012.pdf:PDF},
  issn      = {0270-5257},
  owner     = {cscorley},
  timestamp = {2014.11.27},
}

@InProceedings{Zimmermann-etal_2007,
  Title                    = {Predicting Defects for Eclipse},
  Author                   = {Zimmermann, Thomas and Premraj, Rahul and Zeller, Andreas},
  Booktitle                = {Proceedings of the Third International Workshop on Predictor Models in Software Engineering},
  Year                     = {2007},
  Pages                    = {9--},
  Publisher                = {IEEE Computer Society},
  Series                   = {PROMISE '07},
  Acmid                    = {1269057},
  DOI                      = {10.1109/PROMISE.2007.10},
  File                     = {:Zimmermann-etal_2007.pdf:PDF},
  ISBN                     = {0-7695-2954-2},
  Owner                    = {cscorley},
  Timestamp                = {2014.11.27}
}

@Article{Zimmermann-etal_2005,
  Title                    = {Mining version histories to guide software changes},
  Author                   = {Zimmermann, T. and Zeller, A. and Weissgerber, P. and Diehl, S.},
  Journal                  = {Software Engineering, IEEE Transactions on},
  Year                     = {2005},
  Number                   = {6},
  Pages                    = {429--445},
  Volume                   = {31},
  Abstract                 = {We apply data mining to version histories in order to guide programmers along related changes: "Programmers who changed these functions also changed...." Given a set of existing changes, the mined association rules 1) suggest and predict likely further changes, 2) show up item coupling that is undetectable by program analysis, and 3) can prevent errors due to incomplete changes. After an initial change, our ROSE prototype can correctly predict further locations to be changed; the best predictive power is obtained for changes to existing software. In our evaluation based on the history of eight popular open source projects, ROSE's topmost three suggestions contained a correct location with a likelihood of more than 70 percent.},
  Booktitle                = {Software Engineering, IEEE Transactions on},
  Day                      = {11},
  DOI                      = {10.1109/TSE.2005.72},
  File                     = {:Zimmermann-etal_2005.pdf:PDF},
  ISSN                     = {0098-5589},
  Owner                    = {cscorley},
  Posted-at                = {2012-07-03 22:47:59},
  Publisher                = {IEEE},
  Timestamp                = {2014.11.27}
}

@InProceedings{Mueller-etal_2000,
  author    = {M\"{u}ller, Hausi A. and Jahnke, Jens H. and Smith, Dennis B. and Storey, Margaret-Anne and Tilley, Scott R. and Wong, Kenny},
  title     = {Reverse Engineering: A Roadmap},
  booktitle = {Proceedings of the Conference on The Future of Software Engineering},
  year      = {2000},
  series    = {ICSE '00},
  pages     = {47--60},
  publisher = {ACM},
  acmid     = {336526},
  doi       = {10.1145/336512.336526},
  file      = {:Muller-etal_2000.pdf:PDF},
  isbn      = {1-58113-253-0},
  keywords  = {data reverse engineering, program comprehension, program understanding, reverse engineering, software analysis, software engineering, software evolution, software maintenance, software migration, software reengineering, software tools, tool adoption, tool evaluation},
  numpages  = {14},
  url       = {http://doi.acm.org/10.1145/336512.336526},
}

@Article{Zhou-etal_2017,
  author  = {Zhou, Yu and Tong, Yanxiang and Chen, Taolue and Han, Jin},
  title   = {Augmenting Bug Localization with Part-of-Speech and Invocation},
  journal = {International Journal of Software Engineering and Knowledge Engineering},
  year    = {2017},
  volume  = {27},
  number  = {06},
  pages   = {925-949},
  doi     = {10.1142/S0218194017500346},
  file    = {:Zhou-etal_2017.pdf:PDF},
  url     = {http://www.worldscientific.com/doi/abs/10.1142/S0218194017500346},
}

@Article{Khatiwada-etal_2017,
  author   = {Saket Khatiwada and Miroslav Tushev and Anas Mahmoud},
  title    = {Just enough semantics: An information theoretic approach for IR-based software bug localization},
  journal  = {Information and Software Technology},
  year     = {2017},
  issn     = {0950-5849},
  doi      = {https://doi.org/10.1016/j.infsof.2017.08.012},
  file     = {:Khatiwada-etal_2017.pdf:PDF},
  keywords = {Information retrieval, Bug localization, Information theory},
  url      = {http://www.sciencedirect.com/science/article/pii/S0950584916302269},
}

@Article{Eddy-etal_2017,
  author   = {Eddy, Brian P. and Kraft, Nicholas A. and Gray, Jeff},
  title    = {Impact of structural weighting on a latent Dirichlet allocation-based feature location technique},
  journal  = {Journal of Software: Evolution and Process},
  year     = {2017},
  pages    = {e1892--n/a},
  issn     = {2047-7481},
  note     = {e1892 smr.1892},
  doi      = {10.1002/smr.1892},
  file     = {:Eddy-etal_2017.pdf:PDF},
  keywords = {feature location, program comprehension, static analysis, term weighting, text retrieval},
  url      = {http://dx.doi.org/10.1002/smr.1892},
}

@Article{Youm-etal_2017,
  author   = {Klaus Changsun Youm and June Ahn and Eunseok Lee},
  title    = {Improved bug localization based on code change histories and bug reports},
  journal  = {Information and Software Technology},
  year     = {2017},
  volume   = {82},
  number   = {Supplement C},
  pages    = {177 - 192},
  issn     = {0950-5849},
  abstract = {Abstract Several issues or defects in released software during the maintenance phase are reported to the development team. It is costly and time-consuming for developers to precisely localize bugs. Bug reports and the code change history are frequently used and provide information for identifying fault locations during the software maintenance phase. It is difficult to standardize the style of bug reports written in natural languages to improve the accuracy of bug localization. The objective of this paper is to propose an effective information retrieval-based bug localization method to find suspicious files and methods for resolving bugs. In this paper, we propose a novel information retrieval-based bug localization approach, termed Bug Localization using Integrated Analysis (BLIA). Our proposed BLIA integrates analyzed data by utilizing texts, stack traces and comments in bug reports, structured information of source files, and the source code change history. We improved the granularity of bug localization from the file level to the method level by extending previous bug repository data. We evaluated the effectiveness of our approach based on experiments using three open-source projects, namely AspectJ, SWT, and ZXing. In terms of the mean average precision, on average our approach improves the metric of BugLocator, BLUiR, BRTracer, AmaLgam and the preliminary version of BLIA by 54%, 42%, 30%, 25% and 15%, respectively, at the file level of bug localization. Compared with prior tools, the results showed that BLIA outperforms these other methods. We analyzed the influence of each score of BLIA from various combinations based on the analyzed information. Our proposed enhancement significantly improved the accuracy. To improve the granularity level of bug localization, a new approach at the method level is proposed and its potential is evaluated.},
  doi      = {https://doi.org/10.1016/j.infsof.2016.11.002},
  file     = {:Youm-etal_2017.pdf:PDF},
  keywords = {Bug localization, Information retrieval, Bug reports, Stack traces, Code change history, Method analysis},
  url      = {http://www.sciencedirect.com/science/article/pii/S0950584916303056},
}

@Article{Liu-etal_2016,
  author  = {Liu, Jin and Tian, Yiqiuzi and Yu, Xiao and Yang, Zhijiang and Jia, Xiangyang and Ma, Chuanxiang and Xu, Zheng},
  title   = {A Multi-Source Approach for Bug Triage},
  journal = {International Journal of Software Engineering and Knowledge Engineering},
  year    = {2016},
  volume  = {26},
  number  = {09n10},
  pages   = {1593-1604},
  doi     = {10.1142/S0218194016710030},
  eprint  = {http://www.worldscientific.com/doi/pdf/10.1142/S0218194016710030},
  file    = {:Liu-etal_2016.pdf:PDF},
  url     = {http://www.worldscientific.com/doi/abs/10.1142/S0218194016710030},
}

@Article{Pandharmise-etal_2017,
  author   = {Komal Pandharmise and Ashabi Pathan and Vaishali Bharane and Ankita Chavan},
  title    = {Bug classification with dimensionality reduction technique},
  journal  = {International Journal Of Emerging Technology and Computer Science},
  year     = {2017},
  volume   = {2},
  number   = {3},
  issn     = {2455-9954},
  abstract = {Bug triage is a critical advance during the time spent bug settling. The objective of bug triage is to appoint another coming bug to the right potential designer. The current bug triage approaches depend on machine learning calculations, which assemble classifiers from the preparation sets of bug reports. By and by, these methodologies experience the ill effects of the extensive scale and low-quality preparing sets. In this paper, we propose the preparation set diminished with both component choice and occurrence determination strategies for bug triage. We consolidate include choice with occurrence determination to enhance the exactness of bug triage. The component choice calculation, occurrence determination calculation Iterative Case Filter, and their mixes are examined in this paper. We assess the preparation set lessening on the bug information of Eclipse. For the preparation set, 70% words and half bug reports are evacuated after the preparation set lessening. The exploratory outcomes demonstrate that the new and little preparing sets can give preferred precision over the first one.
General Terms
ISFS
Keywords},
  file     = {:Pandharmise-etal_2017.pdf:PDF},
  url      = {http://www.aspirepublishers.com/index.php/ijetcs/article/view/130},
}

@InProceedings{Ouni-etal_2016,
  author    = {A. Ouni and R. G. Kula and K. Inoue},
  title     = {Search-Based Peer Reviewers Recommendation in Modern Code Review},
  booktitle = {2016 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  year      = {2016},
  pages     = {367-377},
  abstract  = {Code review is of primary importance in modern software development. It is widely recognized that peer review is an efficient and effective practice for improving software quality and reducing defect proneness. For successful review process, peer reviewers should have a deep experience and knowledge with the code being reviewed, and familiar to work and collaborate together. However, one of the main challenging tasks in modern code review is to find the most appropriate reviewers for submitted code changes. So far, reviewers assignment is still a manual, costly and time-consuming task. In this paper, we introduce a search-based approach, namely RevRec, to provide decision-making support for code change submitters and/or reviewers assigners to identify most appropriate peer reviewers for their code changes. RevRec aims at finding reviewers to be assigned for a code change based on their expertise and collaboration in past reviews using genetic algorithm (GA). We evaluated our approach on a benchmark of three open-source software systems, Android, OpenStack, and Qt. Results indicate that RevRec accurately recommends code reviewers with up to 59% of precision and 74% of recall. Our experiments provide evidence that leveraging reviewers expertise from their prior reviews and the socio-technical aspects of the team work and collaboration is relevant in improving the performance of peer reviewers recommendation in modern code review.},
  doi       = {10.1109/ICSME.2016.65},
  file      = {:Ouni-etal_2016.pdf:PDF},
  keywords  = {Android (operating system);decision making;genetic algorithms;public domain software;search problems;software quality;software reviews;source code (software);team working;Android;OpenStack;Qt;RevRec;code review;decision making support;genetic algorithm;open-source software systems;peer review;precision;recall;search-based approach;search-based peer reviewer recommendation;software development;software quality;team work socio-technical aspects;Genetic algorithms;Search problems;Sociology;Software;Software engineering;Teamwork;Code review;Reviewer recommendation;Search-based Software Engineeging},
}

@InProceedings{Chaparro-etal_2017,
  author    = {Oscar Chaparro and Juan Manuel Florez and Andrian Marcus},
  title     = {Using Observed Behavior to Reformulate Queries during Text Retrieval-based Bug Localization},
  booktitle = {2017 IEEE International Conference on Software Maintenance and Evolution (ICSME)},
  year      = {2017},
  publisher = {IEEE},
  file      = {:Chaparro-etal_2017.pdf:PDF},
}

@InProceedings{Just-etal_2014,
  author    = {Just, Ren{\'e} and Jalali, Darioush and Ernst, Michael D.},
  title     = {Defects4J: A Database of Existing Faults to Enable Controlled Testing Studies for Java Programs},
  booktitle = {Proceedings of the 2014 International Symposium on Software Testing and Analysis},
  year      = {2014},
  series    = {ISSTA 2014},
  pages     = {437--440},
  publisher = {ACM},
  acmid     = {2628055},
  doi       = {10.1145/2610384.2628055},
  file      = {:Just-etal_2014.pdf:PDF},
  isbn      = {978-1-4503-2645-2},
  keywords  = {Bug database, real bugs, testing framework},
  location  = {San Jose, CA, USA},
  numpages  = {4},
  url       = {http://doi.acm.org/10.1145/2610384.2628055},
}

@Article{Mills-etal_2017,
  author        = {Mills, Chris and Bavota, Gabriele and Haiduc, Sonia and Oliveto, Rocco and Marcus, Andrian and Lucia, Andrea De},
  title         = {Predicting Query Quality for Applications of Text Retrieval to Software Engineering Tasks},
  journal       = {ACM Trans. Softw. Eng. Methodol.},
  year          = {2017},
  volume        = {26},
  number        = {1},
  pages         = {3:1--3:45},
  issn          = {1049-331X},
  acmid         = {3078841},
  articleno     = {3},
  doi           = {10.1145/3078841},
  file          = {:Mills-etal_2017.pdf:PDF},
  issue_date    = {July 2017},
  keywords      = {Text retrieval, artifact traceability, concept location},
  numpages      = {45},
  publisher     = {ACM},
  url           = {http://doi.acm.org/10.1145/3078841},
}

@InProceedings{Gethers-Poshyvanyk_2010,
  author       = {Gethers, Malcom and Poshyvanyk, Denys},
  title        = {Using relational topic models to capture coupling among classes in object-oriented software systems},
  booktitle    = {Software Maintenance (ICSM), 2010 IEEE International Conference on},
  year         = {2010},
  pages        = {1--10},
  organization = {IEEE},
  publisher    = {IEEE},
  doi          = {10.1109/icsm.2010.5609687},
  file         = {:Gethers-Poshyvanyk_2010.pdf:PDF},
  isbn         = {978-1-4244-8630-4},
  owner        = {cscorley},
  timestamp    = {2014.12.08},
  url          = {http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5609687},
}

@Article{Agrawal-etal_2018,
  author        = {Amritanshu Agrawal and Wei Fu and Tim Menzies},
  title         = {What is wrong with topic modeling? And how to fix it using search-based software engineering},
  journal       = {Information and Software Technology},
  year          = {2018},
  issn          = {0950-5849},
  __markedentry = {[cscorley:6]},
  doi           = {https://doi.org/10.1016/j.infsof.2018.02.005},
  file          = {:Agrawal-etal_2018.pdf:PDF},
  keywords      = {Topic modeling, Stability, LDA, Tuning, Differential evolution},
  url           = {http://www.sciencedirect.com/science/article/pii/S0950584917300861},
}

@Comment{jabref-meta: databaseType:bibtex;}
